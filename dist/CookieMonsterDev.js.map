{"version":3,"sources":["webpack:///./node_modules/@eastdesire/jscolor/jscolor.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./src/Config/VariablesAndData.js","webpack:///./src/Config/Toggles/ToggleWrinklerButtons.js","webpack:///./src/Data/Scales.ts","webpack:///./src/Main/VariablesAndData.js","webpack:///./src/Disp/BeautifyAndFormatting/Beautify.js","webpack:///./src/Cache/VariablesAndData.js","webpack:///./src/Sim/VariablesAndData.js","webpack:///./src/Disp/VariablesAndData.js","webpack:///./src/Sim/ReplacedGameFunctions/SimAuraMult.js","webpack:///./src/Sim/ReplacedGameFunctions/SimGetSellMultiplier.js","webpack:///./src/Sim/ReplacedGameFunctions/SimEff.js","webpack:///./src/Sim/ReplacedGameFunctions/SimHas.js","webpack:///./src/Sim/ReplacedGameFunctions/SimHasGod.js","webpack:///./src/Sim/ReplacedGameFunctions/SimModifyBuidlingPrice.js","webpack:///./src/Sim/SimulationEvents/SellBuilding.js","webpack:///./src/Disp/BuildingsUpgrades/Buildings.js","webpack:///./src/Disp/BuildingsUpgrades/UpdateUpgradeSectionsHeight.js","webpack:///./src/Disp/BuildingsUpgrades/Upgrades.js","webpack:///./src/Disp/BeautifyAndFormatting/FormatTime.js","webpack:///./src/Disp/BeautifyAndFormatting/GetTimeColour.js","webpack:///./src/Disp/HelperFunctions/GetCPS.js","webpack:///./src/Disp/HelperFunctions/GetWrinkConfigBank.js","webpack:///./src/Disp/InfoBars/CreateDOMElements.js","webpack:///./src/Disp/InfoBars/BottomBar.js","webpack:///./src/Disp/HelperFunctions/UpdateBackground.js","webpack:///./src/Config/SpecificToggles.js","webpack:///./src/Cache/Dragon/CacheDragonAuras.js","webpack:///./src/Sim/InitializeData/InitAchievement.js","webpack:///./src/Sim/ReplacedGameFunctions/SimGetTieredCpsMult.js","webpack:///./src/Sim/InitializeData/InitialBuildingData.js","webpack:///./src/Sim/InitializeData/InitUpgrade.js","webpack:///./src/Sim/SimulationData/CopyData.js","webpack:///./src/Disp/Tooltips/CreateTooltip.js","webpack:///./src/Cache/PP/ColourOfPP.js","webpack:///./src/Cache/CPS/GetCPSBuffMult.js","webpack:///./src/Sim/SimulationData/SimWin.js","webpack:///./src/Sim/Calculations/CalculateGains.js","webpack:///./src/Sim/ReplacedGameFunctions/SimGetHeavenlyMultiplier.js","webpack:///./src/Data/Gamedata.ts","webpack:///./src/Sim/ReplacedGameFunctions/SimHasAchiev.js","webpack:///./src/Sim/Calculations/CheckOtherAchiev.js","webpack:///./src/Sim/SimulationEvents/BuyBuildingBonusIncome.js","webpack:///./src/Disp/HelperFunctions/CalculateGrimoireRefillTime.js","webpack:///./src/Config/Toggles/ToggleToolWarnPos.js","webpack:///./src/Disp/Tooltips/UpdateTooltips.js","webpack:///./src/Disp/Tooltips/TypesOfTooltips/Building.js","webpack:///./src/Disp/Tooltips/TypesOfTooltips/Upgrade.js","webpack:///./src/Disp/Tooltips/TypesOfTooltips/SugarLump.js","webpack:///./src/Disp/HelperFunctions/GetLumpColour.js","webpack:///./src/Disp/Tooltips/TypesOfTooltips/Grimoire.js","webpack:///./src/Disp/Tooltips/TypesOfTooltips/GardenPlots.js","webpack:///./src/Disp/Tooltips/TypesOfTooltips/HarvestAll.js","webpack:///./src/Disp/Tooltips/TypesOfTooltips/WrinklerButton.js","webpack:///./src/Disp/Tooltips/TypesOfTooltips/PantheonGods.js","webpack:///./src/Disp/Tooltips/TypesOfTooltips/Warnings.js","webpack:///./src/Disp/DrawHook.js","webpack:///./src/Disp/InfoBars/TimerBar.js","webpack:///./src/Disp/Tooltips/WrinklerTooltips.js","webpack:///./src/Disp/MenuSections/Refreshmenu.js","webpack:///./src/Main/ClickHook.js","webpack:///./src/Cache/CPS/AverageQueue.js","webpack:///./src/Cache/CPS/CPS.js","webpack:///./src/Cache/PP/Building.js","webpack:///./src/Cache/PP/PP.js","webpack:///./src/Cache/PP/Upgrade.js","webpack:///./src/Sim/SimulationEvents/BuyBuilding.js","webpack:///./src/Cache/PriceAndIncome/PriceAndIncome.js","webpack:///./src/Sim/SimulationEvents/BuyUpgrades.js","webpack:///./src/Cache/Stats/ChainCookies.js","webpack:///./src/Cache/Stats/HeavenlyChips.js","webpack:///./src/Cache/Stats/MissingUpgrades.js","webpack:///./src/Disp/MenuSections/Statistics/CreateMissingUpgrades.js","webpack:///./src/Cache/Stats/Reindeer.js","webpack:///./src/Cache/Stats/Stats.js","webpack:///./src/Cache/TillNextAchievement/AllAmountTillNextAchievement.js","webpack:///./src/Cache/TillNextAchievement/IndividualAmountTillNextAchievement.js","webpack:///./src/Cache/Wrinklers/Wrinklers.js","webpack:///./src/Cache/CacheInit.js","webpack:///./src/Data/SettingsDefault.ts","webpack:///./src/Config/CheckNotificationPermissions.js","webpack:///./src/Config/Toggles/ToggleBotBar.js","webpack:///./src/Disp/HelperFunctions/RefreshScale.js","webpack:///./src/Disp/TabTitle/FavIcon.js","webpack:///./src/Data/SettingClasses/BaseSetting.ts","webpack:///./src/Data/SettingClasses/SettingColours.ts","webpack:///./src/Data/SettingClasses/SettingInputNumber.ts","webpack:///./src/Data/SettingClasses/SettingStandard.ts","webpack:///./src/Data/SettingClasses/SettingVolume.ts","webpack:///./src/Data/SettingsData.js","webpack:///./src/Config/Toggles/ToggleDetailedTime.js","webpack:///./src/Config/Toggles/ToggleUpgradeBarAndColour.js","webpack:///./src/Config/Toggles/ToggleUpgradeBarFixedPos.js","webpack:///./src/Config/Toggles/ToggleGCTimer.js","webpack:///./src/Config/Toggles/ToggleSectionHideButtons.js","webpack:///./src/InitSaveLoad/save.js","webpack:///./src/Cache/Dragon/Dragon.js","webpack:///./src/Sim/SimulationEvents/GodChange.js","webpack:///./src/Sim/InitializeData/InitData.js","webpack:///./src/InitSaveLoad/Variables.js","webpack:///./src/Disp/Notifications/Flash.js","webpack:///./src/Disp/Notifications/Sound.js","webpack:///./src/Disp/Notifications/Notification.js","webpack:///./src/Main/LoopHook.js","webpack:///./src/Disp/HelperFunctions/UpdateAscendState.js","webpack:///./src/Cache/CPS/NoGoldSwitchCPS.js","webpack:///./src/Sim/Calculations/NoGoldenSwitchCalc.js","webpack:///./src/Cache/PantheonGods/CacheGods.js","webpack:///./src/Cache/CPS/SellChoEgg.js","webpack:///./src/Sim/SimulationEvents/SellBuildingForChoEgg.js","webpack:///./src/Cache/CacheLoop.js","webpack:///./src/Cache/CPS/CurrWrinklerCPS.js","webpack:///./src/Main/CheckStates/Ticker.js","webpack:///./src/Main/CheckStates/Season.js","webpack:///./src/Main/CheckStates/Garden.js","webpack:///./src/Main/CheckStates/Grimoire.js","webpack:///./src/Main/CheckStates/Wrinkler.js","webpack:///./src/Main/CheckStates/GoldenCookie.js","webpack:///./src/Disp/GoldenCookieTimers/GoldenCookieTimers.js","webpack:///./src/Disp/HelperFunctions/UpdateColours.js","webpack:///./src/Config/SaveLoadReload/SaveLoadReloadSettings.js","webpack:///./src/Disp/HelperFunctions/PopWrinklers.js","webpack:///./src/Disp/Tooltips/Tooltip.js","webpack:///./src/Main/ReplaceGameElements/TooltipGrimoire.js","webpack:///./src/Main/ReplaceGameElements/NativeGrimoire.js","webpack:///./src/Config/ToggleSetting.js","webpack:///./src/Disp/MenuSections/Statistics/CreateDOMElements.js","webpack:///./src/Disp/MenuSections/Statistics/AddStatsPage.js","webpack:///./src/Disp/MenuSections/Statistics/CreateStatsSections.js","webpack:///./src/Sim/SimulationEvents/ResetAscension.js","webpack:///./src/Disp/MenuSections/Statistics/CreateMissingAchievements.js","webpack:///./src/Data/Sectionheaders.ts","webpack:///./src/Disp/MenuSections/Settings/CreateHeader.js","webpack:///./src/Disp/MenuSections/Settings/CreateOption.js","webpack:///./src/Config/Toggles/ToggleFavourites.js","webpack:///./src/Disp/MenuSections/Prompt.js","webpack:///./src/Main/ReplaceGameFunctions/FixMouse.js","webpack:///./src/Main/ReplaceGameFunctions/ReplaceNative.js","webpack:///./src/Disp/Tooltips/PositionLocation.js","webpack:///./src/Main/ReplaceGameElements/TooltipUpgrades.js","webpack:///./src/Disp/Dragon/Dragon.js","webpack:///./src/Sim/SimulationEvents/AuraChange.js","webpack:///./src/Disp/MenuSections/AddMenus.js","webpack:///./src/Disp/MenuSections/Settings/SettingsPage.js","webpack:///./src/Disp/MenuSections/Info/InfoPage.js","webpack:///./src/Data/Moddata.ts","webpack:///./src/Disp/TabTitle/TabTitle.js","webpack:///./src/Disp/Tooltips/AscendButton.js","webpack:///./src/Main/Initialization.js","webpack:///./src/Disp/Initialization/CssArea.js","webpack:///./src/Disp/BuildingsUpgrades/UpgradeBar.js","webpack:///./src/Disp/Initialization/FlashScreen.js","webpack:///./src/Disp/Initialization/CreateSectionHideButtons.js","webpack:///./src/Disp/Initialization/CreateWrinklerButton.js","webpack:///./src/Disp/Initialization/UpdateBuildingUpgradeStyle.js","webpack:///./src/Disp/Buildings/CreateBuildingLockButtons.js","webpack:///./src/Disp/Buildings/ToggleBuildingLock.js","webpack:///./src/Main/ReplaceGameElements/Tooltips.js","webpack:///./src/Main/WrinklerArea/AddDetectArea.js","webpack:///./src/CookieMonster.js","webpack:///./src/InitSaveLoad/init.js","webpack:///./src/InitSaveLoad/load.js"],"names":["global","factory","module","exports","document","win","Error","window","this","BoxShadow","funcName","elm","jsc","jscolor","initialized","instances","readyQueue","register","addEventListener","pub","init","installBySelector","selector","rootNode","node","elms","querySelectorAll","matchClass","RegExp","lookupClass","i","length","dataOpts","m","undefined","type","toLowerCase","isColorAttrSupported","getDataAttr","className","match","targetElm","optsStr","console","warn","docsRef","opts","trim","parseOptionsStr","e","str","JSON","parse","eParse","looseJSON","Function","eEval","getInstances","inst","targetElement","push","createEl","tagName","el","createElement","setData","nodeOrSelector","sel","querySelector","isNode","val","Node","nodeType","nodeName","removeChildren","firstChild","removeChild","isTextInput","isButton","n","indexOf","isButtonEmpty","value","textContent","isPassiveEventSupported","supported","Object","defineProperty","get","removeEventListener","setAttribute","dataProp","obj","arguments","data","hasOwnProperty","prop","map","removeData","getData","setDefault","name","attrName","getAttribute","setDataAttr","_attachedGroupEvents","attachGroupEvent","groupName","evnt","func","detachGroupEvents","evt","preventDefault","returnValue","captureTarget","target","setCapture","_capturedTarget","releaseTarget","releaseCapture","triggerEvent","eventName","bubbles","cancelable","ev","Event","createEvent","initEvent","dispatchEvent","triggerInputEvent","eventKey","keys","code","keyCode","strList","replace","split","hasClass","classList","contains","addClass","classNames","add","removeClass","repl","remove","getCompStyle","getComputedStyle","currentStyle","setStyle","styles","important","reversible","priority","origStyle","setVal","style","setProperty","hexColor","r","g","b","Math","round","toString","substr","toUpperCase","hexaColor","a","rgbColor","rgbaColor","linearGradient","stdName","prefixes","helper","tryFunc","tryVal","background","getFuncName","Array","prototype","join","call","setBorderRadius","setBoxShadow","getElementPos","relativeToViewport","x","y","rect","getBoundingClientRect","left","top","viewPos","getViewPos","getElementSize","offsetWidth","offsetHeight","getAbsPointerPos","changedTouches","clientX","clientY","getRelPointerPos","targetRect","srcElement","doc","documentElement","pageXOffset","scrollLeft","clientLeft","pageYOffset","scrollTop","clientTop","getViewSize","innerWidth","clientWidth","innerHeight","clientHeight","RGB_HSV","min","v","max","h","HSV_RGB","s","u","floor","parseColorString","ret","rgba","format","parseInt","charAt","mR","mG","mB","mA","par","re","parseFloat","parsePaletteValue","mixed","vals","isArray","colors","color","containsTranparentColor","isAlphaFormat","scaleCanvasForHighDPR","canvas","dpr","devicePixelRatio","width","height","getContext","scale","genColorPreviewCanvas","separatorPos","specWidth","scaleForHighDPR","sepW","previewSeparator","sqSize","chessboardSize","sqColor1","chessboardColor1","sqColor2","chessboardColor2","cWidth","cHeight","ctx","fillStyle","fillRect","start","clearRect","lineWidth","beginPath","strokeStyle","moveTo","lineTo","stroke","genColorPreviewGradient","position","params","apply","redrawPosition","picker","owner","tp","vp","thisObj","fixed","c","ts","vs","pd","getPickerDims","ps","borderW","borderH","l","smartPosition","pp","positionValue","contractShadow","_drawPosition","vShadow","shadowBlur","wrap","boxS","shadow","shadowColor","w","controlBorderWidth","sliderSpace","getControlPadding","sliderSize","getSliderChannel","hasAlphaChannel","pal","getPaletteDims","padding","closeButton","buttonHeight","pW","pH","contentW","contentH","paddedW","paddedH","borderWidth","palette","cols","rows","cellW","cellH","sampleCount","_palette","paletteCols","ceil","paletteSpacing","paletteHeight","pointerBorderWidth","pointerThickness","getPadYChannel","mode","triggerCallback","callback","error","triggerGlobal","eventNames","trigger","_pointerMoveEvent","mouse","touch","_pointerEndEvent","_pointerOrigin","onDocumentKeyUp","tryHide","onWindowResize","onWindowScroll","onParentScroll","onDocumentMouseDown","showOnClick","disabled","show","onControlPointerStart","onPickerTouchStart","controlName","pointerType","registerDragEvents","offset","onDocumentPointerMove","onDocumentPointerEnd","parent","frameElement","ofs","abs","rel","channels","fromHSVA","setPad","setSld","setASld","onPaletteSampleClick","currentTarget","_setFormat","getFormat","paletteSetsAlpha","_paletteHasTransparency","fromRGBA","hideOnPaletteClick","hide","ofsX","ofsY","pointerAbs","xVal","yVal","fmt","createPadCanvas","draw","hGrad","createLinearGradient","addColorStop","vGrad","createSliderGradient","color1","color2","grad","createASliderGradient","hShadow","blur","spread","inset","flags","leaveValue","leaveAlpha","leavePreview","enumOpts","previewPosition","alphaChannel","deprecatedOpts","THIS","setOption","option","oldOpt","newOpt","setter","getOption","getter","drawPicker","_processParentElementsInDOM","box","boxB","pad","padB","padM","padCanvas","cross","crossBY","crossBX","crossLY","crossLX","sld","sldB","sldM","sldGrad","sldPtrS","sldPtrIB","sldPtrMB","sldPtrOB","asld","asldB","asldM","asldGrad","asldPtrS","asldPtrIB","asldPtrMB","asldPtrOB","btn","btnT","appendChild","passive","insetColors","outsetColor","p","displaySlider","displayAlphaSlider","pickerDims","crossOuterSize","crossSize","controlPadding","borderRadius","PI","clear","zIndex","border","borderColor","backgroundColor","opacity","controlBorderColor","cursor","instance","control","pointerBorderColor","pointerColor","overflow","display","sliderInnerSpace","innerHTML","chessboard","si","sampleColor","sampleCssColor","sc","sw","backgroundImage","toDataURL","backgroundRepeat","backgroundPosition","bottom","maxWidth","whiteSpace","buttonColor","font","textAlign","onmousedown","lineHeight","createTextNode","closeText","redrawPad","redrawSld","redrawASld","activeClassName","container","body","parentNode","yChannel","rgb1","rgb2","rgb","toHEXString","sldChannel","isPickerOwner","alpha","onChange","onInput","valueElement","alphaElement","previewElement","previewSize","previewPadding","required","hash","uppercase","forceStyle","hideOnLeave","minS","maxS","minV","maxV","minA","maxA","redraw","exposeColor","success","opt","channel","res","evs","callbackProp","isNaN","hsv","fromHSV","fromRGB","fromString","setPreviewElementBg","setValueElementValue","toHEXAString","toRGBString","toRGBAString","toGrayscale","toCanvas","toBackground","isLight","_currentFormat","processValueInput","processAlphaInput","colorStr","alphaVal","setAlphaElementValue","backgrounds","image","size","repeat","origin","preview","bg","sty","right","_parentElementsProcessed","compStyle","set__palette","options","presetsArr","preset","slice","pres","presets","nonProperties","test","valueElementOrigEvents","oninput","oldVal","initValue","initAlpha","install","shift","ready","triggerNow","installByClassName","JSColor","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","__esModule","d","definition","key","o","enumerable","CMOptions","ToggleWrinklerButtons","WrinklerButtons","Game","elderWrath","metric","shortScale","shortScaleAbbreviated","LastModCount","TooltipLumpBackup","BackupGrimoireLaunch","BackupGrimoireLaunchMod","BackupGrimoireDraw","HasReplaceNativeGrimoireLaunch","HasReplaceNativeGrimoireDraw","LoadMinigames","LastSeasonPopupState","LastTickerFortuneState","LastGardenNextStep","LastGoldenCookieState","LastSpawnedGoldenCookieState","LastMagicBarFull","CurrSpawnedGoldenCookieState","LastWrinklerCount","TooltipBuildBackup","TooltipGrimoireBackup","TooltipUpgradeBackup","BackupFunctions","CycliusDateAtBeginLoop","Date","now","CenturyDateAtBeginLoop","num","floats","forced","decimals","ScaleDecimals","Infinity","Scale","Beautify","Number","isFinite","answer","ScaleCutoff","ScaleSeparator","toLocaleString","toExponential","exponential","AmountOfTenPowerThree","toFixed","log","CacheAverageCookiesFromClicks","CookiesDiff","WrinkDiff","WrinkFattestDiff","ChoEggDiff","ClicksDiff","HeavenlyChipsDiff","CacheLastCPSCheck","CacheLastCookies","CacheLastWrinkCookies","CacheLastWrinkFattestCookies","CacheLastClicks","CacheAverageGainBank","CacheAverageGainWrink","CacheAverageGainWrinkFattest","CacheAverageGainChoEgg","CacheAverageCPS","CacheLastHeavenlyCheck","CacheLastHeavenlyChips","CacheDoRemakeBuildPrices","CacheHadBuildAura","SimBuildingsOwned","SimUpgradesOwned","SimPledges","SimAchievementsOwned","SimHeavenlyPower","SimPrestige","SimDragonAura","SimDragonAura2","SimGod1","SimGod2","SimGod3","SimDoSims","SimEffs","SimCookiesPs","SimCookiesPsRaw","DispCSS","CacheDragonAura","CacheDragonAura2","CacheLastDragonLevel","CacheCostDragonUpgrade","CacheLucky","CacheLuckyReward","CacheLuckyWrathReward","CacheLuckyFrenzy","CacheLuckyRewardFrenzy","CacheLuckyWrathRewardFrenzy","CacheConjure","CacheConjureReward","CacheEdifice","CacheEdificeBuilding","CacheNoGoldSwitchCookiesPS","CacheDragonsFortuneMultAdjustment","CacheGoldenCookiesMult","CacheWrathCookiesMult","CacheHCPerSecond","CacheCentEgg","CacheSeaSpec","CacheLastChoEgg","CacheObjects1","CacheObjects10","CacheObjects100","CacheObjectsNextAchievement","CacheWrinklersTotal","CacheWrinklersNormal","CacheWrinklersFattest","CacheCurrWrinklerCPSMult","CacheCurrWrinklerCount","CacheUpgrades","CacheAverageClicks","CacheMissingUpgrades","CacheMissingUpgradesPrestige","CacheMissingUpgradesCookies","CacheChainRequired","CacheChainRequiredNext","CacheChainMaxReward","CacheChainWrathRequired","CacheChainWrathRequiredNext","CacheChainWrathMaxReward","CacheChainFrenzyRequired","CacheChainFrenzyRequiredNext","CacheChainFrenzyMaxReward","CacheChainFrenzyWrathRequired","CacheChainFrenzyWrathRequiredNext","CacheChainFrenzyWrathMaxReward","CacheRealCookiesEarned","CacheAvgCPSWithChoEgg","CacheSpawnedGoldenShimmer","CacheSeasonPopShimmer","CacheTimeTillNextPrestige","CacheMinPP","CacheMinPPBulk","CachePPArray","CacheGoldenShimmersByID","CacheSellForChoEgg","CacheGods","SimObjects","SimUpgrades","SimAchievements","SimAuraMult","what","dragonAuras","SimGetSellMultiplier","giveBack","SimEff","def","SimHas","it","ascensionMode","pool","tier","bought","SimHasGod","hasGod","Temple","minigame","Objects","god","gods","id","SimModifyBuildingPrice","building","price","ModifiedPrice","hasBuff","fortune","minigameLoaded","godLvl","BuildingSell","build","basePrice","free","amount","noSim","noSimRes","toChange","startingAmount","moni","buyBulk","priceIncrease","modifyBuildingPrice","getSellMultiplier","ColourTextPre","ColourBackPre","ColourBlue","ColourGreen","ColourYellow","ColourOrange","ColourRed","ColourPurple","ColourGray","ColourPink","ColourBrown","ColoursOrdering","TooltipText","SimpleTooltipElements","CMLastAscendState","TooltipWrinklerArea","TooltipWrinkler","TooltipWrinklerBeingShown","CMSayTime","LastTargetBotBar","LastTargetBuildings","LastTargetTooltipBuilding","CookieTimes","ClickTimes","BuffColours","Frenzy","Clot","Dragonflight","TooltipPrice","TooltipBonusIncome","TooltipType","TooltipName","TooltipBonusMouse","LastAscendState","LastNumberOfTimers","GCTimers","Title","FavouriteSettings","UpdateBuildings","arr","buyMode","removeProperty","BuildColour","forEach","SortBuildings","k","sort","amountUntilNext","AmountNeeded","priceUntilNext","gridRow","UpdateUpgradeSectionsHeight","values","getElementsByClassName","section","UpgradesNeverCollapse","minHeight","includes","UpdateUpgrades","UpBarColour","blue","green","yellow","orange","red","purple","gray","UpgradesInStore","me","addedColour","j","childNodes","div","SortUpgrades","nameChecker","arr2","upgrade","findIndex","order","FormatTime","time","longFormat","formattedTime","TimeFormat","GetTimeColour","text","GetCPS","CPSMode","CalcWrink","cookiesPs","cpsSucked","wrinklers","GetWrinkConfigBank","CreateTimer","bars","timerBar","margin","fontSize","marginRight","verticalAlign","colorBar","borderTopRightRadius","borderBottomRightRadius","timer","marginLeft","CreateBotBarBuildingColumn","buildingName","bonus","header","substring","lastChild","paddingLeft","UpdateBotBar","BotBar","count","PPString","PPDisplayTime","timeColour","bulkPrice","cookies","UpdateBackground","Background","LeftBackground","DrawBackground","UpdateBotTimerBarPosition","TimerBar","TimerBarPos","ToggleTimerBar","CacheDragonAuras","dragonAura","dragonAura2","InitAchievement","achievementName","Achievements","you","SimGetTieredCpsMult","mult","tieredUpgrades","Tiers","special","synergies","syn","buildingTie1","buildingTie2","grandma","Grandma","misfortune","vanilla","InitialBuildingData","cps","magicCpS","ComputeCps","GrandmaSynergies","UpgradesByPool","kitten","Portal","baseCps","baseCPS","InitUpgrade","upgradeName","Upgrades","power","level","pow","CopyData","UpgradesOwned","pledges","AchievementsOwned","heavenlyPower","prestige","totalCookies","slot","won","TooltipCreateHeader","fontWeight","TooltipCreateCalculationSection","tooltip","income","marginBottom","click","production","ColourOfPP","PPSecondsLowerLimit","PPOnlyConsiderBuyable","GetCPSBuffMult","buffs","multCpS","SimWin","CalculateGains","effs","myEffs","ii","heavenlyMult","SimGetHeavenlyMultiplier","heralds","cookieUpgrades","buildMult","sin","santaLevel","milkProgress","milkMult","catMult","storedCps","eggMult","day","startDate","lumps","rawCookiesPs","CpsAchievements","threshold","shimmerTypes","golden","auraMult","bakeryName","goldenSwitchMult","upgrades","goldenCookieUpgrades","veilMult","runModHookOnValue","Fortunes","HalloCookies","ChristCookies","ValCookies","PlantDrops","SimHasAchiev","CheckOtherAchiev","grandmas","buildingsOwned","mathematician","base10","minAmount","ObjectsById","Cursor","hasAllHalloCook","hasAllChristCook","list","fortunes","BuyBuildingsBonusIncome","tieredAchievs","achievUnlock","lastAchievementsOwned","CalculateGrimoireRefillTime","currentMagic","maxMagic","targetMagic","magic","fps","ToggleToolWarnPos","ToolWarnPos","UpdateTooltips","tooltipBox","paddingBottom","TooltipBuildUpgrade","increase","productionAchievs","HasAchiev","achiev","nextProductionAchiev","ObjectsTillNext","PPOfAmount","PPFrag","Building","getPrice","bonusMouse","previousSibling","chocolate","Upgrade","TooltipLump","lumpType","lumpColour","lumpCurrentType","SugarLump","spellCost","getSpellCost","spellsById","TooltipGrim","magicM","recover","recoverColour","conjure","reward","seperator","loss","Grimoire","Farm","TooltipPlots","plot","mature","plantsById","plantName","GardenPlots","totalGain","mortal","tile","immortal","matureBase","HarvestAll","WrinklerReward","WrinklerButton","TooltipPantheon","GodID","cps1","cps2","cps3","PantheonGods","getElementById","TooltipWarn","create","boxId","labelTextFront","labelTextBack","deficitId","transition","labelDiv","labelSpan","deficitDiv","deficitSpan","ToolWarnUser","bonusIncomeUsed","ToolWarnBon","limitLucky","bonusNoFren","ToolWarnLucky","ToolWarnLuckyFrenzy","limitLuckyFrenzy","ToolWarnConjure","limitConjure","ToolWarnConjureFrenzy","limitConjureFrenzy","ToolWarnEdifice","children","Warnings","CMDrawHook","prefs","autosave","drawT","onMenu","Stats","innerText","sayTime","T","maxWidthTwoBar","maxWidthOneBar","numberOfTimers","AutosaveTimerBar","timeTillNextAutosave","OnAscend","TimerBarOverlay","spawned","Has","minTime","maxTime","season","reindeer","BuffTimerBars","classColour","UpdateTimerBar","TooltipWrink","showingTooltip","phase","selected","placeholder","wrinkler","minWidth","escape","CheckWrinklerTooltip","sucked","toSuck","UpdateWrinklerTooltip","UpStats","UpdateMenu","monospace","CMClickHook","addLatest","computedMouseCps","CMAvgQueue","constructor","maxLength","queue","newValue","calcAverage","timePeriod","calcSum","reduce","CacheAvgCPS","currDate","choEggTotal","cookiesEarned","timeDiff","bankDiffAvg","wrinkDiffAvg","wrinkFattestDiffAvg","choEggDiffAvg","clicksDiffAvg","cookieClicks","cpsLength","AvgCPSHist","choEgg","HasUnlocked","AvgClicksHist","CacheColour","PPRigidelMode","getSumPrice","PPExcludeTop","CachePP","indexOfMin","CacheBuildingsPP","CookieMonsterData","Objects1","stringify","Objects10","Objects100","entries","BuildingGetPrice","CacheBuildingIncome","result","CacheBuildingsPrices","CacheIncome","bonusIncome","unlocked","CountsAsUpgradeOwned","diffMouseCPS","multClick","out","MouseCps","BuyUpgradesBonusIncome","MaxChainCookieReward","digit","maxPayout","totalFromChain","nextMoni","nextRequired","chain","LN10","CacheChain","cpsBuffMult","CacheHeavenlyChipsPS","chipsOwned","HowMuchPrestige","cookiesReset","ascendNowToGet","heavenlyChipsDiffAvg","CacheAllMissingUpgrades","classes","noFrame","crates","icon","iconFunction","getDynamicTooltip","crateMissing","CacheSeasonSpec","CacheStatsCookies","CacheGoldenAndWrathCookiesMults","goldenMult","wrathMult","eff","AllAmountTillNextAchievement","forceRecalc","TotalNeeded","tillNext","AchievementsAtStart","index","lastIndexWithChange","IndividualAmountTillNextAchievement","CacheWrinklers","InitCache","DetailedTime","UpgradeBarFixedPos","DragonAuraInfo","GrimoireBar","GCTimer","Favicon","HideSectionsButtons","TooltipAmor","TooltipAscendButton","MissingUpgrades","MissingAchievements","HeavenlyChipsTarget","ShowMissedGC","GeneralSound","GCNotification","GCFlash","ColourGCFlash","GCSound","GCVolume","GCSoundURL","FortuneNotification","FortuneFlash","ColourFortuneFlash","FortuneSound","FortuneVolume","FortuneSoundURL","SeaNotification","SeaFlash","ColourSeaFlash","SeaSound","SeaVolume","SeaSoundURL","GardFlash","ColourGardFlash","GardSound","GardVolume","GardSoundURL","MagicNotification","MagicFlash","ColourMagicFlash","MagicSound","MagicVolume","MagicSoundURL","WrinklerNotification","WrinklerFlash","ColourWrinklerFlash","WrinklerSound","WrinklerVolume","WrinklerSoundURL","WrinklerMaxNotification","WrinklerMaxFlash","ColourWrinklerMaxFlash","WrinklerMaxSound","WrinklerMaxVolume","WrinklerMaxSoundURL","BulkBuyBlock","Header","Favourite","Calculation","Notation","Colours","BarsDisplay","Tooltip","Statistics","Notification","NotificationGeneral","NotificationGC","NotificationFC","NotificationSea","NotificationGard","NotificationMagi","NotificationWrink","NotificationWrinkMax","Miscellaneous","Lucky","Chain","Spells","Garden","Prestige","Wrink","Sea","Achievs","Misc","InfoTab","ToggleOnOff","checkNotificationPromise","requestPermission","then","ToggleBotBar","RefreshScale","BeautifyAll","RefreshStore","RebuildUpgrades","UpdateFavicon","wrath","href","Setting","group","SettingColours","desc","super","SettingInputNumber","label","SettingStandard","toggle","SettingVolume","insertBefore","UpBarColor","save","favouriteSettings","settings","version","CacheDragonCost","dragonLevel","dragonLevels","buy","replaceAll","cost","CalculateChangeGod","CurrentSlot","godsById","InitData","isInitializing","Flash","config","setTimeout","url","sndConfig","volConfig","sound","Audio","volume","play","CreateNotification","notifyConfig","title","message","visibilityState","badge","CMLoopHook","AscendTimer","mods","CachePantheonGods","sellTotal","Bank","marketGoods","goods","goodsVal","marketGood","stock","cookiesPsRawHighest","buildingsToSacrifice","highestBuilding","SellBuildingsForChoEgg","CacheSellAllForChoEgg","hasBuildAura","godMult","CacheCurrWrinklerCPS","cookiesToNext","HowManyCookiesReset","LoopCache","TickerEffect","shimmers","spawnLead","nextStep","CheckMagicMeter","CurrentWrinklers","getWrinklersMax","CheckWrinklerCount","cookie","fontFamily","pointerEvents","onclick","pop","onmouseover","filter","webkitFilter","onmouseout","CreateGCTimer","transform","life","UpdateColours","SaveConfig","saveString","b64_to_utf8","unescape","localStorage","getItem","CookieMonsterSave","newSaveString","setItem","utf8_to_b64","LoadConfig","CMConfig","Colors","mod","PopAllNormalWrinklers","hp","CreateTooltip","buildPrice","amortizeAmount","storedTotalCps","globalCpsMult","crateTooltip","lumpTooltip","spellTooltip","tileTooltip","toolTooltip","godTooltip","slotTooltip","area","ReplaceTooltipGrimoire","dynamic","wobble","ReplaceNativeGrimoireDraw","magicBarTextL","ReplaceNativeGrimoire","launch","ReplaceNativeGrimoireLaunch","ToggleConfigVolume","ToggleHeader","StatsHeader","span","StatsListing","listingName","StatsMissDispListing","current","StatsMissDisp","theMissDisp","frag","createDocumentFragment","missing","AddMenuStats","stats","goldCookTooltip","luckyColour","luckyTime","luckyReqFrag","luckyReqSpan","luckyReqSmall","luckyColourFrenzy","luckyTimeFrenzy","luckyReqFrenFrag","luckyReqFrenSpan","luckyReqFrenSmall","luckySplit","luckyRewardMaxSpan","luckyRewardFrenzyMaxSpan","luckyCurBase","luckyCurSpan","chainColour","chainTime","chainReqFrag","chainReqSpan","chainReqSmall","chainWrathColour","chainWrathTime","chainWrathReqFrag","chainWrathReqSpan","chainWrathReqSmall","chainColourFrenzy","chainTimeFrenzy","chainReqFrenFrag","chainReqFrenSpan","chainReqFrenSmall","chainWrathColourFrenzy","chainWrathTimeFrenzy","chainWrathReqFrenFrag","chainWrathReqFrenSpan","chainWrathReqFrenSmall","chainCurMax","chainCur","chainCurWrath","conjureColour","conjureTime","conjureReqFrag","conjureReqSpan","conjureReqSmall","conjureFrenzyColour","conjureFrenzyCur","conjureFrenzyTime","conjureFrenzyReqFrag","conjureFrenzyReqSpan","conjureFrenzyReqSmall","bakeberryColour","bakeberryFrag","chocorootColour","chocorootFrag","queenbeetColour","queenbeetFrag","duketaterColour","duketaterFrag","missingPlantDrops","possiblePresMax","neededCook","cookiesNextFrag","cookiesNextSmall","heavenlyChips","HCTarget","CookiesTillTarget","resetBonus","newHeavenlyChips","curCPS","ResetCPS","ResetBonus","resetFrag","resetSmall","currentPrestige","willHave","willGet","delta7","next7Reset","next7Total","frag7","delta777","next777Reset","next777Total","frag777","delta777777","next777777Reset","next777777Total","frag777777","popAllFrag","popAllA","popFattestFrag","popFattestA","specDisp","missingHalloweenCookies","missingChristmasCookies","missingValentineCookies","missingNormalEggs","eggDrops","missingRareEggs","rareEggDrops","centEgg","failRateHalloween","dropRateMult","obtainedCookiesChance","failRateChristmas","dropRateEgg","StartingFailRate","failRateEgg","succesRateEgg","obtainedEggs","obtainedRareEggs","pNormal1","pRare1","pRedrop","missedGoldenClicks","menuSection","prestigeUpgradesMissing","titlefrag","PrestigeUpgrades","normalUpgradesMissing","tech","nextSibling","cookieUpgradesMissing","achievs","parentElement","achievsCrate","AchievementsById","mouseDown","setOnCrate","tags","neuromancy","sesame","descFunc","tagsStr","CrateTooltipLockedAchievements","AddMissingAchievements","ConfigGroups","ConfigGroupsNotification","CreatePrefHeader","CreatePrefOption","FavStar","ele","ToggleFavouriteSetting","FavouriteSettingPlaceholder","CreateFavouriteStar","ToggleConfig","float","percent","slider","step","onchange","input","readOnly","inputPrompt","content","promptWrapL","promptL","PlaySound","promptAnchorL","darkenL","focus","promptOn","UpdatePrompt","CookieMonsterPrompt","outerHTML","ClosePrompt","innerSpan","FixMouseY","timerBarHeight","mouseY","ReplaceNative","drawMod","from","update","updateMod","warnOffset","tta","tt","UpdateTooltipLocation","UpdateWrinklers","UpdateSpecial","ClickCookie","ClickProduct","DescribeDragonAura","aura","bonusCPS","priceOfChange","CalculateChangeAura","timeToRecover","bonusCPSPercentage","div2","AddAuraInfo","ToggleSpecialMenu","on","shouldHide","AddDragonLevelUpTooltip","subGroup","subGroupObject","resDef","resDefBut","AddMenuPref","info","description","notes","menu","AddMenuInfo","AddMenu","detail","Logic","titleGC","titleFC","titleSP","addFC","addSP","lastIndexOf","spawn","UpdateTitle","ReplaceAscendTooltip","InitializeCookieMonster","head","borderTop","textShadow","table","tbody","firstCol","td","CreateBotBar","CMTimerBarAutosave","CMTimerBarGC","CMTimerBarRen","TimerBarBuffTimers","CreateTimerBar","UpgradeBar","legend","legendLine","CreateUpgradeBarLegend","upgradeNumber","CreateUpgradeBar","WhiteScreen","CreateFlashScreen","CreateSectionHideButtons","getElementsByTagName","CreateFavicon","CreateSimpleTooltip","append","CreateWrinklerButtons","productButtons","button","ToggleBuildingLock","canLumps","child","coords","ReplaceTooltipPantheon","popups","Popup","Notify","Win","CM","proceed","confirm","registerHook","load","registerMod"],"mappings":"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MAAMmI,EAAmB,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAG1DC,EAAuB,CAClC,GACA,GACA,IACA,IACA,KACA,QACA,QACA,OACA,OACA,MACA,MACA,MACA,QACA,SACA,SACA,cACA,UACA,SACA,YACA,UACA,WACA,SACA,WACA,YACA,YACA,kBAIWC,EAAkC,CAC7C,GACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,KACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,KACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,KACA,OC3IK,IAAIC,EAEAC,EAGAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAnBAC,EAAqB,GAErBC,EAAwB,GACxBC,EAAuB,GAOvBC,EAAkB,GAalBC,EAAyBC,KAAKC,MAI9BC,EAAyBF,KAAKC,MCf1B,SAAS,EAASE,EAAKC,EAAQC,GAC5C,MAAMC,EAAWnC,EAAUoC,cAAgB,EAC3C,GAAIJ,IAAQK,IACV,MAAO,WAET,QAAmB,IAARL,EACT,MAAO,IAET,GAAwB,IAApBhC,EAAUsC,MACZ,OAAOX,EAAgBY,SAASP,EAAKC,GAEvC,GAAIO,OAAOC,SAAST,GAAM,CACxB,GAAIA,EAAM,EACR,MAAO,IAAI,EAASne,KAAKuN,IAAI4Q,MAE/B,IAAIU,EAAS,GACb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","file":"CookieMonsterDev.js","sourcesContent":["/**\r\n * jscolor - JavaScript Color Picker\r\n *\r\n * @link    http://jscolor.com\r\n * @license For open source use: GPLv3\r\n *          For commercial use: JSColor Commercial License\r\n * @author  Jan Odvarko - East Desire\r\n *\r\n * See usage examples at http://jscolor.com/examples/\r\n */\r\n\r\n\r\n(function (global, factory) {\r\n\r\n\t'use strict';\r\n\r\n\tif (typeof module === 'object' && typeof module.exports === 'object') {\r\n\t\t// Export jscolor as a module\r\n\t\tmodule.exports = global.document ?\r\n\t\t\tfactory (global) :\r\n\t\t\tfunction (win) {\r\n\t\t\t\tif (!win.document) {\r\n\t\t\t\t\tthrow new Error('jscolor needs a window with document');\r\n\t\t\t\t}\r\n\t\t\t\treturn factory(win);\r\n\t\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Default use (no module export)\r\n\tfactory(global);\r\n\r\n})(typeof window !== 'undefined' ? window : this, function (window) { // BEGIN factory\r\n\r\n// BEGIN jscolor code\r\n\r\n\r\n'use strict';\r\n\r\n\r\nvar jscolor = (function () { // BEGIN jscolor\r\n\r\nvar jsc = {\r\n\r\n\r\n\tinitialized : false,\r\n\r\n\tinstances : [], // created instances of jscolor\r\n\r\n\treadyQueue : [], // functions waiting to be called after init\r\n\r\n\r\n\tregister : function () {\r\n\t\tif (typeof window !== 'undefined' && window.document) {\r\n\t\t\twindow.document.addEventListener('DOMContentLoaded', jsc.pub.init, false);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tinstallBySelector : function (selector, rootNode) {\r\n\t\trootNode = rootNode ? jsc.node(rootNode) : window.document;\r\n\t\tif (!rootNode) {\r\n\t\t\tthrow new Error('Missing root node');\r\n\t\t}\r\n\r\n\t\tvar elms = rootNode.querySelectorAll(selector);\r\n\r\n\t\t// for backward compatibility with DEPRECATED installation/configuration using className\r\n\t\tvar matchClass = new RegExp('(^|\\\\s)(' + jsc.pub.lookupClass + ')(\\\\s*(\\\\{[^}]*\\\\})|\\\\s|$)', 'i');\r\n\r\n\t\tfor (var i = 0; i < elms.length; i += 1) {\r\n\r\n\t\t\tif (elms[i].jscolor && elms[i].jscolor instanceof jsc.pub) {\r\n\t\t\t\tcontinue; // jscolor already installed on this element\r\n\t\t\t}\r\n\r\n\t\t\tif (elms[i].type !== undefined && elms[i].type.toLowerCase() == 'color' && jsc.isColorAttrSupported) {\r\n\t\t\t\tcontinue; // skips inputs of type 'color' if supported by the browser\r\n\t\t\t}\r\n\r\n\t\t\tvar dataOpts, m;\r\n\r\n\t\t\tif (\r\n\t\t\t\t(dataOpts = jsc.getDataAttr(elms[i], 'jscolor')) !== null ||\r\n\t\t\t\t(elms[i].className && (m = elms[i].className.match(matchClass))) // installation using className (DEPRECATED)\r\n\t\t\t) {\r\n\t\t\t\tvar targetElm = elms[i];\r\n\r\n\t\t\t\tvar optsStr = '';\r\n\t\t\t\tif (dataOpts !== null) {\r\n\t\t\t\t\toptsStr = dataOpts;\r\n\r\n\t\t\t\t} else if (m) { // installation using className (DEPRECATED)\r\n\t\t\t\t\tconsole.warn('Installation using class name is DEPRECATED. Use data-jscolor=\"\" attribute instead.' + jsc.docsRef);\r\n\t\t\t\t\tif (m[4]) {\r\n\t\t\t\t\t\toptsStr = m[4];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar opts = null;\r\n\t\t\t\tif (optsStr.trim()) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\topts = jsc.parseOptionsStr(optsStr);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.warn(e + '\\n' + optsStr);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tnew jsc.pub(targetElm, opts);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tparseOptionsStr : function (str) {\r\n\t\tvar opts = null;\r\n\r\n\t\ttry {\r\n\t\t\topts = JSON.parse(str);\r\n\r\n\t\t} catch (eParse) {\r\n\t\t\tif (!jsc.pub.looseJSON) {\r\n\t\t\t\tthrow new Error('Could not parse jscolor options as JSON: ' + eParse);\r\n\t\t\t} else {\r\n\t\t\t\t// loose JSON syntax is enabled -> try to evaluate the options string as JavaScript object\r\n\t\t\t\ttry {\r\n\t\t\t\t\topts = (new Function ('var opts = (' + str + '); return typeof opts === \"object\" ? opts : {};'))();\r\n\t\t\t\t} catch (eEval) {\r\n\t\t\t\t\tthrow new Error('Could not evaluate jscolor options: ' + eEval);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn opts;\r\n\t},\r\n\r\n\r\n\tgetInstances : function () {\r\n\t\tvar inst = [];\r\n\t\tfor (var i = 0; i < jsc.instances.length; i += 1) {\r\n\t\t\t// if the targetElement still exists, the instance is considered \"alive\"\r\n\t\t\tif (jsc.instances[i] && jsc.instances[i].targetElement) {\r\n\t\t\t\tinst.push(jsc.instances[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn inst;\r\n\t},\r\n\r\n\r\n\tcreateEl : function (tagName) {\r\n\t\tvar el = window.document.createElement(tagName);\r\n\t\tjsc.setData(el, 'gui', true);\r\n\t\treturn el;\r\n\t},\r\n\r\n\r\n\tnode : function (nodeOrSelector) {\r\n\t\tif (!nodeOrSelector) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tif (typeof nodeOrSelector === 'string') {\r\n\t\t\t// query selector\r\n\t\t\tvar sel = nodeOrSelector;\r\n\t\t\tvar el = null;\r\n\t\t\ttry {\r\n\t\t\t\tel = window.document.querySelector(sel);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.warn(e);\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\tif (!el) {\r\n\t\t\t\tconsole.warn('No element matches the selector: %s', sel);\r\n\t\t\t}\r\n\t\t\treturn el;\r\n\t\t}\r\n\r\n\t\tif (jsc.isNode(nodeOrSelector)) {\r\n\t\t\t// DOM node\r\n\t\t\treturn nodeOrSelector;\r\n\t\t}\r\n\r\n\t\tconsole.warn('Invalid node of type %s: %s', typeof nodeOrSelector, nodeOrSelector);\r\n\t\treturn null;\r\n\t},\r\n\r\n\r\n\t// See https://stackoverflow.com/questions/384286/\r\n\tisNode : function (val) {\r\n\t\tif (typeof Node === 'object') {\r\n\t\t\treturn val instanceof Node;\r\n\t\t}\r\n\t\treturn val && typeof val === 'object' && typeof val.nodeType === 'number' && typeof val.nodeName === 'string';\r\n\t},\r\n\r\n\r\n\tnodeName : function (node) {\r\n\t\tif (node && node.nodeName) {\r\n\t\t\treturn node.nodeName.toLowerCase();\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\r\n\tremoveChildren : function (node) {\r\n\t\twhile (node.firstChild) {\r\n\t\t\tnode.removeChild(node.firstChild);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tisTextInput : function (el) {\r\n\t\treturn el && jsc.nodeName(el) === 'input' && el.type.toLowerCase() === 'text';\r\n\t},\r\n\r\n\r\n\tisButton : function (el) {\r\n\t\tif (!el) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar n = jsc.nodeName(el);\r\n\t\treturn (\r\n\t\t\t(n === 'button') ||\r\n\t\t\t(n === 'input' && ['button', 'submit', 'reset'].indexOf(el.type.toLowerCase()) > -1)\r\n\t\t);\r\n\t},\r\n\r\n\r\n\tisButtonEmpty : function (el) {\r\n\t\tswitch (jsc.nodeName(el)) {\r\n\t\t\tcase 'input': return (!el.value || el.value.trim() === '');\r\n\t\t\tcase 'button': return (el.textContent.trim() === '');\r\n\t\t}\r\n\t\treturn null; // could not determine element's text\r\n\t},\r\n\r\n\r\n\t// See https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n\tisPassiveEventSupported : (function () {\r\n\t\tvar supported = false;\r\n\r\n\t\ttry {\r\n\t\t\tvar opts = Object.defineProperty({}, 'passive', {\r\n\t\t\t\tget: function () { supported = true; }\r\n\t\t\t});\r\n\t\t\twindow.addEventListener('testPassive', null, opts);\r\n\t\t\twindow.removeEventListener('testPassive', null, opts);\r\n\t\t} catch (e) {}\r\n\r\n\t\treturn supported;\r\n\t})(),\r\n\r\n\r\n\tisColorAttrSupported : (function () {\r\n\t\tvar elm = window.document.createElement('input');\r\n\t\tif (elm.setAttribute) {\r\n\t\t\telm.setAttribute('type', 'color');\r\n\t\t\tif (elm.type.toLowerCase() == 'color') {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t})(),\r\n\r\n\r\n\tdataProp : '_data_jscolor',\r\n\r\n\r\n\t// usage:\r\n\t//   setData(obj, prop, value)\r\n\t//   setData(obj, {prop:value, ...})\r\n\t//\r\n\tsetData : function () {\r\n\t\tvar obj = arguments[0];\r\n\r\n\t\tif (arguments.length === 3) {\r\n\t\t\t// setting a single property\r\n\t\t\tvar data = obj.hasOwnProperty(jsc.dataProp) ? obj[jsc.dataProp] : (obj[jsc.dataProp] = {});\r\n\t\t\tvar prop = arguments[1];\r\n\t\t\tvar value = arguments[2];\r\n\r\n\t\t\tdata[prop] = value;\r\n\t\t\treturn true;\r\n\r\n\t\t} else if (arguments.length === 2 && typeof arguments[1] === 'object') {\r\n\t\t\t// setting multiple properties\r\n\t\t\tvar data = obj.hasOwnProperty(jsc.dataProp) ? obj[jsc.dataProp] : (obj[jsc.dataProp] = {});\r\n\t\t\tvar map = arguments[1];\r\n\r\n\t\t\tfor (var prop in map) {\r\n\t\t\t\tif (map.hasOwnProperty(prop)) {\r\n\t\t\t\t\tdata[prop] = map[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tthrow new Error('Invalid arguments');\r\n\t},\r\n\r\n\r\n\t// usage:\r\n\t//   removeData(obj, prop, [prop...])\r\n\t//\r\n\tremoveData : function () {\r\n\t\tvar obj = arguments[0];\r\n\t\tif (!obj.hasOwnProperty(jsc.dataProp)) {\r\n\t\t\treturn true; // data object does not exist\r\n\t\t}\r\n\t\tfor (var i = 1; i < arguments.length; i += 1) {\r\n\t\t\tvar prop = arguments[i];\r\n\t\t\tdelete obj[jsc.dataProp][prop];\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\r\n\tgetData : function (obj, prop, setDefault) {\r\n\t\tif (!obj.hasOwnProperty(jsc.dataProp)) {\r\n\t\t\t// data object does not exist\r\n\t\t\tif (setDefault !== undefined) {\r\n\t\t\t\tobj[jsc.dataProp] = {}; // create data object\r\n\t\t\t} else {\r\n\t\t\t\treturn undefined; // no value to return\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar data = obj[jsc.dataProp];\r\n\r\n\t\tif (!data.hasOwnProperty(prop) && setDefault !== undefined) {\r\n\t\t\tdata[prop] = setDefault;\r\n\t\t}\r\n\t\treturn data[prop];\r\n\t},\r\n\r\n\r\n\tgetDataAttr : function (el, name) {\r\n\t\tvar attrName = 'data-' + name;\r\n\t\tvar attrValue = el.getAttribute(attrName);\r\n\t\treturn attrValue;\r\n\t},\r\n\r\n\r\n\tsetDataAttr : function (el, name, value) {\r\n\t\tvar attrName = 'data-' + name;\r\n\t\tel.setAttribute(attrName, value);\r\n\t},\r\n\r\n\r\n\t_attachedGroupEvents : {},\r\n\r\n\r\n\tattachGroupEvent : function (groupName, el, evnt, func) {\r\n\t\tif (!jsc._attachedGroupEvents.hasOwnProperty(groupName)) {\r\n\t\t\tjsc._attachedGroupEvents[groupName] = [];\r\n\t\t}\r\n\t\tjsc._attachedGroupEvents[groupName].push([el, evnt, func]);\r\n\t\tel.addEventListener(evnt, func, false);\r\n\t},\r\n\r\n\r\n\tdetachGroupEvents : function (groupName) {\r\n\t\tif (jsc._attachedGroupEvents.hasOwnProperty(groupName)) {\r\n\t\t\tfor (var i = 0; i < jsc._attachedGroupEvents[groupName].length; i += 1) {\r\n\t\t\t\tvar evt = jsc._attachedGroupEvents[groupName][i];\r\n\t\t\t\tevt[0].removeEventListener(evt[1], evt[2], false);\r\n\t\t\t}\r\n\t\t\tdelete jsc._attachedGroupEvents[groupName];\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tpreventDefault : function (e) {\r\n\t\tif (e.preventDefault) { e.preventDefault(); }\r\n\t\te.returnValue = false;\r\n\t},\r\n\r\n\r\n\tcaptureTarget : function (target) {\r\n\t\t// IE\r\n\t\tif (target.setCapture) {\r\n\t\t\tjsc._capturedTarget = target;\r\n\t\t\tjsc._capturedTarget.setCapture();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\treleaseTarget : function () {\r\n\t\t// IE\r\n\t\tif (jsc._capturedTarget) {\r\n\t\t\tjsc._capturedTarget.releaseCapture();\r\n\t\t\tjsc._capturedTarget = null;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\ttriggerEvent : function (el, eventName, bubbles, cancelable) {\r\n\t\tif (!el) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar ev = null;\r\n\r\n\t\tif (typeof Event === 'function') {\r\n\t\t\tev = new Event(eventName, {\r\n\t\t\t\tbubbles: bubbles,\r\n\t\t\t\tcancelable: cancelable\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// IE\r\n\t\t\tev = window.document.createEvent('Event');\r\n\t\t\tev.initEvent(eventName, bubbles, cancelable);\r\n\t\t}\r\n\r\n\t\tif (!ev) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// so that we know that the event was triggered internally\r\n\t\tjsc.setData(ev, 'internal', true);\r\n\r\n\t\tel.dispatchEvent(ev);\r\n\t\treturn true;\r\n\t},\r\n\r\n\r\n\ttriggerInputEvent : function (el, eventName, bubbles, cancelable) {\r\n\t\tif (!el) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (jsc.isTextInput(el)) {\r\n\t\t\tjsc.triggerEvent(el, eventName, bubbles, cancelable);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\teventKey : function (ev) {\r\n\t\tvar keys = {\r\n\t\t\t9: 'Tab',\r\n\t\t\t13: 'Enter',\r\n\t\t\t27: 'Escape',\r\n\t\t};\r\n\t\tif (typeof ev.code === 'string') {\r\n\t\t\treturn ev.code;\r\n\t\t} else if (ev.keyCode !== undefined && keys.hasOwnProperty(ev.keyCode)) {\r\n\t\t\treturn keys[ev.keyCode];\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\r\n\r\n\tstrList : function (str) {\r\n\t\tif (!str) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\treturn str.replace(/^\\s+|\\s+$/g, '').split(/\\s+/);\r\n\t},\r\n\r\n\r\n\t// The className parameter (str) can only contain a single class name\r\n\thasClass : function (elm, className) {\r\n\t\tif (!className) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (elm.classList !== undefined) {\r\n\t\t\treturn elm.classList.contains(className);\r\n\t\t}\r\n\t\t// polyfill\r\n\t\treturn -1 != (' ' + elm.className.replace(/\\s+/g, ' ') + ' ').indexOf(' ' + className + ' ');\r\n\t},\r\n\r\n\r\n\t// The className parameter (str) can contain multiple class names separated by whitespace\r\n\taddClass : function (elm, className) {\r\n\t\tvar classNames = jsc.strList(className);\r\n\r\n\t\tif (elm.classList !== undefined) {\r\n\t\t\tfor (var i = 0; i < classNames.length; i += 1) {\r\n\t\t\t\telm.classList.add(classNames[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// polyfill\r\n\t\tfor (var i = 0; i < classNames.length; i += 1) {\r\n\t\t\tif (!jsc.hasClass(elm, classNames[i])) {\r\n\t\t\t\telm.className += (elm.className ? ' ' : '') + classNames[i];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// The className parameter (str) can contain multiple class names separated by whitespace\r\n\tremoveClass : function (elm, className) {\r\n\t\tvar classNames = jsc.strList(className);\r\n\r\n\t\tif (elm.classList !== undefined) {\r\n\t\t\tfor (var i = 0; i < classNames.length; i += 1) {\r\n\t\t\t\telm.classList.remove(classNames[i]);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// polyfill\r\n\t\tfor (var i = 0; i < classNames.length; i += 1) {\r\n\t\t\tvar repl = new RegExp(\r\n\t\t\t\t'^\\\\s*' + classNames[i] + '\\\\s*|' +\r\n\t\t\t\t'\\\\s*' + classNames[i] + '\\\\s*$|' +\r\n\t\t\t\t'\\\\s+' + classNames[i] + '(\\\\s+)',\r\n\t\t\t\t'g'\r\n\t\t\t);\r\n\t\t\telm.className = elm.className.replace(repl, '$1');\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tgetCompStyle : function (elm) {\r\n\t\tvar compStyle = window.getComputedStyle ? window.getComputedStyle(elm) : elm.currentStyle;\r\n\r\n\t\t// Note: In Firefox, getComputedStyle returns null in a hidden iframe,\r\n\t\t// that's why we need to check if the returned value is non-empty\r\n\t\tif (!compStyle) {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t\treturn compStyle;\r\n\t},\r\n\r\n\r\n\t// Note:\r\n\t//   Setting a property to NULL reverts it to the state before it was first set\r\n\t//   with the 'reversible' flag enabled\r\n\t//\r\n\tsetStyle : function (elm, styles, important, reversible) {\r\n\t\t// using '' for standard priority (IE10 apparently doesn't like value undefined)\r\n\t\tvar priority = important ? 'important' : '';\r\n\t\tvar origStyle = null;\r\n\r\n\t\tfor (var prop in styles) {\r\n\t\t\tif (styles.hasOwnProperty(prop)) {\r\n\t\t\t\tvar setVal = null;\r\n\r\n\t\t\t\tif (styles[prop] === null) {\r\n\t\t\t\t\t// reverting a property value\r\n\r\n\t\t\t\t\tif (!origStyle) {\r\n\t\t\t\t\t\t// get the original style object, but dont't try to create it if it doesn't exist\r\n\t\t\t\t\t\torigStyle = jsc.getData(elm, 'origStyle');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (origStyle && origStyle.hasOwnProperty(prop)) {\r\n\t\t\t\t\t\t// we have property's original value -> use it\r\n\t\t\t\t\t\tsetVal = origStyle[prop];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// setting a property value\r\n\r\n\t\t\t\t\tif (reversible) {\r\n\t\t\t\t\t\tif (!origStyle) {\r\n\t\t\t\t\t\t\t// get the original style object and if it doesn't exist, create it\r\n\t\t\t\t\t\t\torigStyle = jsc.getData(elm, 'origStyle', {});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!origStyle.hasOwnProperty(prop)) {\r\n\t\t\t\t\t\t\t// original property value not yet stored -> store it\r\n\t\t\t\t\t\t\torigStyle[prop] = elm.style[prop];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetVal = styles[prop];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (setVal !== null) {\r\n\t\t\t\t\telm.style.setProperty(prop, setVal, priority);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\thexColor : function (r, g, b) {\r\n\t\treturn '#' + (\r\n\t\t\t('0' + Math.round(r).toString(16)).substr(-2) +\r\n\t\t\t('0' + Math.round(g).toString(16)).substr(-2) +\r\n\t\t\t('0' + Math.round(b).toString(16)).substr(-2)\r\n\t\t).toUpperCase();\r\n\t},\r\n\r\n\r\n\thexaColor : function (r, g, b, a) {\r\n\t\treturn '#' + (\r\n\t\t\t('0' + Math.round(r).toString(16)).substr(-2) +\r\n\t\t\t('0' + Math.round(g).toString(16)).substr(-2) +\r\n\t\t\t('0' + Math.round(b).toString(16)).substr(-2) +\r\n\t\t\t('0' + Math.round(a * 255).toString(16)).substr(-2)\r\n\t\t).toUpperCase();\r\n\t},\r\n\r\n\r\n\trgbColor : function (r, g, b) {\r\n\t\treturn 'rgb(' +\r\n\t\t\tMath.round(r) + ',' +\r\n\t\t\tMath.round(g) + ',' +\r\n\t\t\tMath.round(b) +\r\n\t\t')';\r\n\t},\r\n\r\n\r\n\trgbaColor : function (r, g, b, a) {\r\n\t\treturn 'rgba(' +\r\n\t\t\tMath.round(r) + ',' +\r\n\t\t\tMath.round(g) + ',' +\r\n\t\t\tMath.round(b) + ',' +\r\n\t\t\t(Math.round((a===undefined || a===null ? 1 : a) * 100) / 100) +\r\n\t\t')';\r\n\t},\r\n\r\n\r\n\tlinearGradient : (function () {\r\n\r\n\t\tfunction getFuncName () {\r\n\t\t\tvar stdName = 'linear-gradient';\r\n\t\t\tvar prefixes = ['', '-webkit-', '-moz-', '-o-', '-ms-'];\r\n\t\t\tvar helper = window.document.createElement('div');\r\n\r\n\t\t\tfor (var i = 0; i < prefixes.length; i += 1) {\r\n\t\t\t\tvar tryFunc = prefixes[i] + stdName;\r\n\t\t\t\tvar tryVal = tryFunc + '(to right, rgba(0,0,0,0), rgba(0,0,0,0))';\r\n\r\n\t\t\t\thelper.style.background = tryVal;\r\n\t\t\t\tif (helper.style.background) { // CSS background successfully set -> function name is supported\r\n\t\t\t\t\treturn tryFunc;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn stdName; // fallback to standard 'linear-gradient' without vendor prefix\r\n\t\t}\r\n\r\n\t\tvar funcName = getFuncName();\r\n\r\n\t\treturn function () {\r\n\t\t\treturn funcName + '(' + Array.prototype.join.call(arguments, ', ') + ')';\r\n\t\t};\r\n\r\n\t})(),\r\n\r\n\r\n\tsetBorderRadius : function (elm, value) {\r\n\t\tjsc.setStyle(elm, {'border-radius' : value || '0'});\r\n\t},\r\n\r\n\r\n\tsetBoxShadow : function (elm, value) {\r\n\t\tjsc.setStyle(elm, {'box-shadow': value || 'none'});\r\n\t},\r\n\r\n\r\n\tgetElementPos : function (e, relativeToViewport) {\r\n\t\tvar x=0, y=0;\r\n\t\tvar rect = e.getBoundingClientRect();\r\n\t\tx = rect.left;\r\n\t\ty = rect.top;\r\n\t\tif (!relativeToViewport) {\r\n\t\t\tvar viewPos = jsc.getViewPos();\r\n\t\t\tx += viewPos[0];\r\n\t\t\ty += viewPos[1];\r\n\t\t}\r\n\t\treturn [x, y];\r\n\t},\r\n\r\n\r\n\tgetElementSize : function (e) {\r\n\t\treturn [e.offsetWidth, e.offsetHeight];\r\n\t},\r\n\r\n\r\n\t// get pointer's X/Y coordinates relative to viewport\r\n\tgetAbsPointerPos : function (e) {\r\n\t\tvar x = 0, y = 0;\r\n\t\tif (typeof e.changedTouches !== 'undefined' && e.changedTouches.length) {\r\n\t\t\t// touch devices\r\n\t\t\tx = e.changedTouches[0].clientX;\r\n\t\t\ty = e.changedTouches[0].clientY;\r\n\t\t} else if (typeof e.clientX === 'number') {\r\n\t\t\tx = e.clientX;\r\n\t\t\ty = e.clientY;\r\n\t\t}\r\n\t\treturn { x: x, y: y };\r\n\t},\r\n\r\n\r\n\t// get pointer's X/Y coordinates relative to target element\r\n\tgetRelPointerPos : function (e) {\r\n\t\tvar target = e.target || e.srcElement;\r\n\t\tvar targetRect = target.getBoundingClientRect();\r\n\r\n\t\tvar x = 0, y = 0;\r\n\r\n\t\tvar clientX = 0, clientY = 0;\r\n\t\tif (typeof e.changedTouches !== 'undefined' && e.changedTouches.length) {\r\n\t\t\t// touch devices\r\n\t\t\tclientX = e.changedTouches[0].clientX;\r\n\t\t\tclientY = e.changedTouches[0].clientY;\r\n\t\t} else if (typeof e.clientX === 'number') {\r\n\t\t\tclientX = e.clientX;\r\n\t\t\tclientY = e.clientY;\r\n\t\t}\r\n\r\n\t\tx = clientX - targetRect.left;\r\n\t\ty = clientY - targetRect.top;\r\n\t\treturn { x: x, y: y };\r\n\t},\r\n\r\n\r\n\tgetViewPos : function () {\r\n\t\tvar doc = window.document.documentElement;\r\n\t\treturn [\r\n\t\t\t(window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0),\r\n\t\t\t(window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\r\n\t\t];\r\n\t},\r\n\r\n\r\n\tgetViewSize : function () {\r\n\t\tvar doc = window.document.documentElement;\r\n\t\treturn [\r\n\t\t\t(window.innerWidth || doc.clientWidth),\r\n\t\t\t(window.innerHeight || doc.clientHeight),\r\n\t\t];\r\n\t},\r\n\r\n\r\n\t// r: 0-255\r\n\t// g: 0-255\r\n\t// b: 0-255\r\n\t//\r\n\t// returns: [ 0-360, 0-100, 0-100 ]\r\n\t//\r\n\tRGB_HSV : function (r, g, b) {\r\n\t\tr /= 255;\r\n\t\tg /= 255;\r\n\t\tb /= 255;\r\n\t\tvar n = Math.min(Math.min(r,g),b);\r\n\t\tvar v = Math.max(Math.max(r,g),b);\r\n\t\tvar m = v - n;\r\n\t\tif (m === 0) { return [ null, 0, 100 * v ]; }\r\n\t\tvar h = r===n ? 3+(b-g)/m : (g===n ? 5+(r-b)/m : 1+(g-r)/m);\r\n\t\treturn [\r\n\t\t\t60 * (h===6?0:h),\r\n\t\t\t100 * (m/v),\r\n\t\t\t100 * v\r\n\t\t];\r\n\t},\r\n\r\n\r\n\t// h: 0-360\r\n\t// s: 0-100\r\n\t// v: 0-100\r\n\t//\r\n\t// returns: [ 0-255, 0-255, 0-255 ]\r\n\t//\r\n\tHSV_RGB : function (h, s, v) {\r\n\t\tvar u = 255 * (v / 100);\r\n\r\n\t\tif (h === null) {\r\n\t\t\treturn [ u, u, u ];\r\n\t\t}\r\n\r\n\t\th /= 60;\r\n\t\ts /= 100;\r\n\r\n\t\tvar i = Math.floor(h);\r\n\t\tvar f = i%2 ? h-i : 1-(h-i);\r\n\t\tvar m = u * (1 - s);\r\n\t\tvar n = u * (1 - s * f);\r\n\t\tswitch (i) {\r\n\t\t\tcase 6:\r\n\t\t\tcase 0: return [u,n,m];\r\n\t\t\tcase 1: return [n,u,m];\r\n\t\t\tcase 2: return [m,u,n];\r\n\t\t\tcase 3: return [m,n,u];\r\n\t\t\tcase 4: return [n,m,u];\r\n\t\t\tcase 5: return [u,m,n];\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tparseColorString : function (str) {\r\n\t\tvar ret = {\r\n\t\t\trgba: null,\r\n\t\t\tformat: null // 'hex' | 'hexa' | 'rgb' | 'rgba'\r\n\t\t};\r\n\r\n\t\tvar m;\r\n\r\n\t\tif (m = str.match(/^\\W*([0-9A-F]{3,8})\\W*$/i)) {\r\n\t\t\t// HEX notation\r\n\r\n\t\t\tif (m[1].length === 8) {\r\n\t\t\t\t// 8-char notation (= with alpha)\r\n\t\t\t\tret.format = 'hexa';\r\n\t\t\t\tret.rgba = [\r\n\t\t\t\t\tparseInt(m[1].substr(0,2),16),\r\n\t\t\t\t\tparseInt(m[1].substr(2,2),16),\r\n\t\t\t\t\tparseInt(m[1].substr(4,2),16),\r\n\t\t\t\t\tparseInt(m[1].substr(6,2),16) / 255\r\n\t\t\t\t];\r\n\r\n\t\t\t} else if (m[1].length === 6) {\r\n\t\t\t\t// 6-char notation\r\n\t\t\t\tret.format = 'hex';\r\n\t\t\t\tret.rgba = [\r\n\t\t\t\t\tparseInt(m[1].substr(0,2),16),\r\n\t\t\t\t\tparseInt(m[1].substr(2,2),16),\r\n\t\t\t\t\tparseInt(m[1].substr(4,2),16),\r\n\t\t\t\t\tnull\r\n\t\t\t\t];\r\n\r\n\t\t\t} else if (m[1].length === 3) {\r\n\t\t\t\t// 3-char notation\r\n\t\t\t\tret.format = 'hex';\r\n\t\t\t\tret.rgba = [\r\n\t\t\t\t\tparseInt(m[1].charAt(0) + m[1].charAt(0),16),\r\n\t\t\t\t\tparseInt(m[1].charAt(1) + m[1].charAt(1),16),\r\n\t\t\t\t\tparseInt(m[1].charAt(2) + m[1].charAt(2),16),\r\n\t\t\t\t\tnull\r\n\t\t\t\t];\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn ret;\r\n\t\t}\r\n\r\n\t\tif (m = str.match(/^\\W*rgba?\\(([^)]*)\\)\\W*$/i)) {\r\n\t\t\t// rgb(...) or rgba(...) notation\r\n\r\n\t\t\tvar par = m[1].split(',');\r\n\t\t\tvar re = /^\\s*(\\d+|\\d*\\.\\d+|\\d+\\.\\d*)\\s*$/;\r\n\t\t\tvar mR, mG, mB, mA;\r\n\t\t\tif (\r\n\t\t\t\tpar.length >= 3 &&\r\n\t\t\t\t(mR = par[0].match(re)) &&\r\n\t\t\t\t(mG = par[1].match(re)) &&\r\n\t\t\t\t(mB = par[2].match(re))\r\n\t\t\t) {\r\n\t\t\t\tret.format = 'rgb';\r\n\t\t\t\tret.rgba = [\r\n\t\t\t\t\tparseFloat(mR[1]) || 0,\r\n\t\t\t\t\tparseFloat(mG[1]) || 0,\r\n\t\t\t\t\tparseFloat(mB[1]) || 0,\r\n\t\t\t\t\tnull\r\n\t\t\t\t];\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tpar.length >= 4 &&\r\n\t\t\t\t\t(mA = par[3].match(re))\r\n\t\t\t\t) {\r\n\t\t\t\t\tret.format = 'rgba';\r\n\t\t\t\t\tret.rgba[3] = parseFloat(mA[1]) || 0;\r\n\t\t\t\t}\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\r\n\tparsePaletteValue : function (mixed) {\r\n\t\tvar vals = [];\r\n\r\n\t\tif (typeof mixed === 'string') { // input is a string of space separated color values\r\n\t\t\t// rgb() and rgba() may contain spaces too, so let's find all color values by regex\r\n\t\t\tmixed.replace(/#[0-9A-F]{3}([0-9A-F]{3})?|rgba?\\(([^)]*)\\)/ig, function (val) {\r\n\t\t\t\tvals.push(val);\r\n\t\t\t});\r\n\t\t} else if (Array.isArray(mixed)) { // input is an array of color values\r\n\t\t\tvals = mixed;\r\n\t\t}\r\n\r\n\t\t// convert all values into uniform color format\r\n\r\n\t\tvar colors = [];\r\n\r\n\t\tfor (var i = 0; i < vals.length; i++) {\r\n\t\t\tvar color = jsc.parseColorString(vals[i]);\r\n\t\t\tif (color) {\r\n\t\t\t\tcolors.push(color);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn colors;\r\n\t},\r\n\r\n\r\n\tcontainsTranparentColor : function (colors) {\r\n\t\tfor (var i = 0; i < colors.length; i++) {\r\n\t\t\tvar a = colors[i].rgba[3];\r\n\t\t\tif (a !== null && a < 1.0) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\r\n\tisAlphaFormat : function (format) {\r\n\t\tswitch (format.toLowerCase()) {\r\n\t\tcase 'hexa':\r\n\t\tcase 'rgba':\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\r\n\r\n\t// Canvas scaling for retina displays\r\n\t//\r\n\t// adapted from https://www.html5rocks.com/en/tutorials/canvas/hidpi/\r\n\t//\r\n\tscaleCanvasForHighDPR : function (canvas) {\r\n\t\tvar dpr = window.devicePixelRatio || 1;\r\n\t\tcanvas.width *= dpr;\r\n\t\tcanvas.height *= dpr;\r\n\t\tvar ctx = canvas.getContext('2d');\r\n\t\tctx.scale(dpr, dpr);\r\n\t},\r\n\r\n\r\n\tgenColorPreviewCanvas : function (color, separatorPos, specWidth, scaleForHighDPR) {\r\n\r\n\t\tvar sepW = Math.round(jsc.pub.previewSeparator.length);\r\n\t\tvar sqSize = jsc.pub.chessboardSize;\r\n\t\tvar sqColor1 = jsc.pub.chessboardColor1;\r\n\t\tvar sqColor2 = jsc.pub.chessboardColor2;\r\n\r\n\t\tvar cWidth = specWidth ? specWidth : sqSize * 2;\r\n\t\tvar cHeight = sqSize * 2;\r\n\r\n\t\tvar canvas = jsc.createEl('canvas');\r\n\t\tvar ctx = canvas.getContext('2d');\r\n\r\n\t\tcanvas.width = cWidth;\r\n\t\tcanvas.height = cHeight;\r\n\t\tif (scaleForHighDPR) {\r\n\t\t\tjsc.scaleCanvasForHighDPR(canvas);\r\n\t\t}\r\n\r\n\t\t// transparency chessboard - background\r\n\t\tctx.fillStyle = sqColor1;\r\n\t\tctx.fillRect(0, 0, cWidth, cHeight);\r\n\r\n\t\t// transparency chessboard - squares\r\n\t\tctx.fillStyle = sqColor2;\r\n\t\tfor (var x = 0; x < cWidth; x += sqSize * 2) {\r\n\t\t\tctx.fillRect(x, 0, sqSize, sqSize);\r\n\t\t\tctx.fillRect(x + sqSize, sqSize, sqSize, sqSize);\r\n\t\t}\r\n\r\n\t\tif (color) {\r\n\t\t\t// actual color in foreground\r\n\t\t\tctx.fillStyle = color;\r\n\t\t\tctx.fillRect(0, 0, cWidth, cHeight);\r\n\t\t}\r\n\r\n\t\tvar start = null;\r\n\t\tswitch (separatorPos) {\r\n\t\t\tcase 'left':\r\n\t\t\t\tstart = 0;\r\n\t\t\t\tctx.clearRect(0, 0, sepW/2, cHeight);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right':\r\n\t\t\t\tstart = cWidth - sepW;\r\n\t\t\t\tctx.clearRect(cWidth - (sepW/2), 0, sepW/2, cHeight);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif (start !== null) {\r\n\t\t\tctx.lineWidth = 1;\r\n\t\t\tfor (var i = 0; i < jsc.pub.previewSeparator.length; i += 1) {\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.strokeStyle = jsc.pub.previewSeparator[i];\r\n\t\t\t\tctx.moveTo(0.5 + start + i, 0);\r\n\t\t\t\tctx.lineTo(0.5 + start + i, cHeight);\r\n\t\t\t\tctx.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tcanvas: canvas,\r\n\t\t\twidth: cWidth,\r\n\t\t\theight: cHeight,\r\n\t\t};\r\n\t},\r\n\r\n\r\n\t// if position or width is not set => fill the entire element (0%-100%)\r\n\tgenColorPreviewGradient : function (color, position, width) {\r\n\t\tvar params = [];\r\n\r\n\t\tif (position && width) {\r\n\t\t\tparams = [\r\n\t\t\t\t'to ' + {'left':'right', 'right':'left'}[position],\r\n\t\t\t\tcolor + ' 0%',\r\n\t\t\t\tcolor + ' ' + width + 'px',\r\n\t\t\t\t'rgba(0,0,0,0) ' + (width + 1) + 'px',\r\n\t\t\t\t'rgba(0,0,0,0) 100%',\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\tparams = [\r\n\t\t\t\t'to right',\r\n\t\t\t\tcolor + ' 0%',\r\n\t\t\t\tcolor + ' 100%',\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\treturn jsc.linearGradient.apply(this, params);\r\n\t},\r\n\r\n\r\n\tredrawPosition : function () {\r\n\r\n\t\tif (!jsc.picker || !jsc.picker.owner) {\r\n\t\t\treturn; // picker is not shown\r\n\t\t}\r\n\r\n\t\tvar thisObj = jsc.picker.owner;\r\n\r\n\t\tvar tp, vp;\r\n\r\n\t\tif (thisObj.fixed) {\r\n\t\t\t// Fixed elements are positioned relative to viewport,\r\n\t\t\t// therefore we can ignore the scroll offset\r\n\t\t\ttp = jsc.getElementPos(thisObj.targetElement, true); // target pos\r\n\t\t\tvp = [0, 0]; // view pos\r\n\t\t} else {\r\n\t\t\ttp = jsc.getElementPos(thisObj.targetElement); // target pos\r\n\t\t\tvp = jsc.getViewPos(); // view pos\r\n\t\t}\r\n\r\n\t\tvar ts = jsc.getElementSize(thisObj.targetElement); // target size\r\n\t\tvar vs = jsc.getViewSize(); // view size\r\n\t\tvar pd = jsc.getPickerDims(thisObj);\r\n\t\tvar ps = [pd.borderW, pd.borderH]; // picker outer size\r\n\t\tvar a, b, c;\r\n\t\tswitch (thisObj.position.toLowerCase()) {\r\n\t\t\tcase 'left': a=1; b=0; c=-1; break;\r\n\t\t\tcase 'right':a=1; b=0; c=1; break;\r\n\t\t\tcase 'top':  a=0; b=1; c=-1; break;\r\n\t\t\tdefault:     a=0; b=1; c=1; break;\r\n\t\t}\r\n\t\tvar l = (ts[b]+ps[b])/2;\r\n\r\n\t\t// compute picker position\r\n\t\tif (!thisObj.smartPosition) {\r\n\t\t\tvar pp = [\r\n\t\t\t\ttp[a],\r\n\t\t\t\ttp[b]+ts[b]-l+l*c\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\tvar pp = [\r\n\t\t\t\t-vp[a]+tp[a]+ps[a] > vs[a] ?\r\n\t\t\t\t\t(-vp[a]+tp[a]+ts[a]/2 > vs[a]/2 && tp[a]+ts[a]-ps[a] >= 0 ? tp[a]+ts[a]-ps[a] : tp[a]) :\r\n\t\t\t\t\ttp[a],\r\n\t\t\t\t-vp[b]+tp[b]+ts[b]+ps[b]-l+l*c > vs[b] ?\r\n\t\t\t\t\t(-vp[b]+tp[b]+ts[b]/2 > vs[b]/2 && tp[b]+ts[b]-l-l*c >= 0 ? tp[b]+ts[b]-l-l*c : tp[b]+ts[b]-l+l*c) :\r\n\t\t\t\t\t(tp[b]+ts[b]-l+l*c >= 0 ? tp[b]+ts[b]-l+l*c : tp[b]+ts[b]-l-l*c)\r\n\t\t\t];\r\n\t\t}\r\n\r\n\t\tvar x = pp[a];\r\n\t\tvar y = pp[b];\r\n\t\tvar positionValue = thisObj.fixed ? 'fixed' : 'absolute';\r\n\t\tvar contractShadow =\r\n\t\t\t(pp[0] + ps[0] > tp[0] || pp[0] < tp[0] + ts[0]) &&\r\n\t\t\t(pp[1] + ps[1] < tp[1] + ts[1]);\r\n\r\n\t\tjsc._drawPosition(thisObj, x, y, positionValue, contractShadow);\r\n\t},\r\n\r\n\r\n\t_drawPosition : function (thisObj, x, y, positionValue, contractShadow) {\r\n\t\tvar vShadow = contractShadow ? 0 : thisObj.shadowBlur; // px\r\n\r\n\t\tjsc.picker.wrap.style.position = positionValue;\r\n\t\tjsc.picker.wrap.style.left = x + 'px';\r\n\t\tjsc.picker.wrap.style.top = y + 'px';\r\n\r\n\t\tjsc.setBoxShadow(\r\n\t\t\tjsc.picker.boxS,\r\n\t\t\tthisObj.shadow ?\r\n\t\t\t\tnew jsc.BoxShadow(0, vShadow, thisObj.shadowBlur, 0, thisObj.shadowColor) :\r\n\t\t\t\tnull);\r\n\t},\r\n\r\n\r\n\tgetPickerDims : function (thisObj) {\r\n\t\tvar w = 2 * thisObj.controlBorderWidth + thisObj.width;\r\n\t\tvar h = 2 * thisObj.controlBorderWidth + thisObj.height;\r\n\r\n\t\tvar sliderSpace = 2 * thisObj.controlBorderWidth + 2 * jsc.getControlPadding(thisObj) + thisObj.sliderSize;\r\n\r\n\t\tif (jsc.getSliderChannel(thisObj)) {\r\n\t\t\tw += sliderSpace;\r\n\t\t}\r\n\t\tif (thisObj.hasAlphaChannel()) {\r\n\t\t\tw += sliderSpace;\r\n\t\t}\r\n\r\n\t\tvar pal = jsc.getPaletteDims(thisObj, w);\r\n\r\n\t\tif (pal.height) {\r\n\t\t\th += pal.height + thisObj.padding;\r\n\t\t}\r\n\t\tif (thisObj.closeButton) {\r\n\t\t\th += 2 * thisObj.controlBorderWidth + thisObj.padding + thisObj.buttonHeight;\r\n\t\t}\r\n\r\n\t\tvar pW = w + (2 * thisObj.padding);\r\n\t\tvar pH = h + (2 * thisObj.padding);\r\n\r\n\t\treturn {\r\n\t\t\tcontentW: w,\r\n\t\t\tcontentH: h,\r\n\t\t\tpaddedW: pW,\r\n\t\t\tpaddedH: pH,\r\n\t\t\tborderW: pW + (2 * thisObj.borderWidth),\r\n\t\t\tborderH: pH + (2 * thisObj.borderWidth),\r\n\t\t\tpalette: pal,\r\n\t\t};\r\n\t},\r\n\r\n\r\n\tgetPaletteDims : function (thisObj, width) {\r\n\t\tvar cols = 0, rows = 0, cellW = 0, cellH = 0, height = 0;\r\n\t\tvar sampleCount = thisObj._palette ? thisObj._palette.length : 0;\r\n\r\n\t\tif (sampleCount) {\r\n\t\t\tcols = thisObj.paletteCols;\r\n\t\t\trows = cols > 0 ? Math.ceil(sampleCount / cols) : 0;\r\n\r\n\t\t\t// color sample's dimensions (includes border)\r\n\t\t\tcellW = Math.max(1, Math.floor((width - ((cols - 1) * thisObj.paletteSpacing)) / cols));\r\n\t\t\tcellH = thisObj.paletteHeight ? Math.min(thisObj.paletteHeight, cellW) : cellW;\r\n\t\t}\r\n\r\n\t\tif (rows) {\r\n\t\t\theight =\r\n\t\t\t\trows * cellH +\r\n\t\t\t\t(rows - 1) * thisObj.paletteSpacing;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tcols: cols,\r\n\t\t\trows: rows,\r\n\t\t\tcellW: cellW,\r\n\t\t\tcellH: cellH,\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t};\r\n\t},\r\n\r\n\r\n\tgetControlPadding : function (thisObj) {\r\n\t\treturn Math.max(\r\n\t\t\tthisObj.padding / 2,\r\n\t\t\t(2 * thisObj.pointerBorderWidth + thisObj.pointerThickness) - thisObj.controlBorderWidth\r\n\t\t);\r\n\t},\r\n\r\n\r\n\tgetPadYChannel : function (thisObj) {\r\n\t\tswitch (thisObj.mode.charAt(1).toLowerCase()) {\r\n\t\t\tcase 'v': return 'v'; break;\r\n\t\t}\r\n\t\treturn 's';\r\n\t},\r\n\r\n\r\n\tgetSliderChannel : function (thisObj) {\r\n\t\tif (thisObj.mode.length > 2) {\r\n\t\t\tswitch (thisObj.mode.charAt(2).toLowerCase()) {\r\n\t\t\t\tcase 's': return 's'; break;\r\n\t\t\t\tcase 'v': return 'v'; break;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n\r\n\r\n\t// calls function specified in picker's property\r\n\ttriggerCallback : function (thisObj, prop) {\r\n\t\tif (!thisObj[prop]) {\r\n\t\t\treturn; // callback func not specified\r\n\t\t}\r\n\t\tvar callback = null;\r\n\r\n\t\tif (typeof thisObj[prop] === 'string') {\r\n\t\t\t// string with code\r\n\t\t\ttry {\r\n\t\t\t\tcallback = new Function (thisObj[prop]);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// function\r\n\t\t\tcallback = thisObj[prop];\r\n\t\t}\r\n\r\n\t\tif (callback) {\r\n\t\t\tcallback.call(thisObj);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t// Triggers a color change related event(s) on all picker instances.\r\n\t// It is possible to specify multiple events separated with a space.\r\n\ttriggerGlobal : function (eventNames) {\r\n\t\tvar inst = jsc.getInstances();\r\n\t\tfor (var i = 0; i < inst.length; i += 1) {\r\n\t\t\tinst[i].trigger(eventNames);\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t_pointerMoveEvent : {\r\n\t\tmouse: 'mousemove',\r\n\t\ttouch: 'touchmove'\r\n\t},\r\n\t_pointerEndEvent : {\r\n\t\tmouse: 'mouseup',\r\n\t\ttouch: 'touchend'\r\n\t},\r\n\r\n\r\n\t_pointerOrigin : null,\r\n\t_capturedTarget : null,\r\n\r\n\r\n\tonDocumentKeyUp : function (e) {\r\n\t\tif (['Tab', 'Escape'].indexOf(jsc.eventKey(e)) !== -1) {\r\n\t\t\tif (jsc.picker && jsc.picker.owner) {\r\n\t\t\t\tjsc.picker.owner.tryHide();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tonWindowResize : function (e) {\r\n\t\tjsc.redrawPosition();\r\n\t},\r\n\r\n\r\n\tonWindowScroll : function (e) {\r\n\t\tjsc.redrawPosition();\r\n\t},\r\n\r\n\r\n\tonParentScroll : function (e) {\r\n\t\t// hide the picker when one of the parent elements is scrolled\r\n\t\tif (jsc.picker && jsc.picker.owner) {\r\n\t\t\tjsc.picker.owner.tryHide();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tonDocumentMouseDown : function (e) {\r\n\t\tvar target = e.target || e.srcElement;\r\n\r\n\t\tif (target.jscolor && target.jscolor instanceof jsc.pub) { // clicked targetElement -> show picker\r\n\t\t\tif (target.jscolor.showOnClick && !target.disabled) {\r\n\t\t\t\ttarget.jscolor.show();\r\n\t\t\t}\r\n\t\t} else if (jsc.getData(target, 'gui')) { // clicked jscolor's GUI element\r\n\t\t\tvar control = jsc.getData(target, 'control');\r\n\t\t\tif (control) {\r\n\t\t\t\t// jscolor's control\r\n\t\t\t\tjsc.onControlPointerStart(e, target, jsc.getData(target, 'control'), 'mouse');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// mouse is outside the picker's controls -> hide the color picker!\r\n\t\t\tif (jsc.picker && jsc.picker.owner) {\r\n\t\t\t\tjsc.picker.owner.tryHide();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tonPickerTouchStart : function (e) {\r\n\t\tvar target = e.target || e.srcElement;\r\n\r\n\t\tif (jsc.getData(target, 'control')) {\r\n\t\t\tjsc.onControlPointerStart(e, target, jsc.getData(target, 'control'), 'touch');\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tonControlPointerStart : function (e, target, controlName, pointerType) {\r\n\t\tvar thisObj = jsc.getData(target, 'instance');\r\n\r\n\t\tjsc.preventDefault(e);\r\n\t\tjsc.captureTarget(target);\r\n\r\n\t\tvar registerDragEvents = function (doc, offset) {\r\n\t\t\tjsc.attachGroupEvent('drag', doc, jsc._pointerMoveEvent[pointerType],\r\n\t\t\t\tjsc.onDocumentPointerMove(e, target, controlName, pointerType, offset));\r\n\t\t\tjsc.attachGroupEvent('drag', doc, jsc._pointerEndEvent[pointerType],\r\n\t\t\t\tjsc.onDocumentPointerEnd(e, target, controlName, pointerType));\r\n\t\t};\r\n\r\n\t\tregisterDragEvents(window.document, [0, 0]);\r\n\r\n\t\tif (window.parent && window.frameElement) {\r\n\t\t\tvar rect = window.frameElement.getBoundingClientRect();\r\n\t\t\tvar ofs = [-rect.left, -rect.top];\r\n\t\t\tregisterDragEvents(window.parent.window.document, ofs);\r\n\t\t}\r\n\r\n\t\tvar abs = jsc.getAbsPointerPos(e);\r\n\t\tvar rel = jsc.getRelPointerPos(e);\r\n\t\tjsc._pointerOrigin = {\r\n\t\t\tx: abs.x - rel.x,\r\n\t\t\ty: abs.y - rel.y\r\n\t\t};\r\n\r\n\t\tswitch (controlName) {\r\n\t\tcase 'pad':\r\n\t\t\t// if the value slider is at the bottom, move it up\r\n\t\t\tif (jsc.getSliderChannel(thisObj) === 'v' && thisObj.channels.v === 0) {\r\n\t\t\t\tthisObj.fromHSVA(null, null, 100, null);\r\n\t\t\t}\r\n\t\t\tjsc.setPad(thisObj, e, 0, 0);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'sld':\r\n\t\t\tjsc.setSld(thisObj, e, 0);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'asld':\r\n\t\t\tjsc.setASld(thisObj, e, 0);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthisObj.trigger('input');\r\n\t},\r\n\r\n\r\n\tonDocumentPointerMove : function (e, target, controlName, pointerType, offset) {\r\n\t\treturn function (e) {\r\n\t\t\tvar thisObj = jsc.getData(target, 'instance');\r\n\t\t\tswitch (controlName) {\r\n\t\t\tcase 'pad':\r\n\t\t\t\tjsc.setPad(thisObj, e, offset[0], offset[1]);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'sld':\r\n\t\t\t\tjsc.setSld(thisObj, e, offset[1]);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'asld':\r\n\t\t\t\tjsc.setASld(thisObj, e, offset[1]);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthisObj.trigger('input');\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tonDocumentPointerEnd : function (e, target, controlName, pointerType) {\r\n\t\treturn function (e) {\r\n\t\t\tvar thisObj = jsc.getData(target, 'instance');\r\n\t\t\tjsc.detachGroupEvents('drag');\r\n\t\t\tjsc.releaseTarget();\r\n\r\n\t\t\t// Always trigger changes AFTER detaching outstanding mouse handlers,\r\n\t\t\t// in case some color change that occured in user-defined onChange/onInput handler\r\n\t\t\t// intruded into current mouse events\r\n\t\t\tthisObj.trigger('input');\r\n\t\t\tthisObj.trigger('change');\r\n\t\t};\r\n\t},\r\n\r\n\r\n\tonPaletteSampleClick : function (e) {\r\n\t\tvar target = e.currentTarget;\r\n\t\tvar thisObj = jsc.getData(target, 'instance');\r\n\t\tvar color = jsc.getData(target, 'color');\r\n\r\n\t\t// when format is flexible, use the original format of this color sample\r\n\t\tif (thisObj.format.toLowerCase() === 'any') {\r\n\t\t\tthisObj._setFormat(color.format); // adapt format\r\n\t\t\tif (!jsc.isAlphaFormat(thisObj.getFormat())) {\r\n\t\t\t\tcolor.rgba[3] = 1.0; // when switching to a format that doesn't support alpha, set full opacity\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if this color doesn't specify alpha, use alpha of 1.0 (if applicable)\r\n\t\tif (color.rgba[3] === null) {\r\n\t\t\tif (thisObj.paletteSetsAlpha === true || (thisObj.paletteSetsAlpha === 'auto' && thisObj._paletteHasTransparency)) {\r\n\t\t\t\tcolor.rgba[3] = 1.0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthisObj.fromRGBA.apply(thisObj, color.rgba);\r\n\r\n\t\tthisObj.trigger('input');\r\n\t\tthisObj.trigger('change');\r\n\r\n\t\tif (thisObj.hideOnPaletteClick) {\r\n\t\t\tthisObj.hide();\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tsetPad : function (thisObj, e, ofsX, ofsY) {\r\n\t\tvar pointerAbs = jsc.getAbsPointerPos(e);\r\n\t\tvar x = ofsX + pointerAbs.x - jsc._pointerOrigin.x - thisObj.padding - thisObj.controlBorderWidth;\r\n\t\tvar y = ofsY + pointerAbs.y - jsc._pointerOrigin.y - thisObj.padding - thisObj.controlBorderWidth;\r\n\r\n\t\tvar xVal = x * (360 / (thisObj.width - 1));\r\n\t\tvar yVal = 100 - (y * (100 / (thisObj.height - 1)));\r\n\r\n\t\tswitch (jsc.getPadYChannel(thisObj)) {\r\n\t\tcase 's': thisObj.fromHSVA(xVal, yVal, null, null); break;\r\n\t\tcase 'v': thisObj.fromHSVA(xVal, null, yVal, null); break;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tsetSld : function (thisObj, e, ofsY) {\r\n\t\tvar pointerAbs = jsc.getAbsPointerPos(e);\r\n\t\tvar y = ofsY + pointerAbs.y - jsc._pointerOrigin.y - thisObj.padding - thisObj.controlBorderWidth;\r\n\t\tvar yVal = 100 - (y * (100 / (thisObj.height - 1)));\r\n\r\n\t\tswitch (jsc.getSliderChannel(thisObj)) {\r\n\t\tcase 's': thisObj.fromHSVA(null, yVal, null, null); break;\r\n\t\tcase 'v': thisObj.fromHSVA(null, null, yVal, null); break;\r\n\t\t}\r\n\t},\r\n\r\n\r\n\tsetASld : function (thisObj, e, ofsY) {\r\n\t\tvar pointerAbs = jsc.getAbsPointerPos(e);\r\n\t\tvar y = ofsY + pointerAbs.y - jsc._pointerOrigin.y - thisObj.padding - thisObj.controlBorderWidth;\r\n\t\tvar yVal = 1.0 - (y * (1.0 / (thisObj.height - 1)));\r\n\r\n\t\tif (yVal < 1.0) {\r\n\t\t\t// if format is flexible and the current format doesn't support alpha, switch to a suitable one\r\n\t\t\tvar fmt = thisObj.getFormat();\r\n\t\t\tif (thisObj.format.toLowerCase() === 'any' && !jsc.isAlphaFormat(fmt)) {\r\n\t\t\t\tthisObj._setFormat(fmt === 'hex' ? 'hexa' : 'rgba');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthisObj.fromHSVA(null, null, null, yVal);\r\n\t},\r\n\r\n\r\n\tcreatePadCanvas : function () {\r\n\r\n\t\tvar ret = {\r\n\t\t\telm: null,\r\n\t\t\tdraw: null\r\n\t\t};\r\n\r\n\t\tvar canvas = jsc.createEl('canvas');\r\n\t\tvar ctx = canvas.getContext('2d');\r\n\r\n\t\tvar drawFunc = function (width, height, type) {\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\r\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\tvar hGrad = ctx.createLinearGradient(0, 0, canvas.width, 0);\r\n\t\t\thGrad.addColorStop(0 / 6, '#F00');\r\n\t\t\thGrad.addColorStop(1 / 6, '#FF0');\r\n\t\t\thGrad.addColorStop(2 / 6, '#0F0');\r\n\t\t\thGrad.addColorStop(3 / 6, '#0FF');\r\n\t\t\thGrad.addColorStop(4 / 6, '#00F');\r\n\t\t\thGrad.addColorStop(5 / 6, '#F0F');\r\n\t\t\thGrad.addColorStop(6 / 6, '#F00');\r\n\r\n\t\t\tctx.fillStyle = hGrad;\r\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\tvar vGrad = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n\t\t\tswitch (type.toLowerCase()) {\r\n\t\t\tcase 's':\r\n\t\t\t\tvGrad.addColorStop(0, 'rgba(255,255,255,0)');\r\n\t\t\t\tvGrad.addColorStop(1, 'rgba(255,255,255,1)');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'v':\r\n\t\t\t\tvGrad.addColorStop(0, 'rgba(0,0,0,0)');\r\n\t\t\t\tvGrad.addColorStop(1, 'rgba(0,0,0,1)');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tctx.fillStyle = vGrad;\r\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\t};\r\n\r\n\t\tret.elm = canvas;\r\n\t\tret.draw = drawFunc;\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\r\n\tcreateSliderGradient : function () {\r\n\r\n\t\tvar ret = {\r\n\t\t\telm: null,\r\n\t\t\tdraw: null\r\n\t\t};\r\n\r\n\t\tvar canvas = jsc.createEl('canvas');\r\n\t\tvar ctx = canvas.getContext('2d');\r\n\r\n\t\tvar drawFunc = function (width, height, color1, color2) {\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\r\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\tvar grad = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n\t\t\tgrad.addColorStop(0, color1);\r\n\t\t\tgrad.addColorStop(1, color2);\r\n\r\n\t\t\tctx.fillStyle = grad;\r\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\t};\r\n\r\n\t\tret.elm = canvas;\r\n\t\tret.draw = drawFunc;\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\r\n\tcreateASliderGradient : function () {\r\n\r\n\t\tvar ret = {\r\n\t\t\telm: null,\r\n\t\t\tdraw: null\r\n\t\t};\r\n\r\n\t\tvar canvas = jsc.createEl('canvas');\r\n\t\tvar ctx = canvas.getContext('2d');\r\n\r\n\t\tvar drawFunc = function (width, height, color) {\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\r\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\tvar sqSize = canvas.width / 2;\r\n\t\t\tvar sqColor1 = jsc.pub.chessboardColor1;\r\n\t\t\tvar sqColor2 = jsc.pub.chessboardColor2;\r\n\r\n\t\t\t// dark gray background\r\n\t\t\tctx.fillStyle = sqColor1;\r\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n\t\t\tif (sqSize > 0) { // to avoid infinite loop\r\n\t\t\t\tfor (var y = 0; y < canvas.height; y += sqSize * 2) {\r\n\t\t\t\t\t// light gray squares\r\n\t\t\t\t\tctx.fillStyle = sqColor2;\r\n\t\t\t\t\tctx.fillRect(0, y, sqSize, sqSize);\r\n\t\t\t\t\tctx.fillRect(sqSize, y + sqSize, sqSize, sqSize);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar grad = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n\t\t\tgrad.addColorStop(0, color);\r\n\t\t\tgrad.addColorStop(1, 'rgba(0,0,0,0)');\r\n\r\n\t\t\tctx.fillStyle = grad;\r\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\t\t};\r\n\r\n\t\tret.elm = canvas;\r\n\t\tret.draw = drawFunc;\r\n\r\n\t\treturn ret;\r\n\t},\r\n\r\n\r\n\tBoxShadow : (function () {\r\n\t\tvar BoxShadow = function (hShadow, vShadow, blur, spread, color, inset) {\r\n\t\t\tthis.hShadow = hShadow;\r\n\t\t\tthis.vShadow = vShadow;\r\n\t\t\tthis.blur = blur;\r\n\t\t\tthis.spread = spread;\r\n\t\t\tthis.color = color;\r\n\t\t\tthis.inset = !!inset;\r\n\t\t};\r\n\r\n\t\tBoxShadow.prototype.toString = function () {\r\n\t\t\tvar vals = [\r\n\t\t\t\tMath.round(this.hShadow) + 'px',\r\n\t\t\t\tMath.round(this.vShadow) + 'px',\r\n\t\t\t\tMath.round(this.blur) + 'px',\r\n\t\t\t\tMath.round(this.spread) + 'px',\r\n\t\t\t\tthis.color\r\n\t\t\t];\r\n\t\t\tif (this.inset) {\r\n\t\t\t\tvals.push('inset');\r\n\t\t\t}\r\n\t\t\treturn vals.join(' ');\r\n\t\t};\r\n\r\n\t\treturn BoxShadow;\r\n\t})(),\r\n\r\n\r\n\tflags : {\r\n\t\tleaveValue : 1 << 0,\r\n\t\tleaveAlpha : 1 << 1,\r\n\t\tleavePreview : 1 << 2,\r\n\t},\r\n\r\n\r\n\tenumOpts : {\r\n\t\tformat: ['auto', 'any', 'hex', 'hexa', 'rgb', 'rgba'],\r\n\t\tpreviewPosition: ['left', 'right'],\r\n\t\tmode: ['hsv', 'hvs', 'hs', 'hv'],\r\n\t\tposition: ['left', 'right', 'top', 'bottom'],\r\n\t\talphaChannel: ['auto', true, false],\r\n\t\tpaletteSetsAlpha: ['auto', true, false],\r\n\t},\r\n\r\n\r\n\tdeprecatedOpts : {\r\n\t\t// <old_option>: <new_option>  (<new_option> can be null)\r\n\t\t'styleElement': 'previewElement',\r\n\t\t'onFineChange': 'onInput',\r\n\t\t'overwriteImportant': 'forceStyle',\r\n\t\t'closable': 'closeButton',\r\n\t\t'insetWidth': 'controlBorderWidth',\r\n\t\t'insetColor': 'controlBorderColor',\r\n\t\t'refine': null,\r\n\t},\r\n\r\n\r\n\tdocsRef : ' ' + 'See https://jscolor.com/docs/',\r\n\r\n\r\n\t//\r\n\t// Usage:\r\n\t// var myPicker = new JSColor(<targetElement> [, <options>])\r\n\t//\r\n\t// (constructor is accessible via both 'jscolor' and 'JSColor' name)\r\n\t//\r\n\r\n\tpub : function (targetElement, opts) {\r\n\r\n\t\tvar THIS = this;\r\n\r\n\t\tif (!opts) {\r\n\t\t\topts = {};\r\n\t\t}\r\n\r\n\t\tthis.channels = {\r\n\t\t\tr: 255, // red [0-255]\r\n\t\t\tg: 255, // green [0-255]\r\n\t\t\tb: 255, // blue [0-255]\r\n\t\t\th: 0, // hue [0-360]\r\n\t\t\ts: 0, // saturation [0-100]\r\n\t\t\tv: 100, // value (brightness) [0-100]\r\n\t\t\ta: 1.0, // alpha (opacity) [0.0 - 1.0]\r\n\t\t};\r\n\r\n\t\t// General options\r\n\t\t//\r\n\t\tthis.format = 'auto'; // 'auto' | 'any' | 'hex' | 'hexa' | 'rgb' | 'rgba' - Format of the input/output value\r\n\t\tthis.value = undefined; // INITIAL color value in any supported format. To change it later, use method fromString(), fromHSVA(), fromRGBA() or channel()\r\n\t\tthis.alpha = undefined; // INITIAL alpha value. To change it later, call method channel('A', <value>)\r\n\t\tthis.onChange = undefined; // called when color changes. Value can be either a function or a string with JS code.\r\n\t\tthis.onInput = undefined; // called repeatedly as the color is being changed, e.g. while dragging a slider. Value can be either a function or a string with JS code.\r\n\t\tthis.valueElement = undefined; // element that will be used to display and input the color value\r\n\t\tthis.alphaElement = undefined; // element that will be used to display and input the alpha (opacity) value\r\n\t\tthis.previewElement = undefined; // element that will preview the picked color using CSS background\r\n\t\tthis.previewPosition = 'left'; // 'left' | 'right' - position of the color preview in previewElement\r\n\t\tthis.previewSize = 32; // (px) width of the color preview displayed in previewElement\r\n\t\tthis.previewPadding = 8; // (px) space between color preview and content of the previewElement\r\n\t\tthis.required = true; // whether the associated text input must always contain a color value. If false, the input can be left empty.\r\n\t\tthis.hash = true; // whether to prefix the HEX color code with # symbol (only applicable for HEX format)\r\n\t\tthis.uppercase = true; // whether to show the HEX color code in upper case (only applicable for HEX format)\r\n\t\tthis.forceStyle = true; // whether to overwrite CSS style of the previewElement using !important flag\r\n\r\n\t\t// Color Picker options\r\n\t\t//\r\n\t\tthis.width = 181; // width of the color spectrum (in px)\r\n\t\tthis.height = 101; // height of the color spectrum (in px)\r\n\t\tthis.mode = 'HSV'; // 'HSV' | 'HVS' | 'HS' | 'HV' - layout of the color picker controls\r\n\t\tthis.alphaChannel = 'auto'; // 'auto' | true | false - if alpha channel is enabled, the alpha slider will be visible. If 'auto', it will be determined according to color format\r\n\t\tthis.position = 'bottom'; // 'left' | 'right' | 'top' | 'bottom' - position relative to the target element\r\n\t\tthis.smartPosition = true; // automatically change picker position when there is not enough space for it\r\n\t\tthis.showOnClick = true; // whether to show the picker when user clicks its target element\r\n\t\tthis.hideOnLeave = true; // whether to automatically hide the picker when user leaves its target element (e.g. upon clicking the document)\r\n\t\tthis.palette = []; // colors to be displayed in the palette, specified as an array or a string of space separated color values (in any supported format)\r\n\t\tthis.paletteCols = 10; // number of columns in the palette\r\n\t\tthis.paletteSetsAlpha = 'auto'; // 'auto' | true | false - if true, palette colors that don't specify alpha will set alpha to 1.0\r\n\t\tthis.paletteHeight = 16; // maximum height (px) of a row in the palette\r\n\t\tthis.paletteSpacing = 4; // distance (px) between color samples in the palette\r\n\t\tthis.hideOnPaletteClick = false; // when set to true, clicking the palette will also hide the color picker\r\n\t\tthis.sliderSize = 16; // px\r\n\t\tthis.crossSize = 8; // px\r\n\t\tthis.closeButton = false; // whether to display the Close button\r\n\t\tthis.closeText = 'Close';\r\n\t\tthis.buttonColor = 'rgba(0,0,0,1)'; // CSS color\r\n\t\tthis.buttonHeight = 18; // px\r\n\t\tthis.padding = 12; // px\r\n\t\tthis.backgroundColor = 'rgba(255,255,255,1)'; // CSS color\r\n\t\tthis.borderWidth = 1; // px\r\n\t\tthis.borderColor = 'rgba(187,187,187,1)'; // CSS color\r\n\t\tthis.borderRadius = 8; // px\r\n\t\tthis.controlBorderWidth = 1; // px\r\n\t\tthis.controlBorderColor = 'rgba(187,187,187,1)'; // CSS color\r\n\t\tthis.shadow = true; // whether to display a shadow\r\n\t\tthis.shadowBlur = 15; // px\r\n\t\tthis.shadowColor = 'rgba(0,0,0,0.2)'; // CSS color\r\n\t\tthis.pointerColor = 'rgba(76,76,76,1)'; // CSS color\r\n\t\tthis.pointerBorderWidth = 1; // px\r\n\t\tthis.pointerBorderColor = 'rgba(255,255,255,1)'; // CSS color\r\n\t\tthis.pointerThickness = 2; // px\r\n\t\tthis.zIndex = 5000;\r\n\t\tthis.container = undefined; // where to append the color picker (BODY element by default)\r\n\r\n\t\t// Experimental\r\n\t\t//\r\n\t\tthis.minS = 0; // min allowed saturation (0 - 100)\r\n\t\tthis.maxS = 100; // max allowed saturation (0 - 100)\r\n\t\tthis.minV = 0; // min allowed value (brightness) (0 - 100)\r\n\t\tthis.maxV = 100; // max allowed value (brightness) (0 - 100)\r\n\t\tthis.minA = 0.0; // min allowed alpha (opacity) (0.0 - 1.0)\r\n\t\tthis.maxA = 1.0; // max allowed alpha (opacity) (0.0 - 1.0)\r\n\r\n\r\n\t\t// Getter: option(name)\r\n\t\t// Setter: option(name, value)\r\n\t\t//         option({name:value, ...})\r\n\t\t//\r\n\t\tthis.option = function () {\r\n\t\t\tif (!arguments.length) {\r\n\t\t\t\tthrow new Error('No option specified');\r\n\t\t\t}\r\n\r\n\t\t\tif (arguments.length === 1 && typeof arguments[0] === 'string') {\r\n\t\t\t\t// getting a single option\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn getOption(arguments[0]);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t} else if (arguments.length >= 2 && typeof arguments[0] === 'string') {\r\n\t\t\t\t// setting a single option\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (!setOption(arguments[0], arguments[1])) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tthis.redraw(); // immediately redraws the picker, if it's displayed\r\n\t\t\t\tthis.exposeColor(); // in case some preview-related or format-related option was changed\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t} else if (arguments.length === 1 && typeof arguments[0] === 'object') {\r\n\t\t\t\t// setting multiple options\r\n\t\t\t\tvar opts = arguments[0];\r\n\t\t\t\tvar success = true;\r\n\t\t\t\tfor (var opt in opts) {\r\n\t\t\t\t\tif (opts.hasOwnProperty(opt)) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tif (!setOption(opt, opts[opt])) {\r\n\t\t\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\t\t\tsuccess = false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.redraw(); // immediately redraws the picker, if it's displayed\r\n\t\t\t\tthis.exposeColor(); // in case some preview-related or format-related option was changed\r\n\t\t\t\treturn success;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error('Invalid arguments');\r\n\t\t}\r\n\r\n\r\n\t\t// Getter: channel(name)\r\n\t\t// Setter: channel(name, value)\r\n\t\t//\r\n\t\tthis.channel = function (name, value) {\r\n\t\t\tif (typeof name !== 'string') {\r\n\t\t\t\tthrow new Error('Invalid value for channel name: ' + name);\r\n\t\t\t}\r\n\r\n\t\t\tif (value === undefined) {\r\n\t\t\t\t// getting channel value\r\n\t\t\t\tif (!this.channels.hasOwnProperty(name.toLowerCase())) {\r\n\t\t\t\t\tconsole.warn('Getting unknown channel: ' + name);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.channels[name.toLowerCase()];\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// setting channel value\r\n\t\t\t\tvar res = false;\r\n\t\t\t\tswitch (name.toLowerCase()) {\r\n\t\t\t\t\tcase 'r': res = this.fromRGBA(value, null, null, null); break;\r\n\t\t\t\t\tcase 'g': res = this.fromRGBA(null, value, null, null); break;\r\n\t\t\t\t\tcase 'b': res = this.fromRGBA(null, null, value, null); break;\r\n\t\t\t\t\tcase 'h': res = this.fromHSVA(value, null, null, null); break;\r\n\t\t\t\t\tcase 's': res = this.fromHSVA(null, value, null, null); break;\r\n\t\t\t\t\tcase 'v': res = this.fromHSVA(null, null, value, null); break;\r\n\t\t\t\t\tcase 'a': res = this.fromHSVA(null, null, null, value); break;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.warn('Setting unknown channel: ' + name);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (res) {\r\n\t\t\t\t\tthis.redraw(); // immediately redraws the picker, if it's displayed\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\r\n\t\t// Triggers given input event(s) by:\r\n\t\t// - executing on<Event> callback specified as picker's option\r\n\t\t// - triggering standard DOM event listeners attached to the value element\r\n\t\t//\r\n\t\t// It is possible to specify multiple events separated with a space.\r\n\t\t//\r\n\t\tthis.trigger = function (eventNames) {\r\n\t\t\tvar evs = jsc.strList(eventNames);\r\n\t\t\tfor (var i = 0; i < evs.length; i += 1) {\r\n\t\t\t\tvar ev = evs[i].toLowerCase();\r\n\r\n\t\t\t\t// trigger a callback\r\n\t\t\t\tvar callbackProp = null;\r\n\t\t\t\tswitch (ev) {\r\n\t\t\t\t\tcase 'input': callbackProp = 'onInput'; break;\r\n\t\t\t\t\tcase 'change': callbackProp = 'onChange'; break;\r\n\t\t\t\t}\r\n\t\t\t\tif (callbackProp) {\r\n\t\t\t\t\tjsc.triggerCallback(this, callbackProp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// trigger standard DOM event listeners on the value element\r\n\t\t\t\tjsc.triggerInputEvent(this.valueElement, ev, true, true);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\t// h: 0-360\r\n\t\t// s: 0-100\r\n\t\t// v: 0-100\r\n\t\t// a: 0.0-1.0\r\n\t\t//\r\n\t\tthis.fromHSVA = function (h, s, v, a, flags) { // null = don't change\r\n\t\t\tif (h === undefined) { h = null; }\r\n\t\t\tif (s === undefined) { s = null; }\r\n\t\t\tif (v === undefined) { v = null; }\r\n\t\t\tif (a === undefined) { a = null; }\r\n\r\n\t\t\tif (h !== null) {\r\n\t\t\t\tif (isNaN(h)) { return false; }\r\n\t\t\t\tthis.channels.h = Math.max(0, Math.min(360, h));\r\n\t\t\t}\r\n\t\t\tif (s !== null) {\r\n\t\t\t\tif (isNaN(s)) { return false; }\r\n\t\t\t\tthis.channels.s = Math.max(0, Math.min(100, this.maxS, s), this.minS);\r\n\t\t\t}\r\n\t\t\tif (v !== null) {\r\n\t\t\t\tif (isNaN(v)) { return false; }\r\n\t\t\t\tthis.channels.v = Math.max(0, Math.min(100, this.maxV, v), this.minV);\r\n\t\t\t}\r\n\t\t\tif (a !== null) {\r\n\t\t\t\tif (isNaN(a)) { return false; }\r\n\t\t\t\tthis.channels.a = this.hasAlphaChannel() ?\r\n\t\t\t\t\tMath.max(0, Math.min(1, this.maxA, a), this.minA) :\r\n\t\t\t\t\t1.0; // if alpha channel is disabled, the color should stay 100% opaque\r\n\t\t\t}\r\n\r\n\t\t\tvar rgb = jsc.HSV_RGB(\r\n\t\t\t\tthis.channels.h,\r\n\t\t\t\tthis.channels.s,\r\n\t\t\t\tthis.channels.v\r\n\t\t\t);\r\n\t\t\tthis.channels.r = rgb[0];\r\n\t\t\tthis.channels.g = rgb[1];\r\n\t\t\tthis.channels.b = rgb[2];\r\n\r\n\t\t\tthis.exposeColor(flags);\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\r\n\t\t// r: 0-255\r\n\t\t// g: 0-255\r\n\t\t// b: 0-255\r\n\t\t// a: 0.0-1.0\r\n\t\t//\r\n\t\tthis.fromRGBA = function (r, g, b, a, flags) { // null = don't change\r\n\t\t\tif (r === undefined) { r = null; }\r\n\t\t\tif (g === undefined) { g = null; }\r\n\t\t\tif (b === undefined) { b = null; }\r\n\t\t\tif (a === undefined) { a = null; }\r\n\r\n\t\t\tif (r !== null) {\r\n\t\t\t\tif (isNaN(r)) { return false; }\r\n\t\t\t\tr = Math.max(0, Math.min(255, r));\r\n\t\t\t}\r\n\t\t\tif (g !== null) {\r\n\t\t\t\tif (isNaN(g)) { return false; }\r\n\t\t\t\tg = Math.max(0, Math.min(255, g));\r\n\t\t\t}\r\n\t\t\tif (b !== null) {\r\n\t\t\t\tif (isNaN(b)) { return false; }\r\n\t\t\t\tb = Math.max(0, Math.min(255, b));\r\n\t\t\t}\r\n\t\t\tif (a !== null) {\r\n\t\t\t\tif (isNaN(a)) { return false; }\r\n\t\t\t\tthis.channels.a = this.hasAlphaChannel() ?\r\n\t\t\t\t\tMath.max(0, Math.min(1, this.maxA, a), this.minA) :\r\n\t\t\t\t\t1.0; // if alpha channel is disabled, the color should stay 100% opaque\r\n\t\t\t}\r\n\r\n\t\t\tvar hsv = jsc.RGB_HSV(\r\n\t\t\t\tr===null ? this.channels.r : r,\r\n\t\t\t\tg===null ? this.channels.g : g,\r\n\t\t\t\tb===null ? this.channels.b : b\r\n\t\t\t);\r\n\t\t\tif (hsv[0] !== null) {\r\n\t\t\t\tthis.channels.h = Math.max(0, Math.min(360, hsv[0]));\r\n\t\t\t}\r\n\t\t\tif (hsv[2] !== 0) { // fully black color stays black through entire saturation range, so let's not change saturation\r\n\t\t\t\tthis.channels.s = Math.max(0, this.minS, Math.min(100, this.maxS, hsv[1]));\r\n\t\t\t}\r\n\t\t\tthis.channels.v = Math.max(0, this.minV, Math.min(100, this.maxV, hsv[2]));\r\n\r\n\t\t\t// update RGB according to final HSV, as some values might be trimmed\r\n\t\t\tvar rgb = jsc.HSV_RGB(this.channels.h, this.channels.s, this.channels.v);\r\n\t\t\tthis.channels.r = rgb[0];\r\n\t\t\tthis.channels.g = rgb[1];\r\n\t\t\tthis.channels.b = rgb[2];\r\n\r\n\t\t\tthis.exposeColor(flags);\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\r\n\t\t// DEPRECATED. Use .fromHSVA() instead\r\n\t\t//\r\n\t\tthis.fromHSV = function (h, s, v, flags) {\r\n\t\t\tconsole.warn('fromHSV() method is DEPRECATED. Using fromHSVA() instead.' + jsc.docsRef);\r\n\t\t\treturn this.fromHSVA(h, s, v, null, flags);\r\n\t\t};\r\n\r\n\r\n\t\t// DEPRECATED. Use .fromRGBA() instead\r\n\t\t//\r\n\t\tthis.fromRGB = function (r, g, b, flags) {\r\n\t\t\tconsole.warn('fromRGB() method is DEPRECATED. Using fromRGBA() instead.' + jsc.docsRef);\r\n\t\t\treturn this.fromRGBA(r, g, b, null, flags);\r\n\t\t};\r\n\r\n\r\n\t\tthis.fromString = function (str, flags) {\r\n\t\t\tif (!this.required && str.trim() === '') {\r\n\t\t\t\t// setting empty string to an optional color input\r\n\t\t\t\tthis.setPreviewElementBg(null);\r\n\t\t\t\tthis.setValueElementValue('');\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tvar color = jsc.parseColorString(str);\r\n\t\t\tif (!color) {\r\n\t\t\t\treturn false; // could not parse\r\n\t\t\t}\r\n\t\t\tif (this.format.toLowerCase() === 'any') {\r\n\t\t\t\tthis._setFormat(color.format); // adapt format\r\n\t\t\t\tif (!jsc.isAlphaFormat(this.getFormat())) {\r\n\t\t\t\t\tcolor.rgba[3] = 1.0; // when switching to a format that doesn't support alpha, set full opacity\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.fromRGBA(\r\n\t\t\t\tcolor.rgba[0],\r\n\t\t\t\tcolor.rgba[1],\r\n\t\t\t\tcolor.rgba[2],\r\n\t\t\t\tcolor.rgba[3],\r\n\t\t\t\tflags\r\n\t\t\t);\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\r\n\t\tthis.toString = function (format) {\r\n\t\t\tif (format === undefined) {\r\n\t\t\t\tformat = this.getFormat(); // format not specified -> use the current format\r\n\t\t\t}\r\n\t\t\tswitch (format.toLowerCase()) {\r\n\t\t\t\tcase 'hex': return this.toHEXString(); break;\r\n\t\t\t\tcase 'hexa': return this.toHEXAString(); break;\r\n\t\t\t\tcase 'rgb': return this.toRGBString(); break;\r\n\t\t\t\tcase 'rgba': return this.toRGBAString(); break;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\r\n\t\tthis.toHEXString = function () {\r\n\t\t\treturn jsc.hexColor(\r\n\t\t\t\tthis.channels.r,\r\n\t\t\t\tthis.channels.g,\r\n\t\t\t\tthis.channels.b\r\n\t\t\t);\r\n\t\t};\r\n\r\n\r\n\t\tthis.toHEXAString = function () {\r\n\t\t\treturn jsc.hexaColor(\r\n\t\t\t\tthis.channels.r,\r\n\t\t\t\tthis.channels.g,\r\n\t\t\t\tthis.channels.b,\r\n\t\t\t\tthis.channels.a\r\n\t\t\t);\r\n\t\t};\r\n\r\n\r\n\t\tthis.toRGBString = function () {\r\n\t\t\treturn jsc.rgbColor(\r\n\t\t\t\tthis.channels.r,\r\n\t\t\t\tthis.channels.g,\r\n\t\t\t\tthis.channels.b\r\n\t\t\t);\r\n\t\t};\r\n\r\n\r\n\t\tthis.toRGBAString = function () {\r\n\t\t\treturn jsc.rgbaColor(\r\n\t\t\t\tthis.channels.r,\r\n\t\t\t\tthis.channels.g,\r\n\t\t\t\tthis.channels.b,\r\n\t\t\t\tthis.channels.a\r\n\t\t\t);\r\n\t\t};\r\n\r\n\r\n\t\tthis.toGrayscale = function () {\r\n\t\t\treturn (\r\n\t\t\t\t0.213 * this.channels.r +\r\n\t\t\t\t0.715 * this.channels.g +\r\n\t\t\t\t0.072 * this.channels.b\r\n\t\t\t);\r\n\t\t};\r\n\r\n\r\n\t\tthis.toCanvas = function () {\r\n\t\t\treturn jsc.genColorPreviewCanvas(this.toRGBAString()).canvas;\r\n\t\t};\r\n\r\n\r\n\t\tthis.toDataURL = function () {\r\n\t\t\treturn this.toCanvas().toDataURL();\r\n\t\t};\r\n\r\n\r\n\t\tthis.toBackground = function () {\r\n\t\t\treturn jsc.pub.background(this.toRGBAString());\r\n\t\t};\r\n\r\n\r\n\t\tthis.isLight = function () {\r\n\t\t\treturn this.toGrayscale() > 255 / 2;\r\n\t\t};\r\n\r\n\r\n\t\tthis.hide = function () {\r\n\t\t\tif (isPickerOwner()) {\r\n\t\t\t\tdetachPicker();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.show = function () {\r\n\t\t\tdrawPicker();\r\n\t\t};\r\n\r\n\r\n\t\tthis.redraw = function () {\r\n\t\t\tif (isPickerOwner()) {\r\n\t\t\t\tdrawPicker();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.getFormat = function () {\r\n\t\t\treturn this._currentFormat;\r\n\t\t};\r\n\r\n\r\n\t\tthis._setFormat = function (format) {\r\n\t\t\tthis._currentFormat = format.toLowerCase();\r\n\t\t};\r\n\r\n\r\n\t\tthis.hasAlphaChannel = function () {\r\n\t\t\tif (this.alphaChannel === 'auto') {\r\n\t\t\t\treturn (\r\n\t\t\t\t\tthis.format.toLowerCase() === 'any' || // format can change on the fly (e.g. from hex to rgba), so let's consider the alpha channel enabled\r\n\t\t\t\t\tjsc.isAlphaFormat(this.getFormat()) || // the current format supports alpha channel\r\n\t\t\t\t\tthis.alpha !== undefined || // initial alpha value is set, so we're working with alpha channel\r\n\t\t\t\t\tthis.alphaElement !== undefined // the alpha value is redirected, so we're working with alpha channel\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.alphaChannel; // the alpha channel is explicitly set\r\n\t\t};\r\n\r\n\r\n\t\tthis.processValueInput = function (str) {\r\n\t\t\tif (!this.fromString(str)) {\r\n\t\t\t\t// could not parse the color value - let's just expose the current color\r\n\t\t\t\tthis.exposeColor();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.processAlphaInput = function (str) {\r\n\t\t\tif (!this.fromHSVA(null, null, null, parseFloat(str))) {\r\n\t\t\t\t// could not parse the alpha value - let's just expose the current color\r\n\t\t\t\tthis.exposeColor();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.exposeColor = function (flags) {\r\n\t\t\tvar colorStr = this.toString();\r\n\t\t\tvar fmt = this.getFormat();\r\n\r\n\t\t\t// reflect current color in data- attribute\r\n\t\t\tjsc.setDataAttr(this.targetElement, 'current-color', colorStr);\r\n\r\n\t\t\tif (!(flags & jsc.flags.leaveValue) && this.valueElement) {\r\n\t\t\t\tif (fmt === 'hex' || fmt === 'hexa') {\r\n\t\t\t\t\tif (!this.uppercase) { colorStr = colorStr.toLowerCase(); }\r\n\t\t\t\t\tif (!this.hash) { colorStr = colorStr.replace(/^#/, ''); }\r\n\t\t\t\t}\r\n\t\t\t\tthis.setValueElementValue(colorStr);\r\n\t\t\t}\r\n\r\n\t\t\tif (!(flags & jsc.flags.leaveAlpha) && this.alphaElement) {\r\n\t\t\t\tvar alphaVal = Math.round(this.channels.a * 100) / 100;\r\n\t\t\t\tthis.setAlphaElementValue(alphaVal);\r\n\t\t\t}\r\n\r\n\t\t\tif (!(flags & jsc.flags.leavePreview) && this.previewElement) {\r\n\t\t\t\tvar previewPos = null; // 'left' | 'right' (null -> fill the entire element)\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\tjsc.isTextInput(this.previewElement) || // text input\r\n\t\t\t\t\t(jsc.isButton(this.previewElement) && !jsc.isButtonEmpty(this.previewElement)) // button with text\r\n\t\t\t\t) {\r\n\t\t\t\t\tpreviewPos = this.previewPosition;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setPreviewElementBg(this.toRGBAString());\r\n\t\t\t}\r\n\r\n\t\t\tif (isPickerOwner()) {\r\n\t\t\t\tredrawPad();\r\n\t\t\t\tredrawSld();\r\n\t\t\t\tredrawASld();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.setPreviewElementBg = function (color) {\r\n\t\t\tif (!this.previewElement) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar position = null; // color preview position:  null | 'left' | 'right'\r\n\t\t\tvar width = null; // color preview width:  px | null = fill the entire element\r\n\t\t\tif (\r\n\t\t\t\tjsc.isTextInput(this.previewElement) || // text input\r\n\t\t\t\t(jsc.isButton(this.previewElement) && !jsc.isButtonEmpty(this.previewElement)) // button with text\r\n\t\t\t) {\r\n\t\t\t\tposition = this.previewPosition;\r\n\t\t\t\twidth = this.previewSize;\r\n\t\t\t}\r\n\r\n\t\t\tvar backgrounds = [];\r\n\r\n\t\t\tif (!color) {\r\n\t\t\t\t// there is no color preview to display -> let's remove any previous background image\r\n\t\t\t\tbackgrounds.push({\r\n\t\t\t\t\timage: 'none',\r\n\t\t\t\t\tposition: 'left top',\r\n\t\t\t\t\tsize: 'auto',\r\n\t\t\t\t\trepeat: 'no-repeat',\r\n\t\t\t\t\torigin: 'padding-box',\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// CSS gradient for background color preview\r\n\t\t\t\tbackgrounds.push({\r\n\t\t\t\t\timage: jsc.genColorPreviewGradient(\r\n\t\t\t\t\t\tcolor,\r\n\t\t\t\t\t\tposition,\r\n\t\t\t\t\t\twidth ? width - jsc.pub.previewSeparator.length : null\r\n\t\t\t\t\t),\r\n\t\t\t\t\tposition: 'left top',\r\n\t\t\t\t\tsize: 'auto',\r\n\t\t\t\t\trepeat: position ? 'repeat-y' : 'repeat',\r\n\t\t\t\t\torigin: 'padding-box',\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// data URL of generated PNG image with a gray transparency chessboard\r\n\t\t\t\tvar preview = jsc.genColorPreviewCanvas(\r\n\t\t\t\t\t'rgba(0,0,0,0)',\r\n\t\t\t\t\tposition ? {'left':'right', 'right':'left'}[position] : null,\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\ttrue\r\n\t\t\t\t);\r\n\t\t\t\tbackgrounds.push({\r\n\t\t\t\t\timage: 'url(\\'' + preview.canvas.toDataURL() + '\\')',\r\n\t\t\t\t\tposition: (position || 'left') + ' top',\r\n\t\t\t\t\tsize: preview.width + 'px ' + preview.height + 'px',\r\n\t\t\t\t\trepeat: position ? 'repeat-y' : 'repeat',\r\n\t\t\t\t\torigin: 'padding-box',\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar bg = {\r\n\t\t\t\timage: [],\r\n\t\t\t\tposition: [],\r\n\t\t\t\tsize: [],\r\n\t\t\t\trepeat: [],\r\n\t\t\t\torigin: [],\r\n\t\t\t};\r\n\t\t\tfor (var i = 0; i < backgrounds.length; i += 1) {\r\n\t\t\t\tbg.image.push(backgrounds[i].image);\r\n\t\t\t\tbg.position.push(backgrounds[i].position);\r\n\t\t\t\tbg.size.push(backgrounds[i].size);\r\n\t\t\t\tbg.repeat.push(backgrounds[i].repeat);\r\n\t\t\t\tbg.origin.push(backgrounds[i].origin);\r\n\t\t\t}\r\n\r\n\t\t\t// set previewElement's background-images\r\n\t\t\tvar sty = {\r\n\t\t\t\t'background-image': bg.image.join(', '),\r\n\t\t\t\t'background-position': bg.position.join(', '),\r\n\t\t\t\t'background-size': bg.size.join(', '),\r\n\t\t\t\t'background-repeat': bg.repeat.join(', '),\r\n\t\t\t\t'background-origin': bg.origin.join(', '),\r\n\t\t\t};\r\n\t\t\tjsc.setStyle(this.previewElement, sty, this.forceStyle);\r\n\r\n\r\n\t\t\t// set/restore previewElement's padding\r\n\t\t\tvar padding = {\r\n\t\t\t\tleft: null,\r\n\t\t\t\tright: null,\r\n\t\t\t};\r\n\t\t\tif (position) {\r\n\t\t\t\tpadding[position] = (this.previewSize + this.previewPadding) + 'px';\r\n\t\t\t}\r\n\r\n\t\t\tvar sty = {\r\n\t\t\t\t'padding-left': padding.left,\r\n\t\t\t\t'padding-right': padding.right,\r\n\t\t\t};\r\n\t\t\tjsc.setStyle(this.previewElement, sty, this.forceStyle, true);\r\n\t\t};\r\n\r\n\r\n\t\tthis.setValueElementValue = function (str) {\r\n\t\t\tif (this.valueElement) {\r\n\t\t\t\tif (jsc.nodeName(this.valueElement) === 'input') {\r\n\t\t\t\t\tthis.valueElement.value = str;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.valueElement.innerHTML = str;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.setAlphaElementValue = function (str) {\r\n\t\t\tif (this.alphaElement) {\r\n\t\t\t\tif (jsc.nodeName(this.alphaElement) === 'input') {\r\n\t\t\t\t\tthis.alphaElement.value = str;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.alphaElement.innerHTML = str;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis._processParentElementsInDOM = function () {\r\n\t\t\tif (this._parentElementsProcessed) { return; }\r\n\t\t\tthis._parentElementsProcessed = true;\r\n\r\n\t\t\tvar elm = this.targetElement;\r\n\t\t\tdo {\r\n\t\t\t\t// If the target element or one of its parent nodes has fixed position,\r\n\t\t\t\t// then use fixed positioning instead\r\n\t\t\t\tvar compStyle = jsc.getCompStyle(elm);\r\n\t\t\t\tif (compStyle.position && compStyle.position.toLowerCase() === 'fixed') {\r\n\t\t\t\t\tthis.fixed = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (elm !== this.targetElement) {\r\n\t\t\t\t\t// Ensure to attach onParentScroll only once to each parent element\r\n\t\t\t\t\t// (multiple targetElements can share the same parent nodes)\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// Note: It's not just offsetParents that can be scrollable,\r\n\t\t\t\t\t// that's why we loop through all parent nodes\r\n\t\t\t\t\tif (!jsc.getData(elm, 'hasScrollListener')) {\r\n\t\t\t\t\t\telm.addEventListener('scroll', jsc.onParentScroll, false);\r\n\t\t\t\t\t\tjsc.setData(elm, 'hasScrollListener', true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} while ((elm = elm.parentNode) && jsc.nodeName(elm) !== 'body');\r\n\t\t};\r\n\r\n\r\n\t\tthis.tryHide = function () {\r\n\t\t\tif (this.hideOnLeave) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\t\tthis.set__palette = function (val) {\r\n\t\t\tthis.palette = val;\r\n\t\t\tthis._palette = jsc.parsePaletteValue(val);\r\n\t\t\tthis._paletteHasTransparency = jsc.containsTranparentColor(this._palette);\r\n\t\t};\r\n\r\n\r\n\t\tfunction setOption (option, value) {\r\n\t\t\tif (typeof option !== 'string') {\r\n\t\t\t\tthrow new Error('Invalid value for option name: ' + option);\r\n\t\t\t}\r\n\r\n\t\t\t// enum option\r\n\t\t\tif (jsc.enumOpts.hasOwnProperty(option)) {\r\n\t\t\t\tif (typeof value === 'string') { // enum string values are case insensitive\r\n\t\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\tif (jsc.enumOpts[option].indexOf(value) === -1) {\r\n\t\t\t\t\tthrow new Error('Option \\'' + option + '\\' has invalid value: ' + value);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// deprecated option\r\n\t\t\tif (jsc.deprecatedOpts.hasOwnProperty(option)) {\r\n\t\t\t\tvar oldOpt = option;\r\n\t\t\t\tvar newOpt = jsc.deprecatedOpts[option];\r\n\t\t\t\tif (newOpt) {\r\n\t\t\t\t\t// if we have a new name for this option, let's log a warning and use the new name\r\n\t\t\t\t\tconsole.warn('Option \\'%s\\' is DEPRECATED, using \\'%s\\' instead.' + jsc.docsRef, oldOpt, newOpt);\r\n\t\t\t\t\toption = newOpt;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// new name not available for the option\r\n\t\t\t\t\tthrow new Error('Option \\'' + option + '\\' is DEPRECATED');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar setter = 'set__' + option;\r\n\r\n\t\t\tif (typeof THIS[setter] === 'function') { // a setter exists for this option\r\n\t\t\t\tTHIS[setter](value);\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t} else if (option in THIS) { // option exists as a property\r\n\t\t\t\tTHIS[option] = value;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error('Unrecognized configuration option: ' + option);\r\n\t\t}\r\n\r\n\r\n\t\tfunction getOption (option) {\r\n\t\t\tif (typeof option !== 'string') {\r\n\t\t\t\tthrow new Error('Invalid value for option name: ' + option);\r\n\t\t\t}\r\n\r\n\t\t\t// deprecated option\r\n\t\t\tif (jsc.deprecatedOpts.hasOwnProperty(option)) {\r\n\t\t\t\tvar oldOpt = option;\r\n\t\t\t\tvar newOpt = jsc.deprecatedOpts[option];\r\n\t\t\t\tif (newOpt) {\r\n\t\t\t\t\t// if we have a new name for this option, let's log a warning and use the new name\r\n\t\t\t\t\tconsole.warn('Option \\'%s\\' is DEPRECATED, using \\'%s\\' instead.' + jsc.docsRef, oldOpt, newOpt);\r\n\t\t\t\t\toption = newOpt;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// new name not available for the option\r\n\t\t\t\t\tthrow new Error('Option \\'' + option + '\\' is DEPRECATED');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar getter = 'get__' + option;\r\n\r\n\t\t\tif (typeof THIS[getter] === 'function') { // a getter exists for this option\r\n\t\t\t\treturn THIS[getter](value);\r\n\r\n\t\t\t} else if (option in THIS) { // option exists as a property\r\n\t\t\t\treturn THIS[option];\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error('Unrecognized configuration option: ' + option);\r\n\t\t}\r\n\r\n\r\n\t\tfunction detachPicker () {\r\n\t\t\tjsc.removeClass(THIS.targetElement, jsc.pub.activeClassName);\r\n\t\t\tjsc.picker.wrap.parentNode.removeChild(jsc.picker.wrap);\r\n\t\t\tdelete jsc.picker.owner;\r\n\t\t}\r\n\r\n\r\n\t\tfunction drawPicker () {\r\n\r\n\t\t\t// At this point, when drawing the picker, we know what the parent elements are\r\n\t\t\t// and we can do all related DOM operations, such as registering events on them\r\n\t\t\t// or checking their positioning\r\n\t\t\tTHIS._processParentElementsInDOM();\r\n\r\n\t\t\tif (!jsc.picker) {\r\n\t\t\t\tjsc.picker = {\r\n\t\t\t\t\towner: null, // owner picker instance\r\n\t\t\t\t\twrap : jsc.createEl('div'),\r\n\t\t\t\t\tbox : jsc.createEl('div'),\r\n\t\t\t\t\tboxS : jsc.createEl('div'), // shadow area\r\n\t\t\t\t\tboxB : jsc.createEl('div'), // border\r\n\t\t\t\t\tpad : jsc.createEl('div'),\r\n\t\t\t\t\tpadB : jsc.createEl('div'), // border\r\n\t\t\t\t\tpadM : jsc.createEl('div'), // mouse/touch area\r\n\t\t\t\t\tpadCanvas : jsc.createPadCanvas(),\r\n\t\t\t\t\tcross : jsc.createEl('div'),\r\n\t\t\t\t\tcrossBY : jsc.createEl('div'), // border Y\r\n\t\t\t\t\tcrossBX : jsc.createEl('div'), // border X\r\n\t\t\t\t\tcrossLY : jsc.createEl('div'), // line Y\r\n\t\t\t\t\tcrossLX : jsc.createEl('div'), // line X\r\n\t\t\t\t\tsld : jsc.createEl('div'), // slider\r\n\t\t\t\t\tsldB : jsc.createEl('div'), // border\r\n\t\t\t\t\tsldM : jsc.createEl('div'), // mouse/touch area\r\n\t\t\t\t\tsldGrad : jsc.createSliderGradient(),\r\n\t\t\t\t\tsldPtrS : jsc.createEl('div'), // slider pointer spacer\r\n\t\t\t\t\tsldPtrIB : jsc.createEl('div'), // slider pointer inner border\r\n\t\t\t\t\tsldPtrMB : jsc.createEl('div'), // slider pointer middle border\r\n\t\t\t\t\tsldPtrOB : jsc.createEl('div'), // slider pointer outer border\r\n\t\t\t\t\tasld : jsc.createEl('div'), // alpha slider\r\n\t\t\t\t\tasldB : jsc.createEl('div'), // border\r\n\t\t\t\t\tasldM : jsc.createEl('div'), // mouse/touch area\r\n\t\t\t\t\tasldGrad : jsc.createASliderGradient(),\r\n\t\t\t\t\tasldPtrS : jsc.createEl('div'), // slider pointer spacer\r\n\t\t\t\t\tasldPtrIB : jsc.createEl('div'), // slider pointer inner border\r\n\t\t\t\t\tasldPtrMB : jsc.createEl('div'), // slider pointer middle border\r\n\t\t\t\t\tasldPtrOB : jsc.createEl('div'), // slider pointer outer border\r\n\t\t\t\t\tpal : jsc.createEl('div'), // palette\r\n\t\t\t\t\tbtn : jsc.createEl('div'),\r\n\t\t\t\t\tbtnT : jsc.createEl('span'), // text\r\n\t\t\t\t};\r\n\r\n\t\t\t\tjsc.picker.pad.appendChild(jsc.picker.padCanvas.elm);\r\n\t\t\t\tjsc.picker.padB.appendChild(jsc.picker.pad);\r\n\t\t\t\tjsc.picker.cross.appendChild(jsc.picker.crossBY);\r\n\t\t\t\tjsc.picker.cross.appendChild(jsc.picker.crossBX);\r\n\t\t\t\tjsc.picker.cross.appendChild(jsc.picker.crossLY);\r\n\t\t\t\tjsc.picker.cross.appendChild(jsc.picker.crossLX);\r\n\t\t\t\tjsc.picker.padB.appendChild(jsc.picker.cross);\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.padB);\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.padM);\r\n\r\n\t\t\t\tjsc.picker.sld.appendChild(jsc.picker.sldGrad.elm);\r\n\t\t\t\tjsc.picker.sldB.appendChild(jsc.picker.sld);\r\n\t\t\t\tjsc.picker.sldB.appendChild(jsc.picker.sldPtrOB);\r\n\t\t\t\tjsc.picker.sldPtrOB.appendChild(jsc.picker.sldPtrMB);\r\n\t\t\t\tjsc.picker.sldPtrMB.appendChild(jsc.picker.sldPtrIB);\r\n\t\t\t\tjsc.picker.sldPtrIB.appendChild(jsc.picker.sldPtrS);\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.sldB);\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.sldM);\r\n\r\n\t\t\t\tjsc.picker.asld.appendChild(jsc.picker.asldGrad.elm);\r\n\t\t\t\tjsc.picker.asldB.appendChild(jsc.picker.asld);\r\n\t\t\t\tjsc.picker.asldB.appendChild(jsc.picker.asldPtrOB);\r\n\t\t\t\tjsc.picker.asldPtrOB.appendChild(jsc.picker.asldPtrMB);\r\n\t\t\t\tjsc.picker.asldPtrMB.appendChild(jsc.picker.asldPtrIB);\r\n\t\t\t\tjsc.picker.asldPtrIB.appendChild(jsc.picker.asldPtrS);\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.asldB);\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.asldM);\r\n\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.pal);\r\n\r\n\t\t\t\tjsc.picker.btn.appendChild(jsc.picker.btnT);\r\n\t\t\t\tjsc.picker.box.appendChild(jsc.picker.btn);\r\n\r\n\t\t\t\tjsc.picker.boxB.appendChild(jsc.picker.box);\r\n\t\t\t\tjsc.picker.wrap.appendChild(jsc.picker.boxS);\r\n\t\t\t\tjsc.picker.wrap.appendChild(jsc.picker.boxB);\r\n\r\n\t\t\t\tjsc.picker.wrap.addEventListener('touchstart', jsc.onPickerTouchStart,\r\n\t\t\t\t\tjsc.isPassiveEventSupported ? {passive: false} : false);\r\n\t\t\t}\r\n\r\n\t\t\tvar p = jsc.picker;\r\n\r\n\t\t\tvar displaySlider = !!jsc.getSliderChannel(THIS);\r\n\t\t\tvar displayAlphaSlider = THIS.hasAlphaChannel();\r\n\t\t\tvar pickerDims = jsc.getPickerDims(THIS);\r\n\t\t\tvar crossOuterSize = (2 * THIS.pointerBorderWidth + THIS.pointerThickness + 2 * THIS.crossSize);\r\n\t\t\tvar controlPadding = jsc.getControlPadding(THIS);\r\n\t\t\tvar borderRadius = Math.min(\r\n\t\t\t\tTHIS.borderRadius,\r\n\t\t\t\tMath.round(THIS.padding * Math.PI)); // px\r\n\t\t\tvar padCursor = 'crosshair';\r\n\r\n\t\t\t// wrap\r\n\t\t\tp.wrap.className = 'jscolor-picker-wrap';\r\n\t\t\tp.wrap.style.clear = 'both';\r\n\t\t\tp.wrap.style.width = pickerDims.borderW + 'px';\r\n\t\t\tp.wrap.style.height = pickerDims.borderH + 'px';\r\n\t\t\tp.wrap.style.zIndex = THIS.zIndex;\r\n\r\n\t\t\t// picker\r\n\t\t\tp.box.className = 'jscolor-picker';\r\n\t\t\tp.box.style.width = pickerDims.paddedW + 'px';\r\n\t\t\tp.box.style.height = pickerDims.paddedH + 'px';\r\n\t\t\tp.box.style.position = 'relative';\r\n\r\n\t\t\t// picker shadow\r\n\t\t\tp.boxS.className = 'jscolor-picker-shadow';\r\n\t\t\tp.boxS.style.position = 'absolute';\r\n\t\t\tp.boxS.style.left = '0';\r\n\t\t\tp.boxS.style.top = '0';\r\n\t\t\tp.boxS.style.width = '100%';\r\n\t\t\tp.boxS.style.height = '100%';\r\n\t\t\tjsc.setBorderRadius(p.boxS, borderRadius + 'px');\r\n\r\n\t\t\t// picker border\r\n\t\t\tp.boxB.className = 'jscolor-picker-border';\r\n\t\t\tp.boxB.style.position = 'relative';\r\n\t\t\tp.boxB.style.border = THIS.borderWidth + 'px solid';\r\n\t\t\tp.boxB.style.borderColor = THIS.borderColor;\r\n\t\t\tp.boxB.style.background = THIS.backgroundColor;\r\n\t\t\tjsc.setBorderRadius(p.boxB, borderRadius + 'px');\r\n\r\n\t\t\t// IE hack:\r\n\t\t\t// If the element is transparent, IE will trigger the event on the elements under it,\r\n\t\t\t// e.g. on Canvas or on elements with border\r\n\t\t\tp.padM.style.background = 'rgba(255,0,0,.2)';\r\n\t\t\tp.sldM.style.background = 'rgba(0,255,0,.2)';\r\n\t\t\tp.asldM.style.background = 'rgba(0,0,255,.2)';\r\n\r\n\t\t\tp.padM.style.opacity =\r\n\t\t\tp.sldM.style.opacity =\r\n\t\t\tp.asldM.style.opacity =\r\n\t\t\t\t'0';\r\n\r\n\t\t\t// pad\r\n\t\t\tp.pad.style.position = 'relative';\r\n\t\t\tp.pad.style.width = THIS.width + 'px';\r\n\t\t\tp.pad.style.height = THIS.height + 'px';\r\n\r\n\t\t\t// pad - color spectrum (HSV and HVS)\r\n\t\t\tp.padCanvas.draw(THIS.width, THIS.height, jsc.getPadYChannel(THIS));\r\n\r\n\t\t\t// pad border\r\n\t\t\tp.padB.style.position = 'absolute';\r\n\t\t\tp.padB.style.left = THIS.padding + 'px';\r\n\t\t\tp.padB.style.top = THIS.padding + 'px';\r\n\t\t\tp.padB.style.border = THIS.controlBorderWidth + 'px solid';\r\n\t\t\tp.padB.style.borderColor = THIS.controlBorderColor;\r\n\r\n\t\t\t// pad mouse area\r\n\t\t\tp.padM.style.position = 'absolute';\r\n\t\t\tp.padM.style.left = 0 + 'px';\r\n\t\t\tp.padM.style.top = 0 + 'px';\r\n\t\t\tp.padM.style.width = (THIS.padding + 2 * THIS.controlBorderWidth + THIS.width + controlPadding) + 'px';\r\n\t\t\tp.padM.style.height = (2 * THIS.controlBorderWidth + 2 * THIS.padding + THIS.height) + 'px';\r\n\t\t\tp.padM.style.cursor = padCursor;\r\n\t\t\tjsc.setData(p.padM, {\r\n\t\t\t\tinstance: THIS,\r\n\t\t\t\tcontrol: 'pad',\r\n\t\t\t})\r\n\r\n\t\t\t// pad cross\r\n\t\t\tp.cross.style.position = 'absolute';\r\n\t\t\tp.cross.style.left =\r\n\t\t\tp.cross.style.top =\r\n\t\t\t\t'0';\r\n\t\t\tp.cross.style.width =\r\n\t\t\tp.cross.style.height =\r\n\t\t\t\tcrossOuterSize + 'px';\r\n\r\n\t\t\t// pad cross border Y and X\r\n\t\t\tp.crossBY.style.position =\r\n\t\t\tp.crossBX.style.position =\r\n\t\t\t\t'absolute';\r\n\t\t\tp.crossBY.style.background =\r\n\t\t\tp.crossBX.style.background =\r\n\t\t\t\tTHIS.pointerBorderColor;\r\n\t\t\tp.crossBY.style.width =\r\n\t\t\tp.crossBX.style.height =\r\n\t\t\t\t(2 * THIS.pointerBorderWidth + THIS.pointerThickness) + 'px';\r\n\t\t\tp.crossBY.style.height =\r\n\t\t\tp.crossBX.style.width =\r\n\t\t\t\tcrossOuterSize + 'px';\r\n\t\t\tp.crossBY.style.left =\r\n\t\t\tp.crossBX.style.top =\r\n\t\t\t\t(Math.floor(crossOuterSize / 2) - Math.floor(THIS.pointerThickness / 2) - THIS.pointerBorderWidth) + 'px';\r\n\t\t\tp.crossBY.style.top =\r\n\t\t\tp.crossBX.style.left =\r\n\t\t\t\t'0';\r\n\r\n\t\t\t// pad cross line Y and X\r\n\t\t\tp.crossLY.style.position =\r\n\t\t\tp.crossLX.style.position =\r\n\t\t\t\t'absolute';\r\n\t\t\tp.crossLY.style.background =\r\n\t\t\tp.crossLX.style.background =\r\n\t\t\t\tTHIS.pointerColor;\r\n\t\t\tp.crossLY.style.height =\r\n\t\t\tp.crossLX.style.width =\r\n\t\t\t\t(crossOuterSize - 2 * THIS.pointerBorderWidth) + 'px';\r\n\t\t\tp.crossLY.style.width =\r\n\t\t\tp.crossLX.style.height =\r\n\t\t\t\tTHIS.pointerThickness + 'px';\r\n\t\t\tp.crossLY.style.left =\r\n\t\t\tp.crossLX.style.top =\r\n\t\t\t\t(Math.floor(crossOuterSize / 2) - Math.floor(THIS.pointerThickness / 2)) + 'px';\r\n\t\t\tp.crossLY.style.top =\r\n\t\t\tp.crossLX.style.left =\r\n\t\t\t\tTHIS.pointerBorderWidth + 'px';\r\n\r\n\r\n\t\t\t// slider\r\n\t\t\tp.sld.style.overflow = 'hidden';\r\n\t\t\tp.sld.style.width = THIS.sliderSize + 'px';\r\n\t\t\tp.sld.style.height = THIS.height + 'px';\r\n\r\n\t\t\t// slider gradient\r\n\t\t\tp.sldGrad.draw(THIS.sliderSize, THIS.height, '#000', '#000');\r\n\r\n\t\t\t// slider border\r\n\t\t\tp.sldB.style.display = displaySlider ? 'block' : 'none';\r\n\t\t\tp.sldB.style.position = 'absolute';\r\n\t\t\tp.sldB.style.left = (THIS.padding + THIS.width + 2 * THIS.controlBorderWidth + 2 * controlPadding) + 'px';\r\n\t\t\tp.sldB.style.top = THIS.padding + 'px';\r\n\t\t\tp.sldB.style.border = THIS.controlBorderWidth + 'px solid';\r\n\t\t\tp.sldB.style.borderColor = THIS.controlBorderColor;\r\n\r\n\t\t\t// slider mouse area\r\n\t\t\tp.sldM.style.display = displaySlider ? 'block' : 'none';\r\n\t\t\tp.sldM.style.position = 'absolute';\r\n\t\t\tp.sldM.style.left = (THIS.padding + THIS.width + 2 * THIS.controlBorderWidth + controlPadding) + 'px';\r\n\t\t\tp.sldM.style.top = 0 + 'px';\r\n\t\t\tp.sldM.style.width = (\r\n\t\t\t\t\t(THIS.sliderSize + 2 * controlPadding + 2 * THIS.controlBorderWidth) +\r\n\t\t\t\t\t(displayAlphaSlider ? 0 : Math.max(0, THIS.padding - controlPadding)) // remaining padding to the right edge\r\n\t\t\t\t) + 'px';\r\n\t\t\tp.sldM.style.height = (2 * THIS.controlBorderWidth + 2 * THIS.padding + THIS.height) + 'px';\r\n\t\t\tp.sldM.style.cursor = 'default';\r\n\t\t\tjsc.setData(p.sldM, {\r\n\t\t\t\tinstance: THIS,\r\n\t\t\t\tcontrol: 'sld',\r\n\t\t\t});\r\n\r\n\t\t\t// slider pointer inner and outer border\r\n\t\t\tp.sldPtrIB.style.border =\r\n\t\t\tp.sldPtrOB.style.border =\r\n\t\t\t\tTHIS.pointerBorderWidth + 'px solid ' + THIS.pointerBorderColor;\r\n\r\n\t\t\t// slider pointer outer border\r\n\t\t\tp.sldPtrOB.style.position = 'absolute';\r\n\t\t\tp.sldPtrOB.style.left = -(2 * THIS.pointerBorderWidth + THIS.pointerThickness) + 'px';\r\n\t\t\tp.sldPtrOB.style.top = '0';\r\n\r\n\t\t\t// slider pointer middle border\r\n\t\t\tp.sldPtrMB.style.border = THIS.pointerThickness + 'px solid ' + THIS.pointerColor;\r\n\r\n\t\t\t// slider pointer spacer\r\n\t\t\tp.sldPtrS.style.width = THIS.sliderSize + 'px';\r\n\t\t\tp.sldPtrS.style.height = jsc.pub.sliderInnerSpace + 'px';\r\n\r\n\r\n\t\t\t// alpha slider\r\n\t\t\tp.asld.style.overflow = 'hidden';\r\n\t\t\tp.asld.style.width = THIS.sliderSize + 'px';\r\n\t\t\tp.asld.style.height = THIS.height + 'px';\r\n\r\n\t\t\t// alpha slider gradient\r\n\t\t\tp.asldGrad.draw(THIS.sliderSize, THIS.height, '#000');\r\n\r\n\t\t\t// alpha slider border\r\n\t\t\tp.asldB.style.display = displayAlphaSlider ? 'block' : 'none';\r\n\t\t\tp.asldB.style.position = 'absolute';\r\n\t\t\tp.asldB.style.left = (\r\n\t\t\t\t\t(THIS.padding + THIS.width + 2 * THIS.controlBorderWidth + controlPadding) +\r\n\t\t\t\t\t(displaySlider ? (THIS.sliderSize + 3 * controlPadding + 2 * THIS.controlBorderWidth) : 0)\r\n\t\t\t\t) + 'px';\r\n\t\t\tp.asldB.style.top = THIS.padding + 'px';\r\n\t\t\tp.asldB.style.border = THIS.controlBorderWidth + 'px solid';\r\n\t\t\tp.asldB.style.borderColor = THIS.controlBorderColor;\r\n\r\n\t\t\t// alpha slider mouse area\r\n\t\t\tp.asldM.style.display = displayAlphaSlider ? 'block' : 'none';\r\n\t\t\tp.asldM.style.position = 'absolute';\r\n\t\t\tp.asldM.style.left = (\r\n\t\t\t\t\t(THIS.padding + THIS.width + 2 * THIS.controlBorderWidth + controlPadding) +\r\n\t\t\t\t\t(displaySlider ? (THIS.sliderSize + 2 * controlPadding + 2 * THIS.controlBorderWidth) : 0)\r\n\t\t\t\t) + 'px';\r\n\t\t\tp.asldM.style.top = 0 + 'px';\r\n\t\t\tp.asldM.style.width = (\r\n\t\t\t\t\t(THIS.sliderSize + 2 * controlPadding + 2 * THIS.controlBorderWidth) +\r\n\t\t\t\t\tMath.max(0, THIS.padding - controlPadding) // remaining padding to the right edge\r\n\t\t\t\t) + 'px';\r\n\t\t\tp.asldM.style.height = (2 * THIS.controlBorderWidth + 2 * THIS.padding + THIS.height) + 'px';\r\n\t\t\tp.asldM.style.cursor = 'default';\r\n\t\t\tjsc.setData(p.asldM, {\r\n\t\t\t\tinstance: THIS,\r\n\t\t\t\tcontrol: 'asld',\r\n\t\t\t})\r\n\r\n\t\t\t// alpha slider pointer inner and outer border\r\n\t\t\tp.asldPtrIB.style.border =\r\n\t\t\tp.asldPtrOB.style.border =\r\n\t\t\t\tTHIS.pointerBorderWidth + 'px solid ' + THIS.pointerBorderColor;\r\n\r\n\t\t\t// alpha slider pointer outer border\r\n\t\t\tp.asldPtrOB.style.position = 'absolute';\r\n\t\t\tp.asldPtrOB.style.left = -(2 * THIS.pointerBorderWidth + THIS.pointerThickness) + 'px';\r\n\t\t\tp.asldPtrOB.style.top = '0';\r\n\r\n\t\t\t// alpha slider pointer middle border\r\n\t\t\tp.asldPtrMB.style.border = THIS.pointerThickness + 'px solid ' + THIS.pointerColor;\r\n\r\n\t\t\t// alpha slider pointer spacer\r\n\t\t\tp.asldPtrS.style.width = THIS.sliderSize + 'px';\r\n\t\t\tp.asldPtrS.style.height = jsc.pub.sliderInnerSpace + 'px';\r\n\r\n\r\n\t\t\t// palette\r\n\t\t\tp.pal.className = 'jscolor-palette';\r\n\t\t\tp.pal.style.display = pickerDims.palette.rows ? 'block' : 'none';\r\n\t\t\tp.pal.style.position = 'absolute';\r\n\t\t\tp.pal.style.left = THIS.padding + 'px';\r\n\t\t\tp.pal.style.top = (2 * THIS.controlBorderWidth + 2 * THIS.padding + THIS.height) + 'px';\r\n\r\n\t\t\t// palette's color samples\r\n\r\n\t\t\tp.pal.innerHTML = '';\r\n\r\n\t\t\tvar chessboard = jsc.genColorPreviewCanvas('rgba(0,0,0,0)');\r\n\r\n\t\t\tvar si = 0; // color sample's index\r\n\t\t\tfor (var r = 0; r < pickerDims.palette.rows; r++) {\r\n\t\t\t\tfor (var c = 0; c < pickerDims.palette.cols && si < THIS._palette.length; c++, si++) {\r\n\t\t\t\t\tvar sampleColor = THIS._palette[si];\r\n\t\t\t\t\tvar sampleCssColor = jsc.rgbaColor.apply(null, sampleColor.rgba);\r\n\r\n\t\t\t\t\tvar sc = jsc.createEl('div'); // color sample's color\r\n\t\t\t\t\tsc.style.width = (pickerDims.palette.cellW - 2 * THIS.controlBorderWidth) + 'px';\r\n\t\t\t\t\tsc.style.height = (pickerDims.palette.cellH - 2 * THIS.controlBorderWidth) + 'px';\r\n\t\t\t\t\tsc.style.backgroundColor = sampleCssColor;\r\n\r\n\t\t\t\t\tvar sw = jsc.createEl('div'); // color sample's wrap\r\n\t\t\t\t\tsw.className = 'jscolor-palette-sample';\r\n\t\t\t\t\tsw.style.display = 'block';\r\n\t\t\t\t\tsw.style.position = 'absolute';\r\n\t\t\t\t\tsw.style.left = (\r\n\t\t\t\t\t\t\tpickerDims.palette.cols <= 1 ? 0 :\r\n\t\t\t\t\t\t\tMath.round(10 * (c * ((pickerDims.contentW - pickerDims.palette.cellW) / (pickerDims.palette.cols - 1)))) / 10\r\n\t\t\t\t\t\t) + 'px';\r\n\t\t\t\t\tsw.style.top = (r * (pickerDims.palette.cellH + THIS.paletteSpacing)) + 'px';\r\n\t\t\t\t\tsw.style.border = THIS.controlBorderWidth + 'px solid';\r\n\t\t\t\t\tsw.style.borderColor = THIS.controlBorderColor;\r\n\t\t\t\t\tsw.style.cursor = 'pointer';\r\n\t\t\t\t\tif (sampleColor.rgba[3] !== null && sampleColor.rgba[3] < 1.0) { // only create chessboard background if the sample has transparency\r\n\t\t\t\t\t\tsw.style.backgroundImage = 'url(\\'' + chessboard.canvas.toDataURL() + '\\')';\r\n\t\t\t\t\t\tsw.style.backgroundRepeat = 'repeat';\r\n\t\t\t\t\t\tsw.style.backgroundPosition = 'center center';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tjsc.setData(sw, {\r\n\t\t\t\t\t\tinstance: THIS,\r\n\t\t\t\t\t\tcontrol: 'palette-sample',\r\n\t\t\t\t\t\tcolor: sampleColor,\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsw.addEventListener('click', jsc.onPaletteSampleClick, false);\r\n\t\t\t\t\tsw.appendChild(sc);\r\n\t\t\t\t\tp.pal.appendChild(sw);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// the Close button\r\n\t\t\tfunction setBtnBorder () {\r\n\t\t\t\tvar insetColors = THIS.controlBorderColor.split(/\\s+/);\r\n\t\t\t\tvar outsetColor = insetColors.length < 2 ? insetColors[0] : insetColors[1] + ' ' + insetColors[0] + ' ' + insetColors[0] + ' ' + insetColors[1];\r\n\t\t\t\tp.btn.style.borderColor = outsetColor;\r\n\t\t\t}\r\n\t\t\tvar btnPadding = 15; // px\r\n\t\t\tp.btn.className = 'jscolor-btn-close';\r\n\t\t\tp.btn.style.display = THIS.closeButton ? 'block' : 'none';\r\n\t\t\tp.btn.style.position = 'absolute';\r\n\t\t\tp.btn.style.left = THIS.padding + 'px';\r\n\t\t\tp.btn.style.bottom = THIS.padding + 'px';\r\n\t\t\tp.btn.style.padding = '0 ' + btnPadding + 'px';\r\n\t\t\tp.btn.style.maxWidth = (pickerDims.contentW - 2 * THIS.controlBorderWidth - 2 * btnPadding) + 'px';\r\n\t\t\tp.btn.style.overflow = 'hidden';\r\n\t\t\tp.btn.style.height = THIS.buttonHeight + 'px';\r\n\t\t\tp.btn.style.whiteSpace = 'nowrap';\r\n\t\t\tp.btn.style.border = THIS.controlBorderWidth + 'px solid';\r\n\t\t\tsetBtnBorder();\r\n\t\t\tp.btn.style.color = THIS.buttonColor;\r\n\t\t\tp.btn.style.font = '12px sans-serif';\r\n\t\t\tp.btn.style.textAlign = 'center';\r\n\t\t\tp.btn.style.cursor = 'pointer';\r\n\t\t\tp.btn.onmousedown = function () {\r\n\t\t\t\tTHIS.hide();\r\n\t\t\t};\r\n\t\t\tp.btnT.style.lineHeight = THIS.buttonHeight + 'px';\r\n\t\t\tp.btnT.innerHTML = '';\r\n\t\t\tp.btnT.appendChild(window.document.createTextNode(THIS.closeText));\r\n\r\n\t\t\t// reposition the pointers\r\n\t\t\tredrawPad();\r\n\t\t\tredrawSld();\r\n\t\t\tredrawASld();\r\n\r\n\t\t\t// If we are changing the owner without first closing the picker,\r\n\t\t\t// make sure to first deal with the old owner\r\n\t\t\tif (jsc.picker.owner && jsc.picker.owner !== THIS) {\r\n\t\t\t\tjsc.removeClass(jsc.picker.owner.targetElement, jsc.pub.activeClassName);\r\n\t\t\t}\r\n\r\n\t\t\t// Set a new picker owner\r\n\t\t\tjsc.picker.owner = THIS;\r\n\r\n\t\t\t// The redrawPosition() method needs picker.owner to be set, that's why we call it here,\r\n\t\t\t// after setting the owner\r\n\t\t\tif (THIS.container === window.document.body) {\r\n\t\t\t\tjsc.redrawPosition();\r\n\t\t\t} else {\r\n\t\t\t\tjsc._drawPosition(THIS, 0, 0, 'relative', false);\r\n\t\t\t}\r\n\r\n\t\t\tif (p.wrap.parentNode !== THIS.container) {\r\n\t\t\t\tTHIS.container.appendChild(p.wrap);\r\n\t\t\t}\r\n\r\n\t\t\tjsc.addClass(THIS.targetElement, jsc.pub.activeClassName);\r\n\t\t}\r\n\r\n\r\n\t\tfunction redrawPad () {\r\n\t\t\t// redraw the pad pointer\r\n\t\t\tvar yChannel = jsc.getPadYChannel(THIS);\r\n\t\t\tvar x = Math.round((THIS.channels.h / 360) * (THIS.width - 1));\r\n\t\t\tvar y = Math.round((1 - THIS.channels[yChannel] / 100) * (THIS.height - 1));\r\n\t\t\tvar crossOuterSize = (2 * THIS.pointerBorderWidth + THIS.pointerThickness + 2 * THIS.crossSize);\r\n\t\t\tvar ofs = -Math.floor(crossOuterSize / 2);\r\n\t\t\tjsc.picker.cross.style.left = (x + ofs) + 'px';\r\n\t\t\tjsc.picker.cross.style.top = (y + ofs) + 'px';\r\n\r\n\t\t\t// redraw the slider\r\n\t\t\tswitch (jsc.getSliderChannel(THIS)) {\r\n\t\t\tcase 's':\r\n\t\t\t\tvar rgb1 = jsc.HSV_RGB(THIS.channels.h, 100, THIS.channels.v);\r\n\t\t\t\tvar rgb2 = jsc.HSV_RGB(THIS.channels.h, 0, THIS.channels.v);\r\n\t\t\t\tvar color1 = 'rgb(' +\r\n\t\t\t\t\tMath.round(rgb1[0]) + ',' +\r\n\t\t\t\t\tMath.round(rgb1[1]) + ',' +\r\n\t\t\t\t\tMath.round(rgb1[2]) + ')';\r\n\t\t\t\tvar color2 = 'rgb(' +\r\n\t\t\t\t\tMath.round(rgb2[0]) + ',' +\r\n\t\t\t\t\tMath.round(rgb2[1]) + ',' +\r\n\t\t\t\t\tMath.round(rgb2[2]) + ')';\r\n\t\t\t\tjsc.picker.sldGrad.draw(THIS.sliderSize, THIS.height, color1, color2);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'v':\r\n\t\t\t\tvar rgb = jsc.HSV_RGB(THIS.channels.h, THIS.channels.s, 100);\r\n\t\t\t\tvar color1 = 'rgb(' +\r\n\t\t\t\t\tMath.round(rgb[0]) + ',' +\r\n\t\t\t\t\tMath.round(rgb[1]) + ',' +\r\n\t\t\t\t\tMath.round(rgb[2]) + ')';\r\n\t\t\t\tvar color2 = '#000';\r\n\t\t\t\tjsc.picker.sldGrad.draw(THIS.sliderSize, THIS.height, color1, color2);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t// redraw the alpha slider\r\n\t\t\tjsc.picker.asldGrad.draw(THIS.sliderSize, THIS.height, THIS.toHEXString());\r\n\t\t}\r\n\r\n\r\n\t\tfunction redrawSld () {\r\n\t\t\tvar sldChannel = jsc.getSliderChannel(THIS);\r\n\t\t\tif (sldChannel) {\r\n\t\t\t\t// redraw the slider pointer\r\n\t\t\t\tvar y = Math.round((1 - THIS.channels[sldChannel] / 100) * (THIS.height - 1));\r\n\t\t\t\tjsc.picker.sldPtrOB.style.top = (y - (2 * THIS.pointerBorderWidth + THIS.pointerThickness) - Math.floor(jsc.pub.sliderInnerSpace / 2)) + 'px';\r\n\t\t\t}\r\n\r\n\t\t\t// redraw the alpha slider\r\n\t\t\tjsc.picker.asldGrad.draw(THIS.sliderSize, THIS.height, THIS.toHEXString());\r\n\t\t}\r\n\r\n\r\n\t\tfunction redrawASld () {\r\n\t\t\tvar y = Math.round((1 - THIS.channels.a) * (THIS.height - 1));\r\n\t\t\tjsc.picker.asldPtrOB.style.top = (y - (2 * THIS.pointerBorderWidth + THIS.pointerThickness) - Math.floor(jsc.pub.sliderInnerSpace / 2)) + 'px';\r\n\t\t}\r\n\r\n\r\n\t\tfunction isPickerOwner () {\r\n\t\t\treturn jsc.picker && jsc.picker.owner === THIS;\r\n\t\t}\r\n\r\n\r\n\t\tfunction onValueKeyDown (ev) {\r\n\t\t\tif (jsc.eventKey(ev) === 'Enter') {\r\n\t\t\t\tif (THIS.valueElement) {\r\n\t\t\t\t\tTHIS.processValueInput(THIS.valueElement.value);\r\n\t\t\t\t}\r\n\t\t\t\tTHIS.tryHide();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction onAlphaKeyDown (ev) {\r\n\t\t\tif (jsc.eventKey(ev) === 'Enter') {\r\n\t\t\t\tif (THIS.alphaElement) {\r\n\t\t\t\t\tTHIS.processAlphaInput(THIS.alphaElement.value);\r\n\t\t\t\t}\r\n\t\t\t\tTHIS.tryHide();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction onValueChange (ev) {\r\n\t\t\tif (jsc.getData(ev, 'internal')) {\r\n\t\t\t\treturn; // skip if the event was internally triggered by jscolor\r\n\t\t\t}\r\n\r\n\t\t\tvar oldVal = THIS.valueElement.value;\r\n\r\n\t\t\tTHIS.processValueInput(THIS.valueElement.value); // this might change the value\r\n\r\n\t\t\tjsc.triggerCallback(THIS, 'onChange');\r\n\r\n\t\t\tif (THIS.valueElement.value !== oldVal) {\r\n\t\t\t\t// value was additionally changed -> let's trigger the change event again, even though it was natively dispatched\r\n\t\t\t\tjsc.triggerInputEvent(THIS.valueElement, 'change', true, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction onAlphaChange (ev) {\r\n\t\t\tif (jsc.getData(ev, 'internal')) {\r\n\t\t\t\treturn; // skip if the event was internally triggered by jscolor\r\n\t\t\t}\r\n\r\n\t\t\tvar oldVal = THIS.alphaElement.value;\r\n\r\n\t\t\tTHIS.processAlphaInput(THIS.alphaElement.value); // this might change the value\r\n\r\n\t\t\tjsc.triggerCallback(THIS, 'onChange');\r\n\r\n\t\t\t// triggering valueElement's onChange (because changing alpha changes the entire color, e.g. with rgba format)\r\n\t\t\tjsc.triggerInputEvent(THIS.valueElement, 'change', true, true);\r\n\r\n\t\t\tif (THIS.alphaElement.value !== oldVal) {\r\n\t\t\t\t// value was additionally changed -> let's trigger the change event again, even though it was natively dispatched\r\n\t\t\t\tjsc.triggerInputEvent(THIS.alphaElement, 'change', true, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction onValueInput (ev) {\r\n\t\t\tif (jsc.getData(ev, 'internal')) {\r\n\t\t\t\treturn; // skip if the event was internally triggered by jscolor\r\n\t\t\t}\r\n\r\n\t\t\tif (THIS.valueElement) {\r\n\t\t\t\tTHIS.fromString(THIS.valueElement.value, jsc.flags.leaveValue);\r\n\t\t\t}\r\n\r\n\t\t\tjsc.triggerCallback(THIS, 'onInput');\r\n\r\n\t\t\t// triggering valueElement's onInput\r\n\t\t\t// (not needed, it was dispatched normally by the browser)\r\n\t\t}\r\n\r\n\r\n\t\tfunction onAlphaInput (ev) {\r\n\t\t\tif (jsc.getData(ev, 'internal')) {\r\n\t\t\t\treturn; // skip if the event was internally triggered by jscolor\r\n\t\t\t}\r\n\r\n\t\t\tif (THIS.alphaElement) {\r\n\t\t\t\tTHIS.fromHSVA(null, null, null, parseFloat(THIS.alphaElement.value), jsc.flags.leaveAlpha);\r\n\t\t\t}\r\n\r\n\t\t\tjsc.triggerCallback(THIS, 'onInput');\r\n\r\n\t\t\t// triggering valueElement's onInput (because changing alpha changes the entire color, e.g. with rgba format)\r\n\t\t\tjsc.triggerInputEvent(THIS.valueElement, 'input', true, true);\r\n\t\t}\r\n\r\n\r\n\t\t// let's process the DEPRECATED 'options' property (this will be later removed)\r\n\t\tif (jsc.pub.options) {\r\n\t\t\t// let's set custom default options, if specified\r\n\t\t\tfor (var opt in jsc.pub.options) {\r\n\t\t\t\tif (jsc.pub.options.hasOwnProperty(opt)) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tsetOption(opt, jsc.pub.options[opt]);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// let's apply configuration presets\r\n\t\t//\r\n\t\tvar presetsArr = [];\r\n\r\n\t\tif (opts.preset) {\r\n\t\t\tif (typeof opts.preset === 'string') {\r\n\t\t\t\tpresetsArr = opts.preset.split(/\\s+/);\r\n\t\t\t} else if (Array.isArray(opts.preset)) {\r\n\t\t\t\tpresetsArr = opts.preset.slice(); // slice() to clone\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn('Unrecognized preset value');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// always use the 'default' preset. If it's not listed, append it to the end.\r\n\t\tif (presetsArr.indexOf('default') === -1) {\r\n\t\t\tpresetsArr.push('default');\r\n\t\t}\r\n\r\n\t\t// let's apply the presets in reverse order, so that should there be any overlapping options,\r\n\t\t// the formerly listed preset will override the latter\r\n\t\tfor (var i = presetsArr.length - 1; i >= 0; i -= 1) {\r\n\t\t\tvar pres = presetsArr[i];\r\n\t\t\tif (!pres) {\r\n\t\t\t\tcontinue; // preset is empty string\r\n\t\t\t}\r\n\t\t\tif (!jsc.pub.presets.hasOwnProperty(pres)) {\r\n\t\t\t\tconsole.warn('Unknown preset: %s', pres);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor (var opt in jsc.pub.presets[pres]) {\r\n\t\t\t\tif (jsc.pub.presets[pres].hasOwnProperty(opt)) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tsetOption(opt, jsc.pub.presets[pres][opt]);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// let's set specific options for this color picker\r\n\t\tvar nonProperties = [\r\n\t\t\t// these options won't be set as instance properties\r\n\t\t\t'preset',\r\n\t\t];\r\n\t\tfor (var opt in opts) {\r\n\t\t\tif (opts.hasOwnProperty(opt)) {\r\n\t\t\t\tif (nonProperties.indexOf(opt) === -1) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tsetOption(opt, opts[opt]);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.warn(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t//\r\n\t\t// Install the color picker on chosen element(s)\r\n\t\t//\r\n\r\n\r\n\t\t// Determine picker's container element\r\n\t\tif (this.container === undefined) {\r\n\t\t\tthis.container = window.document.body; // default container is BODY element\r\n\r\n\t\t} else { // explicitly set to custom element\r\n\t\t\tthis.container = jsc.node(this.container);\r\n\t\t}\r\n\r\n\t\tif (!this.container) {\r\n\t\t\tthrow new Error('Cannot instantiate color picker without a container element');\r\n\t\t}\r\n\r\n\r\n\t\t// Fetch the target element\r\n\t\tthis.targetElement = jsc.node(targetElement);\r\n\r\n\t\tif (!this.targetElement) {\r\n\t\t\t// temporarily customized error message to help with migrating from versions prior to 2.2\r\n\t\t\tif (typeof targetElement === 'string' && /^[a-zA-Z][\\w:.-]*$/.test(targetElement)) {\r\n\t\t\t\t// targetElement looks like valid ID\r\n\t\t\t\tvar possiblyId = targetElement;\r\n\t\t\t\tthrow new Error('If \\'' + possiblyId + '\\' is supposed to be an ID, please use \\'#' + possiblyId + '\\' or any valid CSS selector.');\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error('Cannot instantiate color picker without a target element');\r\n\t\t}\r\n\r\n\t\tif (this.targetElement.jscolor && this.targetElement.jscolor instanceof jsc.pub) {\r\n\t\t\tthrow new Error('Color picker already installed on this element');\r\n\t\t}\r\n\r\n\r\n\t\t// link this instance with the target element\r\n\t\tthis.targetElement.jscolor = this;\r\n\t\tjsc.addClass(this.targetElement, jsc.pub.className);\r\n\r\n\t\t// register this instance\r\n\t\tjsc.instances.push(this);\r\n\r\n\r\n\t\t// if target is BUTTON\r\n\t\tif (jsc.isButton(this.targetElement)) {\r\n\r\n\t\t\tif (this.targetElement.type.toLowerCase() !== 'button') {\r\n\t\t\t\t// on buttons, always force type to be 'button', e.g. in situations the target <button> has no type\r\n\t\t\t\t// and thus defaults to 'submit' and would submit the form when clicked\r\n\t\t\t\tthis.targetElement.type = 'button';\r\n\t\t\t}\r\n\r\n\t\t\tif (jsc.isButtonEmpty(this.targetElement)) { // empty button\r\n\t\t\t\t// it is important to clear element's contents first.\r\n\t\t\t\t// if we're re-instantiating color pickers on DOM that has been modified by changing page's innerHTML,\r\n\t\t\t\t// we would keep adding more non-breaking spaces to element's content (because element's contents survive\r\n\t\t\t\t// innerHTML changes, but picker instances don't)\r\n\t\t\t\tjsc.removeChildren(this.targetElement);\r\n\r\n\t\t\t\t// let's insert a non-breaking space\r\n\t\t\t\tthis.targetElement.appendChild(window.document.createTextNode('\\xa0'));\r\n\r\n\t\t\t\t// set min-width = previewSize, if not already greater\r\n\t\t\t\tvar compStyle = jsc.getCompStyle(this.targetElement);\r\n\t\t\t\tvar currMinWidth = parseFloat(compStyle['min-width']) || 0;\r\n\t\t\t\tif (currMinWidth < this.previewSize) {\r\n\t\t\t\t\tjsc.setStyle(this.targetElement, {\r\n\t\t\t\t\t\t'min-width': this.previewSize + 'px',\r\n\t\t\t\t\t}, this.forceStyle);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Determine the value element\r\n\t\tif (this.valueElement === undefined) {\r\n\t\t\tif (jsc.isTextInput(this.targetElement)) {\r\n\t\t\t\t// for text inputs, default valueElement is targetElement\r\n\t\t\t\tthis.valueElement = this.targetElement;\r\n\t\t\t} else {\r\n\t\t\t\t// leave it undefined\r\n\t\t\t}\r\n\r\n\t\t} else if (this.valueElement === null) { // explicitly set to null\r\n\t\t\t// leave it null\r\n\r\n\t\t} else { // explicitly set to custom element\r\n\t\t\tthis.valueElement = jsc.node(this.valueElement);\r\n\t\t}\r\n\r\n\t\t// Determine the alpha element\r\n\t\tif (this.alphaElement) {\r\n\t\t\tthis.alphaElement = jsc.node(this.alphaElement);\r\n\t\t}\r\n\r\n\t\t// Determine the preview element\r\n\t\tif (this.previewElement === undefined) {\r\n\t\t\tthis.previewElement = this.targetElement; // default previewElement is targetElement\r\n\r\n\t\t} else if (this.previewElement === null) { // explicitly set to null\r\n\t\t\t// leave it null\r\n\r\n\t\t} else { // explicitly set to custom element\r\n\t\t\tthis.previewElement = jsc.node(this.previewElement);\r\n\t\t}\r\n\r\n\t\t// valueElement\r\n\t\tif (this.valueElement && jsc.isTextInput(this.valueElement)) {\r\n\r\n\t\t\t// If the value element has onInput event already set, we need to detach it and attach AFTER our listener.\r\n\t\t\t// otherwise the picker instance would still contain the old color when accessed from the onInput handler.\r\n\t\t\tvar valueElementOrigEvents = {\r\n\t\t\t\tonInput: this.valueElement.oninput\r\n\t\t\t};\r\n\t\t\tthis.valueElement.oninput = null;\r\n\r\n\t\t\tthis.valueElement.addEventListener('keydown', onValueKeyDown, false);\r\n\t\t\tthis.valueElement.addEventListener('change', onValueChange, false);\r\n\t\t\tthis.valueElement.addEventListener('input', onValueInput, false);\r\n\t\t\t// the original event listener must be attached AFTER our handler (to let it first set picker's color)\r\n\t\t\tif (valueElementOrigEvents.onInput) {\r\n\t\t\t\tthis.valueElement.addEventListener('input', valueElementOrigEvents.onInput, false);\r\n\t\t\t}\r\n\r\n\t\t\tthis.valueElement.setAttribute('autocomplete', 'off');\r\n\t\t\tthis.valueElement.setAttribute('autocorrect', 'off');\r\n\t\t\tthis.valueElement.setAttribute('autocapitalize', 'off');\r\n\t\t\tthis.valueElement.setAttribute('spellcheck', false);\r\n\t\t}\r\n\r\n\t\t// alphaElement\r\n\t\tif (this.alphaElement && jsc.isTextInput(this.alphaElement)) {\r\n\t\t\tthis.alphaElement.addEventListener('keydown', onAlphaKeyDown, false);\r\n\t\t\tthis.alphaElement.addEventListener('change', onAlphaChange, false);\r\n\t\t\tthis.alphaElement.addEventListener('input', onAlphaInput, false);\r\n\r\n\t\t\tthis.alphaElement.setAttribute('autocomplete', 'off');\r\n\t\t\tthis.alphaElement.setAttribute('autocorrect', 'off');\r\n\t\t\tthis.alphaElement.setAttribute('autocapitalize', 'off');\r\n\t\t\tthis.alphaElement.setAttribute('spellcheck', false);\r\n\t\t}\r\n\r\n\t\t// determine initial color value\r\n\t\t//\r\n\t\tvar initValue = 'FFFFFF';\r\n\r\n\t\tif (this.value !== undefined) {\r\n\t\t\tinitValue = this.value; // get initial color from the 'value' property\r\n\t\t} else if (this.valueElement && this.valueElement.value !== undefined) {\r\n\t\t\tinitValue = this.valueElement.value; // get initial color from valueElement's value\r\n\t\t}\r\n\r\n\t\t// determine initial alpha value\r\n\t\t//\r\n\t\tvar initAlpha = undefined;\r\n\r\n\t\tif (this.alpha !== undefined) {\r\n\t\t\tinitAlpha = (''+this.alpha); // get initial alpha value from the 'alpha' property\r\n\t\t} else if (this.alphaElement && this.alphaElement.value !== undefined) {\r\n\t\t\tinitAlpha = this.alphaElement.value; // get initial color from alphaElement's value\r\n\t\t}\r\n\r\n\t\t// determine current format based on the initial color value\r\n\t\t//\r\n\t\tthis._currentFormat = null;\r\n\r\n\t\tif (['auto', 'any'].indexOf(this.format.toLowerCase()) > -1) {\r\n\t\t\t// format is 'auto' or 'any' -> let's auto-detect current format\r\n\t\t\tvar color = jsc.parseColorString(initValue);\r\n\t\t\tthis._currentFormat = color ? color.format : 'hex';\r\n\t\t} else {\r\n\t\t\t// format is specified\r\n\t\t\tthis._currentFormat = this.format.toLowerCase();\r\n\t\t}\r\n\r\n\r\n\t\t// let's parse the initial color value and expose color's preview\r\n\t\tthis.processValueInput(initValue);\r\n\r\n\t\t// let's also parse and expose the initial alpha value, if any\r\n\t\t//\r\n\t\t// Note: If the initial color value contains alpha value in it (e.g. in rgba format),\r\n\t\t// this will overwrite it. So we should only process alpha input if there was any initial\r\n\t\t// alpha explicitly set, otherwise we could needlessly lose initial value's alpha\r\n\t\tif (initAlpha !== undefined) {\r\n\t\t\tthis.processAlphaInput(initAlpha);\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n//================================\r\n// Public properties and methods\r\n//================================\r\n\r\n//\r\n// These will be publicly available via jscolor.<name> and JSColor.<name>\r\n//\r\n\r\n\r\n// class that will be set to elements having jscolor installed on them\r\njsc.pub.className = 'jscolor';\r\n\r\n\r\n// class that will be set to elements having jscolor active on them\r\njsc.pub.activeClassName = 'jscolor-active';\r\n\r\n\r\n// whether to try to parse the options string by evaluating it using 'new Function()'\r\n// in case it could not be parsed with JSON.parse()\r\njsc.pub.looseJSON = true;\r\n\r\n\r\n// presets\r\njsc.pub.presets = {};\r\n\r\n// built-in presets\r\njsc.pub.presets['default'] = {}; // baseline for customization\r\n\r\njsc.pub.presets['light'] = { // default color scheme\r\n\tbackgroundColor: 'rgba(255,255,255,1)',\r\n\tcontrolBorderColor: 'rgba(187,187,187,1)',\r\n\tbuttonColor: 'rgba(0,0,0,1)',\r\n};\r\njsc.pub.presets['dark'] = {\r\n\tbackgroundColor: 'rgba(51,51,51,1)',\r\n\tcontrolBorderColor: 'rgba(153,153,153,1)',\r\n\tbuttonColor: 'rgba(240,240,240,1)',\r\n};\r\n\r\njsc.pub.presets['small'] = { width:101, height:101, padding:10, sliderSize:14, paletteCols:8 };\r\njsc.pub.presets['medium'] = { width:181, height:101, padding:12, sliderSize:16, paletteCols:10 }; // default size\r\njsc.pub.presets['large'] = { width:271, height:151, padding:12, sliderSize:24, paletteCols:15 };\r\n\r\njsc.pub.presets['thin'] = { borderWidth:1, controlBorderWidth:1, pointerBorderWidth:1 }; // default thickness\r\njsc.pub.presets['thick'] = { borderWidth:2, controlBorderWidth:2, pointerBorderWidth:2 };\r\n\r\n\r\n// size of space in the sliders\r\njsc.pub.sliderInnerSpace = 3; // px\r\n\r\n// transparency chessboard\r\njsc.pub.chessboardSize = 8; // px\r\njsc.pub.chessboardColor1 = '#666666';\r\njsc.pub.chessboardColor2 = '#999999';\r\n\r\n// preview separator\r\njsc.pub.previewSeparator = ['rgba(255,255,255,.65)', 'rgba(128,128,128,.65)'];\r\n\r\n\r\n// Initializes jscolor\r\njsc.pub.init = function () {\r\n\tif (jsc.initialized) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// attach some necessary handlers\r\n\twindow.document.addEventListener('mousedown', jsc.onDocumentMouseDown, false);\r\n\twindow.document.addEventListener('keyup', jsc.onDocumentKeyUp, false);\r\n\twindow.addEventListener('resize', jsc.onWindowResize, false);\r\n\twindow.addEventListener('scroll', jsc.onWindowScroll, false);\r\n\r\n\t// install jscolor on current DOM\r\n\tjsc.pub.install();\r\n\r\n\tjsc.initialized = true;\r\n\r\n\t// call functions waiting in the queue\r\n\twhile (jsc.readyQueue.length) {\r\n\t\tvar func = jsc.readyQueue.shift();\r\n\t\tfunc();\r\n\t}\r\n};\r\n\r\n\r\n// Installs jscolor on current DOM tree\r\njsc.pub.install = function (rootNode) {\r\n\tvar success = true;\r\n\r\n\ttry {\r\n\t\tjsc.installBySelector('[data-jscolor]', rootNode);\r\n\t} catch (e) {\r\n\t\tsuccess = false;\r\n\t\tconsole.warn(e);\r\n\t}\r\n\r\n\t// for backward compatibility with DEPRECATED installation using class name\r\n\tif (jsc.pub.lookupClass) {\r\n\t\ttry {\r\n\t\t\tjsc.installBySelector(\r\n\t\t\t\t(\r\n\t\t\t\t\t'input.' + jsc.pub.lookupClass + ', ' +\r\n\t\t\t\t\t'button.' + jsc.pub.lookupClass\r\n\t\t\t\t),\r\n\t\t\t\trootNode\r\n\t\t\t);\r\n\t\t} catch (e) {}\r\n\t}\r\n\r\n\treturn success;\r\n};\r\n\r\n\r\n// Registers function to be called as soon as jscolor is initialized (or immediately, if it already is).\r\n//\r\njsc.pub.ready = function (func) {\r\n\tif (typeof func !== 'function') {\r\n\t\tconsole.warn('Passed value is not a function');\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (jsc.initialized) {\r\n\t\tfunc();\r\n\t} else {\r\n\t\tjsc.readyQueue.push(func);\r\n\t}\r\n\treturn true;\r\n};\r\n\r\n\r\n// Triggers given input event(s) (e.g. 'input' or 'change') on all color pickers.\r\n//\r\n// It is possible to specify multiple events separated with a space.\r\n// If called before jscolor is initialized, then the events will be triggered after initialization.\r\n//\r\njsc.pub.trigger = function (eventNames) {\r\n\tvar triggerNow = function () {\r\n\t\tjsc.triggerGlobal(eventNames);\r\n\t};\r\n\r\n\tif (jsc.initialized) {\r\n\t\ttriggerNow();\r\n\t} else {\r\n\t\tjsc.pub.ready(triggerNow);\r\n\t}\r\n};\r\n\r\n\r\n// Hides current color picker box\r\njsc.pub.hide = function () {\r\n\tif (jsc.picker && jsc.picker.owner) {\r\n\t\tjsc.picker.owner.hide();\r\n\t}\r\n};\r\n\r\n\r\n// Returns a data URL of a gray chessboard image that indicates transparency\r\njsc.pub.chessboard = function (color) {\r\n\tif (!color) {\r\n\t\tcolor = 'rgba(0,0,0,0)';\r\n\t}\r\n\tvar preview = jsc.genColorPreviewCanvas(color);\r\n\treturn preview.canvas.toDataURL();\r\n};\r\n\r\n\r\n// Returns a data URL of a gray chessboard image that indicates transparency\r\njsc.pub.background = function (color) {\r\n\tvar backgrounds = [];\r\n\r\n\t// CSS gradient for background color preview\r\n\tbackgrounds.push(jsc.genColorPreviewGradient(color));\r\n\r\n\t// data URL of generated PNG image with a gray transparency chessboard\r\n\tvar preview = jsc.genColorPreviewCanvas();\r\n\tbackgrounds.push([\r\n\t\t'url(\\'' + preview.canvas.toDataURL() + '\\')',\r\n\t\t'left top',\r\n\t\t'repeat',\r\n\t].join(' '));\r\n\r\n\treturn backgrounds.join(', ');\r\n};\r\n\r\n\r\n//\r\n// DEPRECATED properties and methods\r\n//\r\n\r\n\r\n// DEPRECATED. Use jscolor.presets.default instead.\r\n//\r\n// Custom default options for all color pickers, e.g. { hash: true, width: 300 }\r\njsc.pub.options = {};\r\n\r\n\r\n// DEPRECATED. Use data-jscolor attribute instead, which installs jscolor on given element.\r\n//\r\n// By default, we'll search for all elements with class=\"jscolor\" and install a color picker on them.\r\n//\r\n// You can change what class name will be looked for by setting the property jscolor.lookupClass\r\n// anywhere in your HTML document. To completely disable the automatic lookup, set it to null.\r\n//\r\njsc.pub.lookupClass = 'jscolor';\r\n\r\n\r\n// DEPRECATED. Use data-jscolor attribute instead, which installs jscolor on given element.\r\n//\r\n// Install jscolor on all elements that have the specified class name\r\njsc.pub.installByClassName = function () {\r\n\tconsole.error('jscolor.installByClassName() is DEPRECATED. Use data-jscolor=\"\" attribute instead of a class name.' + jsc.docsRef);\r\n\treturn false;\r\n};\r\n\r\n\r\njsc.register();\r\n\r\n\r\nreturn jsc.pub;\r\n\r\n\r\n})(); // END jscolor\r\n\r\n\r\nif (typeof window.jscolor === 'undefined') {\r\n\twindow.jscolor = window.JSColor = jscolor;\r\n}\r\n\r\n\r\n// END jscolor code\r\n\r\nreturn jscolor;\r\n\r\n}); // END factory\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export let CMOptions = {}; // eslint-disable-line prefer-const\nexport const ConfigPrefix = 'CMConfig';\n","import { CMOptions } from '../VariablesAndData';\n\n/**\n * This function updates the display setting of the two objects created by CM.Disp.CreateWrinklerButtons()\n * It is called by changes in CM.Options.WrinklerButtons\n */\nexport default function ToggleWrinklerButtons() {\n  if (CMOptions.WrinklerButtons && Game.elderWrath) {\n    l('PopAllNormalWrinklerButton').style.display = '';\n    l('PopFattestWrinklerButton').style.display = '';\n  } else {\n    l('PopAllNormalWrinklerButton').style.display = 'none';\n    l('PopFattestWrinklerButton').style.display = 'none';\n  }\n}\n","/** Data related directly to the scales used by Cookie Monster */\n\n/** Array of abbreviations used in the \"Metric\" scale */\nexport const metric: string[] = ['', '', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y'];\n\n/** Array of abbreviations used in the \"Short\" scale */\nexport const shortScale: string[] = [\n  '',\n  '',\n  'M',\n  'B',\n  'Tr',\n  'Quadr',\n  'Quint',\n  'Sext',\n  'Sept',\n  'Oct',\n  'Non',\n  'Dec',\n  'Undec',\n  'Duodec',\n  'Tredec',\n  'Quattuordec',\n  'Quindec',\n  'Sexdec',\n  'Septendec',\n  'Octodec',\n  'Novemdec',\n  'Vigint',\n  'Unvigint',\n  'Duovigint',\n  'Trevigint',\n  'Quattuorvigint',\n];\n\n/** Array of abbreviations used in the \"Abbreviated Short\" scale */\nexport const shortScaleAbbreviated: string[] = [\n  '',\n  'K',\n  'M',\n  'B',\n  'T',\n  'Qa',\n  'Qi',\n  'Sx',\n  'Sp',\n  'Oc',\n  'No',\n  'De',\n  'UDe',\n  'DDe',\n  'TDe',\n  'QaDe',\n  'QiDe',\n  'SxDe',\n  'SpDe',\n  'ODe',\n  'NDe',\n  'Vi',\n  'UVi',\n  'DVi',\n  'TVi',\n  'QaVi',\n  'QiVi',\n  'SxVi',\n  'SpVi',\n  'OVi',\n  'NVi',\n  'Tr',\n  'UTr',\n  'DTr',\n  'TTr',\n  'QaTr',\n  'QiTr',\n  'SxTr',\n  'SpTr',\n  'OTr',\n  'NTr',\n  'Qaa',\n  'UQa',\n  'DQa',\n  'TQa',\n  'QaQa',\n  'QiQa',\n  'SxQa',\n  'SpQa',\n  'OQa',\n  'NQa',\n  'Qia',\n  'UQi',\n  'DQi',\n  'TQi',\n  'QaQi',\n  'QiQi',\n  'SxQi',\n  'SpQi',\n  'OQi',\n  'NQi',\n  'Sxa',\n  'USx',\n  'DSx',\n  'TSx',\n  'QaSx',\n  'QiSx',\n  'SxSx',\n  'SpSx',\n  'OSx',\n  'NSx',\n  'Spa',\n  'USp',\n  'DSp',\n  'TSp',\n  'QaSp',\n  'QiSp',\n  'SxSp',\n  'SpSp',\n  'OSp',\n  'NSp',\n  'Oco',\n  'UOc',\n  'DOc',\n  'TOc',\n  'QaOc',\n  'QiOc',\n  'SxOc',\n  'SpOc',\n  'OOc',\n  'NOc',\n  'Noa',\n  'UNo',\n  'DNo',\n  'TNo',\n  'QaNo',\n  'QiNo',\n  'SxNo',\n  'SpNo',\n  'ONo',\n  'NNo',\n  'Ct',\n  'UCt',\n];\n","export let LastModCount;\nexport let TooltipBuildBackup = []; // eslint-disable-line prefer-const\nexport let TooltipLumpBackup;\nexport let TooltipGrimoireBackup = []; // eslint-disable-line prefer-const\nexport let TooltipUpgradeBackup = []; // eslint-disable-line prefer-const\nexport let BackupGrimoireLaunch;\nexport let BackupGrimoireLaunchMod;\nexport let BackupGrimoireDraw;\nexport let HasReplaceNativeGrimoireLaunch;\nexport let HasReplaceNativeGrimoireDraw;\nexport let LoadMinigames;\nexport let BackupFunctions = {}; // eslint-disable-line prefer-const\n\nexport let LastSeasonPopupState;\nexport let LastTickerFortuneState;\nexport let LastGardenNextStep;\nexport let LastGoldenCookieState;\nexport let LastSpawnedGoldenCookieState;\nexport let LastMagicBarFull;\nexport let CurrSpawnedGoldenCookieState;\nexport let LastWrinklerCount;\n\n/** Stores the date at Game.CalculateGains for God Cyclius\n */\nexport let CycliusDateAtBeginLoop = Date.now(); // eslint-disable-line prefer-const\n\n/** Stores the date at Game.CalculateGains for the Century egg\n */\nexport let CenturyDateAtBeginLoop = Date.now(); // eslint-disable-line prefer-const\n","/** General functions to format or beautify strings */\n\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport { metric, shortScale, shortScaleAbbreviated } from '../../Data/Scales.ts';\nimport { BackupFunctions } from '../../Main/VariablesAndData';\n\n/**\n * This function returns formats number based on the Scale setting\n * @param\t{number}\tnum\t\tNumber to be beautified\n * @param \t{any}\t\tfloats \tUsed in some scenario's by CM.Backup.Beautify (Game's original function)\n * @param\t{number}\tforced\tUsed to force (type 3) in certains cases\n * @returns\t{string}\t\t\tFormatted number\n */\nexport default function Beautify(num, floats, forced) {\n  const decimals = CMOptions.ScaleDecimals + 1;\n  if (num === Infinity) {\n    return 'Infinity';\n  }\n  if (typeof num === 'undefined') {\n    return '0';\n  }\n  if (CMOptions.Scale === 0) {\n    return BackupFunctions.Beautify(num, floats);\n  }\n  if (Number.isFinite(num)) {\n    if (num < 0) {\n      return `-${Beautify(Math.abs(num))}`;\n    }\n    let answer = '';\n    if (num === 0) {\n      return num.toString();\n    }\n    if (num > 0.001 && num < CMOptions.ScaleCutoff) {\n      if (CMOptions.ScaleSeparator) answer = num.toLocaleString('nl');\n      else answer = num.toLocaleString('en');\n      return answer;\n    }\n    if ((CMOptions.Scale === 4 && !forced) || forced === 4) {\n      // Scientific notation, 123456789 => 1.235E+8\n      answer = num.toExponential(decimals).toString().replace('e', 'E');\n    } else {\n      const exponential = num.toExponential().toString();\n      const AmountOfTenPowerThree = Math.floor(exponential.slice(exponential.indexOf('e') + 1) / 3);\n      answer = (num / Number(`1e${AmountOfTenPowerThree * 3}`)).toFixed(decimals);\n      // answer is now \"xxx.xx\" (e.g., 123456789 would be 123.46)\n      if ((CMOptions.Scale === 1 && !forced) || forced === 1) {\n        // Metric scale, 123456789 => 123.457 M\n        if (num >= 0.01 && num < Number(`1e${metric.length * 3}`)) {\n          answer += ` ${metric[AmountOfTenPowerThree]}`;\n        } else answer = Beautify(num, 0, 4); // If number is too large or little, revert to scientific notation\n      } else if ((CMOptions.Scale === 2 && !forced) || forced === 2) {\n        // Short scale, 123456789 => 123.457 M\n        if (num >= 0.01 && num < Number(`1e${shortScale.length * 3}`)) {\n          answer += ` ${shortScale[AmountOfTenPowerThree]}`;\n        } else answer = Beautify(num, 0, 4); // If number is too large or little, revert to scientific notation\n      } else if ((CMOptions.Scale === 3 && !forced) || forced === 3) {\n        // Short scale, 123456789 => 123.457 M\n        if (num >= 0.01 && num < Number(`1e${shortScaleAbbreviated.length * 3}`)) {\n          answer += ` ${shortScaleAbbreviated[AmountOfTenPowerThree]}`;\n        } else answer = Beautify(num, 0, 4); // If number is too large or little, revert to scientific notation\n      } else if ((CMOptions.Scale === 5 && !forced) || forced === 5) {\n        // Engineering notation, 123456789 => 123.457E+6\n        answer += `E${AmountOfTenPowerThree * 3}`;\n      }\n    }\n    if (answer === '') {\n      // eslint-disable-next-line no-console\n      console.log(`Could not beautify number with Cookie Monster Beautify: ${num}`);\n      answer = BackupFunctions.Beautify(num, floats);\n    }\n    if (CMOptions.ScaleSeparator) answer = answer.replace('.', ',');\n    return answer;\n  }\n  console.log(`Could not beautify number with Cookie Monster Beautify: ${num}`); // eslint-disable-line no-console\n  return BackupFunctions.Beautify(num, floats);\n}\n","/* eslint-disable prefer-const */\n\nexport let CacheDragonAura = 0;\nexport let CacheDragonAura2 = 0;\nexport let CacheLastDragonLevel = 0;\nexport let CacheCostDragonUpgrade = 0;\nexport let CacheLucky = 0;\nexport let CacheLuckyReward = 0;\nexport let CacheLuckyWrathReward = 0;\nexport let CacheLuckyFrenzy = 0;\nexport let CacheLuckyRewardFrenzy = 0;\nexport let CacheLuckyWrathRewardFrenzy = 0;\nexport let CacheConjure = 0;\nexport let CacheConjureReward = 0;\nexport let CacheEdifice = 0;\nexport let CacheEdificeBuilding = 0;\nexport let CacheNoGoldSwitchCookiesPS = 0;\nexport let CacheDragonsFortuneMultAdjustment = 1;\nexport let CacheGoldenCookiesMult = 1;\nexport let CacheWrathCookiesMult = 1;\n\nexport let CacheHCPerSecond = 0;\n\nexport let CacheCentEgg = 0;\nexport let CacheSeaSpec = 0;\nexport let CacheLastChoEgg = 0;\n\nexport let CacheObjects1 = {};\nexport let CacheObjects10 = {};\nexport let CacheObjects100 = {};\nexport let CacheObjectsNextAchievement = {};\n\nexport let CacheWrinklersTotal = 0;\nexport let CacheWrinklersNormal = 0;\nexport let CacheWrinklersFattest = [0, null];\n\nexport let CacheCurrWrinklerCPSMult = 0;\nexport let CacheCurrWrinklerCount = 0;\n\nexport let CacheUpgrades = {};\n\nexport let CacheAverageClicks = {};\nexport let CacheAverageCookiesFromClicks;\n\nexport let CacheMissingUpgrades = {};\nexport let CacheMissingUpgradesPrestige = {};\nexport let CacheMissingUpgradesCookies = {};\n\nexport let CacheChainRequired = 0;\nexport let CacheChainRequiredNext = 0;\nexport let CacheChainMaxReward = [];\nexport let CacheChainWrathRequired = 0;\nexport let CacheChainWrathRequiredNext = 0;\nexport let CacheChainWrathMaxReward = [];\nexport let CacheChainFrenzyRequired = 0;\nexport let CacheChainFrenzyRequiredNext = 0;\nexport let CacheChainFrenzyMaxReward = [];\nexport let CacheChainFrenzyWrathRequired = 0;\nexport let CacheChainFrenzyWrathRequiredNext = 0;\nexport let CacheChainFrenzyWrathMaxReward = [];\n\nexport let CacheRealCookiesEarned = 0;\nexport let CacheAvgCPSWithChoEgg = 0;\n\nexport let CacheSpawnedGoldenShimmer = {};\nexport let CacheSeasonPopShimmer = {};\n\nexport let CacheTimeTillNextPrestige = 0;\n\n/** Stores lowest PP value */\nexport let CacheMinPP = 0;\n/** Stores lowest PP value category */\nexport let CacheMinPPBulk = 0;\n/** Stores all PP values of all buildings for all buy settings (1, 10, 100) */\nexport let CachePPArray = [];\n\nexport let CacheGoldenShimmersByID = {};\n\nexport let CacheSellForChoEgg = 0;\n\nexport let CookiesDiff;\nexport let WrinkDiff;\nexport let WrinkFattestDiff;\nexport let ChoEggDiff;\nexport let ClicksDiff;\nexport let HeavenlyChipsDiff;\n\nexport let CacheLastCPSCheck;\nexport let CacheLastCookies;\nexport let CacheLastWrinkCookies;\nexport let CacheLastWrinkFattestCookies;\nexport let CacheLastClicks;\n\nexport let CacheAverageGainBank;\nexport let CacheAverageGainWrink;\nexport let CacheAverageGainWrinkFattest;\nexport let CacheAverageGainChoEgg;\nexport let CacheAverageCPS;\n\nexport let CacheLastHeavenlyCheck;\nexport let CacheLastHeavenlyChips;\n\nexport let CacheDoRemakeBuildPrices;\n\nexport let CacheHadBuildAura;\n\n/** Store the CPS effect of each god if it was put into each slot */\nexport let CacheGods = {\n  0: [0, 0, 0],\n  1: [0, 0, 0],\n  2: [0, 0, 0],\n  3: [0, 0, 0],\n  4: [0, 0, 0],\n  5: [0, 0, 0],\n  6: [0, 0, 0],\n  7: [0, 0, 0],\n  8: [0, 0, 0],\n  9: [0, 0, 0],\n  10: [0, 0, 0],\n};\n","/** All variables used by simulation functions */\n\nexport let SimObjects = []; // eslint-disable-line prefer-const\nexport let SimUpgrades = []; // eslint-disable-line prefer-const\nexport let SimAchievements = []; // eslint-disable-line prefer-const\nexport let SimBuildingsOwned;\nexport let SimUpgradesOwned;\nexport let SimPledges;\nexport let SimAchievementsOwned;\nexport let SimHeavenlyPower;\nexport let SimPrestige;\nexport let SimDragonAura;\nexport let SimDragonAura2;\nexport let SimGod1;\nexport let SimGod2;\nexport let SimGod3;\nexport let SimDoSims;\nexport let SimEffs;\nexport let SimCookiesPs;\nexport let SimCookiesPsRaw;\n","/**\n * Section: Variables used in Disp functions */\n\nexport let DispCSS;\n\n/**\n * These are variables used to create DOM object names and id (e.g., 'CMTextTooltip)\n */\nexport const ColourTextPre = 'CMText';\nexport const ColourBackPre = 'CMBack';\nexport const ColourBorderPre = 'CMBorder';\n\n/**\n * These are variables which can be set in the options by the user to standardize colours throughout CookieMonster\n */\nexport const ColourBlue = 'Blue';\nexport const ColourGreen = 'Green';\nexport const ColourYellow = 'Yellow';\nexport const ColourOrange = 'Orange';\nexport const ColourRed = 'Red';\nexport const ColourPurple = 'Purple';\nexport const ColourGray = 'Gray';\nexport const ColourPink = 'Pink';\nexport const ColourBrown = 'Brown';\nexport const ColoursOrdering = [\n  ColourBlue,\n  ColourGreen,\n  ColourYellow,\n  ColourOrange,\n  ColourRed,\n  ColourPurple,\n  ColourPink,\n  ColourBrown,\n  ColourGray,\n];\n\n/**\n * This list is used to make some very basic tooltips.\n * It is used by CM.Main.DelayInit() in the call of CM.Disp.CreateSimpleTooltip()\n * @item\t{string}\tplaceholder\n * @item\t{string}\ttext\n * @item\t{string}\tminWidth\n */\nexport const TooltipText = [\n  ['GoldCookTooltipPlaceholder', 'Calculated with Golden Switch off', '200px'],\n  [\n    'GoldCookDragonsFortuneTooltipPlaceholder',\n    'Calculated with Golden Switch off and at least one golden cookie on-screen',\n    '240px',\n  ],\n  [\n    'PrestMaxTooltipPlaceholder',\n    'The MAX prestige is calculated with the cookies gained from popping all wrinklers with Skruuia god in Diamond slot, selling all stock market goods, selling all buildings with Earth Shatterer and Reality Bending auras, and buying Chocolate egg',\n    '320px',\n  ],\n  [\n    'NextPrestTooltipPlaceholder',\n    'Calculated with cookies gained from wrinklers and Chocolate egg',\n    '200px',\n  ],\n  [\n    'HeavenChipMaxTooltipPlaceholder',\n    'The MAX heavenly chips is calculated with the cookies gained from popping all wrinklers with Skruuia god in Diamond slot, selling all stock market goods, selling all buildings with Earth Shatterer and Reality Bending auras, and buying Chocolate egg',\n    '330px',\n  ],\n  [\n    'ResetTooltipPlaceholder',\n    'The bonus income you would get from new prestige levels unlocked at 100% of its potential and from ascension achievements if you have the same buildings/upgrades after reset',\n    '370px',\n  ],\n  [\n    'ChoEggTooltipPlaceholder',\n    'The amount of cookies you would get from popping all wrinklers with Skruuia god in Diamond slot, selling all stock market goods, selling all buildings with Earth Shatterer and Reality Bending auras, and then buying Chocolate egg',\n    '300px',\n  ],\n  ['ChainNextLevelPlaceholder', 'Cheated cookies might break this formula', '250px'],\n  [\n    'FavouriteSettingPlaceholder',\n    \"Click to set this setting as favourite and show it in 'favourite' settings at the top of the Cookie Monster Settings\",\n    '250px',\n  ],\n];\nexport const SimpleTooltipElements = {};\n\n/**\n * These are variables used by the functions that create tooltips for wrinklers\n * See CM.Disp.CheckWrinklerTooltip(), CM.Disp.UpdateWrinklerTooltip() and CM.Main.AddWrinklerAreaDetect()\n */\nexport let TooltipWrinklerArea = 0; // eslint-disable-line prefer-const\nexport let TooltipWrinkler = -1; // eslint-disable-line prefer-const\n\n/**\n * This array is used to store whether a Wrinkler tooltip is being shown or not\n * [i] = 1 means tooltip is being shown, [i] = 0 means hidden\n * It is used by CM.Disp.CheckWrinklerTooltip() and CM.Main.AddWrinklerAreaDetect()\n */\nexport let TooltipWrinklerBeingShown = []; // eslint-disable-line prefer-const\n\nexport let CMLastAscendState;\nexport let CMSayTime = function () {}; // eslint-disable-line prefer-const\n\n/**\n * These are variables used to create various displays when the game is loaded on the \"sell all\" screen\n */\nexport let LastTargetBotBar = 1; // eslint-disable-line prefer-const\nexport let LastTargetBuildings = 1; // eslint-disable-line prefer-const\nexport let LastTargetTooltipBuilding = 1; // eslint-disable-line prefer-const\n\n/**\n * These arrays are used in the stats page to show\n * average cookies per {CM.Disp.cookieTimes/CM.Disp.clickTimes} seconds\n */\nexport const CookieTimes = [10, 15, 30, 60, 300, 600, 900, 1800];\nexport const ClickTimes = [1, 5, 10, 15, 30];\n\n/**\n * This array is used to give certain timers specific colours\n */\nexport const BuffColours = {\n  Frenzy: ColourYellow,\n  'Dragon Harvest': ColourBrown,\n  'Elder frenzy': ColourGreen,\n  Clot: ColourRed,\n  'Click frenzy': ColourBlue,\n  Dragonflight: ColourPink,\n};\n\n/**\n * This array is used to track GC timers\n */\nexport let GCTimers = {}; // eslint-disable-line prefer-const\n\n/**\n * Used to store the number of cookies to be displayed in the tab-title\n */\nexport let Title = ''; // eslint-disable-line prefer-const\n\nexport let TooltipPrice;\nexport let TooltipBonusIncome;\nexport let TooltipType;\nexport let TooltipName;\nexport let TooltipBonusMouse;\n\nexport let LastAscendState;\nexport let LastNumberOfTimers;\n\n/**\n * This stores the names of settings shown in the favourites section\n */\nexport let FavouriteSettings = []; // eslint-disable-line prefer-const\n","import { SimDragonAura, SimDragonAura2 } from '../VariablesAndData';\n\n/**\n * This functions creates functions similarly to Game.auraMult but checks Sim Data instead of Game Data\n */\nexport default function SimAuraMult(what) {\n  let n = 0;\n  if (\n    Game.dragonAuras[SimDragonAura].name === what ||\n    Game.dragonAuras[SimDragonAura2].name === what\n  )\n    n = 1;\n  if (\n    Game.dragonAuras[SimDragonAura].name === 'Reality Bending' ||\n    Game.dragonAuras[SimDragonAura2].name === 'Reality Bending'\n  )\n    n += 0.1;\n  return n;\n}\n","import SimAuraMult from './SimAuraMult';\n\n/**\n * This function calculates the sell multiplier based on current \"sim data\"\n * It is called by CM.Sim.BuildingSell()\n * @returns {number}\tgiveBack\tThe multiplier\n */\nexport default function SimGetSellMultiplier() {\n  let giveBack = 0.25;\n  giveBack *= 1 + SimAuraMult('Earth Shatterer');\n  return giveBack;\n}\n","import { SimEffs } from '../VariablesAndData';\n\n/**\n * This functions creates functions similarly to Game.Eff but checks Sim Data instead of Game Data\n */\nexport default function SimEff(name, def) {\n  if (typeof SimEffs[name] === 'undefined') {\n    return typeof def === 'undefined' ? 1 : def;\n  }\n  return SimEffs[name];\n}\n","import { SimUpgrades } from '../VariablesAndData';\n\n/**\n * This functions creates functions similarly to Game.Has but checks Sim Data instead of Game Data\n */\nexport default function SimHas(what) {\n  const it = SimUpgrades[what];\n  if (Game.ascensionMode === 1 && (it.pool === 'prestige' || it.tier === 'fortune')) return 0;\n  return it ? it.bought : 0;\n}\n","import { SimGod1, SimGod2, SimGod3, SimObjects } from '../VariablesAndData';\n\n/**\n * This function checks for the current God level in the sim data\n * It functions similarly to Game.hasGod()\n * @param\t{string}\twhat\tName of the achievement\n */\nexport default function SimHasGod(what) {\n  if (Game.hasGod) {\n    if (SimObjects.Temple.minigame === undefined) {\n      SimObjects.Temple.minigame = Game.Objects.Temple.minigame;\n    }\n    const god = SimObjects.Temple.minigame.gods[what];\n    if (SimGod1 === god.id) {\n      return 1;\n    }\n    if (SimGod2 === god.id) {\n      return 2;\n    }\n    if (SimGod3 === god.id) {\n      return 3;\n    }\n  }\n  return false;\n}\n","import { SimObjects } from '../VariablesAndData';\nimport SimAuraMult from './SimAuraMult';\nimport SimEff from './SimEff';\nimport SimHas from './SimHas';\nimport SimHasGod from './SimHasGod';\n\n/**\n * This function calculates the sell price of a building based on current \"sim data\"\n * @param\t{string}\tbuilding\tName of the building\n * @param\t{number}\tprice\t\tCurrent price of building\n * @returns {number}\tModifiedPrice\t\tThe modified building price\n */\nexport default function SimModifyBuildingPrice(building, price) {\n  let ModifiedPrice = price;\n  if (SimHas('Season savings')) ModifiedPrice *= 0.99;\n  if (SimHas(\"Santa's dominion\")) ModifiedPrice *= 0.99;\n  if (SimHas('Faberge egg')) ModifiedPrice *= 0.99;\n  if (SimHas('Divine discount')) ModifiedPrice *= 0.99;\n  if (SimHas('Fortune #100')) ModifiedPrice *= 0.99;\n  // if (SimHasAura('Fierce Hoarder')) ModifiedPrice *= 0.98;\n  ModifiedPrice *= 1 - SimAuraMult('Fierce Hoarder') * 0.02;\n  if (Game.hasBuff('Everything must go')) ModifiedPrice *= 0.95;\n  if (Game.hasBuff('Crafty pixies')) ModifiedPrice *= 0.98;\n  if (Game.hasBuff('Nasty goblins')) ModifiedPrice *= 1.02;\n  if (building.fortune && SimHas(building.fortune.name)) ModifiedPrice *= 0.93;\n  ModifiedPrice *= SimEff('buildingCost');\n  if (SimObjects.Temple.minigameLoaded) {\n    const godLvl = SimHasGod('creation');\n    if (godLvl === 1) ModifiedPrice *= 0.93;\n    else if (godLvl === 2) ModifiedPrice *= 0.95;\n    else if (godLvl === 3) ModifiedPrice *= 0.98;\n  }\n  return ModifiedPrice;\n}\n","import SimGetSellMultiplier from '../ReplacedGameFunctions/SimGetSellMultiplier';\nimport SimModifyBuildingPrice from '../ReplacedGameFunctions/SimModifyBuidlingPrice';\n\n/**\n * This function calculates the cookies returned for selling a building\n * Base Game does not do this correctly\n * @param\t{string}\tbuild\t\tName of the building\n * @param\t{number}\tbasePrice\tBase Price of building\n * @param\t{number}\tstart\t\tStarting amount of building\n * @param\t{number}\tfree\t\tFree amount of building\n * @param\t{number}\tincrease\tIncrease of building\n * @param\t{number}\tnoSim\t\t1 of 0 depending on if function is called from CM.Sim\n * @returns {number}\tmoni\t\tTotal price gained\n */\nexport default function BuildingSell(build, basePrice, start, free, amount, noSim) {\n  // Calculate money gains from selling buildings\n  // If noSim is set, use Game methods to compute price instead of Sim ones.\n  const noSimRes = typeof noSim === 'undefined' ? 0 : noSim;\n  let toChange = amount;\n  let startingAmount = start;\n  let moni = 0;\n  if (amount === -1) toChange = startingAmount;\n  if (!amount) toChange = Game.buyBulk;\n  for (let i = 0; i < toChange; i++) {\n    let price = basePrice * Game.priceIncrease ** Math.max(0, startingAmount - free);\n    price = noSimRes\n      ? Game.modifyBuildingPrice(build, price)\n      : SimModifyBuildingPrice(build, price);\n    price = Math.ceil(price);\n    const giveBack = noSimRes ? build.getSellMultiplier() : SimGetSellMultiplier();\n    price = Math.floor(price * giveBack);\n    if (startingAmount > 0) {\n      moni += price;\n      startingAmount -= 1;\n    }\n  }\n  return moni;\n}\n","import {\n  CacheMinPPBulk,\n  CacheObjects1,\n  CacheObjects10,\n  CacheObjects100,\n  CacheObjectsNextAchievement,\n} from '../../Cache/VariablesAndData';\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport BuildingSell from '../../Sim/SimulationEvents/SellBuilding';\nimport Beautify from '../BeautifyAndFormatting/Beautify';\nimport { ColoursOrdering, LastTargetBuildings } from '../VariablesAndData';\n\n/**\n * Section: Functions related to right column of the screen (buildings/upgrades)\n\n/**\n * This function adjusts some things in the column of buildings.\n * It colours them, helps display the correct sell-price and shuffles the order when CM.Options.SortBuildings is set\n * The function is called by CM.Disp.Draw(), CM.Disp.UpdateColours() & CM.Disp.RefreshScale()\n * And by changes in CM.Options.BuildColour, CM.Options.SortBuild & CM.Data.Config.BulkBuildColour\n */\nexport default function UpdateBuildings() {\n  let target = Game.buyBulk;\n  if (Game.buyMode === 1) {\n    LastTargetBuildings = target;\n  } else {\n    target = LastTargetBuildings;\n  }\n  if (target === 1) target = CacheObjects1;\n  else if (target === 10) target = CacheObjects10;\n  else if (target === 100) target = CacheObjects100;\n\n  // Remove colour if applied\n  l(`storeBulk1`).style.removeProperty('color');\n  l(`storeBulk10`).style.removeProperty('color');\n  l(`storeBulk100`).style.removeProperty('color');\n\n  if (Game.buyMode === 1) {\n    if (CMOptions.BuildColour === 1) {\n      Object.keys(target).forEach((i) => {\n        l(`productPrice${Game.Objects[i].id}`).style.color = CMOptions[`Colour${target[i].color}`];\n      });\n      l(`storeBulk${CacheMinPPBulk}`).style.color = CMOptions.ColourGreen;\n    } else {\n      Object.keys(Game.Objects).forEach((i) => {\n        l(`productPrice${Game.Objects[i].id}`).style.removeProperty('color');\n      });\n    }\n  } else if (Game.buyMode === -1) {\n    Object.keys(CacheObjects1).forEach((i) => {\n      const o = Game.Objects[i];\n      l(`productPrice${o.id}`).style.color = '';\n      /*\n       * Fix sell price displayed in the object in the store.\n       *\n       * The buildings sell price displayed by the game itself (without any mod) is incorrect.\n       * The following line of code fixes this issue, and can be safely removed when the game gets fixed.\n       *\n       * This issue is extensively detailed here: https://github.com/Aktanusa/CookieMonster/issues/359#issuecomment-735658262\n       */\n      l(`productPrice${o.id}`).innerHTML = Beautify(\n        BuildingSell(o, o.basePrice, o.amount, o.free, Game.buyBulk, 1),\n      );\n    });\n  }\n\n  // Build array of pointers and sort according to the user's configured sort option.\n  // This regulates sorting of buildings.\n  let arr;\n  if (Game.buyMode !== 1 || !CMOptions.SortBuildings) {\n    arr = Object.keys(CacheObjects1).map(k => {\n      const o = {};\n      o.name = k;\n      o.id = Game.Objects[k].id;\n      return o;\n    });\n    // Sort using default order.\n    arr.sort((a, b) => a.id - b.id);\n  } else if (CMOptions.SortBuildings === 1) {\n    arr = Object.keys(CacheObjects1).map(k => {\n      const o = {};\n      o.name = k;\n      o.pp = CacheObjects1[k].pp;\n      o.color = CacheObjects1[k].color;\n      return o;\n    });\n    // Sort by pp colour group, then by pp.\n    arr.sort((a, b) =>\n      ColoursOrdering.indexOf(a.color) === ColoursOrdering.indexOf(b.color)\n        ? a.pp - b.pp\n        : ColoursOrdering.indexOf(a.color) - ColoursOrdering.indexOf(b.color)\n    );\n  } else if (CMOptions.SortBuildings === 2) {\n    arr = Object.keys(target).map(k => {\n      const o = {};\n      o.name = k;\n      o.pp = target[k].pp;\n      o.color = target[k].color;\n      return o;\n    });\n    // Sort by pp colour group, then by pp.\n    arr.sort((a, b) =>\n      ColoursOrdering.indexOf(a.color) === ColoursOrdering.indexOf(b.color)\n        ? a.pp - b.pp\n        : ColoursOrdering.indexOf(a.color) - ColoursOrdering.indexOf(b.color)\n    );\n  } else if (CMOptions.SortBuildings === 3) {\n    arr = Object.keys(CacheObjectsNextAchievement).map(k => {\n      const o = {};\n      o.name = k;\n      o.id = Game.Objects[k].id;\n      o.amountUntilNext = CacheObjectsNextAchievement[k].AmountNeeded;\n      o.priceUntilNext = CacheObjectsNextAchievement[k].price;\n      return o;\n    });\n    // First, sort using default order.\n    arr.sort((a, b) => a.id - b.id);\n    // Sort by price until next achievement.\n    // Buildings that aren't within 100 of an achievement are placed at the end, still in\n    // default order relative to each other because sort() is guaranteed stable.\n    arr.sort((a, b) =>\n      (a.amountUntilNext !== 101 ? a.priceUntilNext : Infinity) -\n      (b.amountUntilNext !== 101 ? b.priceUntilNext : Infinity)\n    );\n  }\n\n  // Use array index (+2) as the grid row number.\n  // (grid rows are 1-based indexing, and row 1 is the bulk buy/sell options)\n  for (let x = 0; x < arr.length; x++) {\n    Game.Objects[arr[x].name].l.style.gridRow = `${x + 2}/${x + 2}`;\n  }\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\n\n/**\n * This function toggles the upgrade to be always expanded\n * It is called by a change in CM.Options.ToolWarnPos\n * and upon creation of the warning tooltip by CM.Disp.UpdateTooltipWarnings()\n */\nexport default function UpdateUpgradeSectionsHeight() {\n  Object.values(document.getElementsByClassName('storeSection')).forEach((section) => {\n    if (CMOptions.UpgradesNeverCollapse || section.id === 'products') {\n      section.style.height = 'auto'; // eslint-disable-line no-param-reassign\n    } else if (section.id === 'vaultUpgrades') {\n      section.style.height = ''; // eslint-disable-line no-param-reassign\n      section.style.minHeight = '0px'; // eslint-disable-line no-param-reassign\n    } else if (section.id === 'upgrades') {\n      section.style.height = ''; // eslint-disable-line no-param-reassign\n      if (section.className.includes('hasMenu')) {\n        section.style.minHeight = '82px'; // eslint-disable-line no-param-reassign\n      } else {\n        section.style.minHeight = '60px'; // eslint-disable-line no-param-reassign\n      }\n    } else {\n      section.style.height = ''; // eslint-disable-line no-param-reassign\n      section.style.minHeight = '60px'; // eslint-disable-line no-param-reassign\n    }\n  });\n}\n","import { CacheUpgrades } from '../../Cache/VariablesAndData';\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport {\n  ColourBackPre,\n  ColourBlue,\n  ColourGray,\n  ColourGreen,\n  ColourOrange,\n  ColourPurple,\n  ColourRed,\n  ColoursOrdering,\n  ColourYellow,\n} from '../VariablesAndData';\n\n/**\n * This function adjusts some things in the upgrades section\n * It colours them and shuffles the order when CM.Options.SortBuildings is set\n * The function is called by CM.Disp.Draw(), CM.Disp.ToggleUpgradeBarAndColour & CM.Disp.RefreshScale()\n * And by changes in CM.Options.SortUpgrades\n */\nexport default function UpdateUpgrades() {\n  // This counts the amount of upgrades for each pp group and updates the Upgrade Bar\n  if (CMOptions.UpBarColour > 0) {\n    let blue = 0;\n    let green = 0;\n    let yellow = 0;\n    let orange = 0;\n    let red = 0;\n    let purple = 0;\n    let gray = 0;\n\n    Object.keys(Game.UpgradesInStore).forEach((i) => {\n      const me = Game.UpgradesInStore[i];\n      let addedColour = false;\n      for (let j = 0; j < l(`upgrade${i}`).childNodes.length; j += 1) {\n        if (l(`upgrade${i}`).childNodes[j].className.indexOf(ColourBackPre) !== -1) {\n          l(`upgrade${i}`).childNodes[j].className = ColourBackPre + CacheUpgrades[me.name].color;\n          addedColour = true;\n          break;\n        }\n      }\n      if (!addedColour) {\n        const div = document.createElement('div');\n        div.style.width = '10px';\n        div.style.height = '10px';\n        div.className = ColourBackPre + CacheUpgrades[me.name].color;\n        l(`upgrade${i}`).appendChild(div);\n      }\n      if (CacheUpgrades[me.name].color === ColourBlue) blue += 1;\n      else if (CacheUpgrades[me.name].color === ColourGreen) green += 1;\n      else if (CacheUpgrades[me.name].color === ColourYellow) yellow += 1;\n      else if (CacheUpgrades[me.name].color === ColourOrange) orange += 1;\n      else if (CacheUpgrades[me.name].color === ColourRed) red += 1;\n      else if (CacheUpgrades[me.name].color === ColourPurple) purple += 1;\n      else if (CacheUpgrades[me.name].color === ColourGray) gray += 1;\n    });\n\n    l('CMUpgradeBarBlue').textContent = blue;\n    l('CMUpgradeBarGreen').textContent = green;\n    l('CMUpgradeBarYellow').textContent = yellow;\n    l('CMUpgradeBarOrange').textContent = orange;\n    l('CMUpgradeBarRed').textContent = red;\n    l('CMUpgradeBarPurple').textContent = purple;\n    l('CMUpgradeBarGray').textContent = gray;\n  }\n\n  const arr = [];\n  // Build array of pointers, sort by pp, set flex positions\n  // This regulates sorting of upgrades\n  for (let x = 0; x < Game.UpgradesInStore.length; x += 1) {\n    const o = {};\n    o.name = Game.UpgradesInStore[x].name;\n    o.price = Game.UpgradesInStore[x].basePrice;\n    o.pp = CacheUpgrades[o.name].pp;\n    o.color = CacheUpgrades[o.name].color;\n    arr.push(o);\n  }\n\n  if (CMOptions.SortUpgrades) {\n    // Sort by pp colour group, then by pp.\n    arr.sort((a, b) =>\n      ColoursOrdering.indexOf(a.color) === ColoursOrdering.indexOf(b.color)\n        ? a.pp - b.pp\n        : ColoursOrdering.indexOf(a.color) - ColoursOrdering.indexOf(b.color)\n    );\n  } else {\n    arr.sort((a, b) => a.price - b.price);\n  }\n\n  const nameChecker = function (arr2, upgrade) {\n    return arr2.findIndex((e) => e.name === upgrade.name);\n  };\n  for (let x = 0; x < Game.UpgradesInStore.length; x += 1) {\n    l(`upgrade${x}`).style.order = nameChecker(arr, Game.UpgradesInStore[x]) + 1;\n  }\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\n\n/**\n * This function returns time as a string depending on TimeFormat setting\n * @param  \t{number} \ttime\t\tTime to be formatted\n * @param  \t{number}\tlongFormat \t1 or 0\n * @returns\t{string}\t\t\t\tFormatted time\n */\nexport default function FormatTime(time, longFormat) {\n  let formattedTime = time;\n  if (time === Infinity) return time;\n  if (time < 0) return 'Negative time period';\n  formattedTime = Math.ceil(time);\n  const y = Math.floor(formattedTime / 31536000);\n  const d = Math.floor((formattedTime % 31536000) / 86400);\n  const h = Math.floor(((formattedTime % 31536000) % 86400) / 3600);\n  const m = Math.floor((((formattedTime % 31536000) % 86400) % 3600) / 60);\n  const s = Math.floor((((formattedTime % 31536000) % 86400) % 3600) % 60);\n  let str = '';\n  if (CMOptions.TimeFormat) {\n    if (formattedTime > 3155760000) return 'XX:XX:XX:XX:XX';\n    str += `${(y < 10 ? '0' : '') + y}:`;\n    str += `${(d < 10 ? '0' : '') + d}:`;\n    str += `${(h < 10 ? '0' : '') + h}:`;\n    str += `${(m < 10 ? '0' : '') + m}:`;\n    str += (s < 10 ? '0' : '') + s;\n  } else {\n    if (formattedTime > 777600000) return longFormat ? 'Over 9000 days!' : '>9000d';\n    str +=\n      y > 0\n        ? `${y + (longFormat ? (y === 1 ? ' year' : ' years') : 'y')}, ` // eslint-disable-line no-nested-ternary\n        : '';\n    if (str.length > 0 || d > 0)\n      str += `${d + (longFormat ? (d === 1 ? ' day' : ' days') : 'd')}, `; // eslint-disable-line no-nested-ternary\n    if (str.length > 0 || h > 0)\n      str += `${h + (longFormat ? (h === 1 ? ' hour' : ' hours') : 'h')}, `; // eslint-disable-line no-nested-ternary\n    if (str.length > 0 || m > 0)\n      str += `${m + (longFormat ? (m === 1 ? ' minute' : ' minutes') : 'm')}, `; // eslint-disable-line no-nested-ternary\n    str += s + (longFormat ? (s === 1 ? ' second' : ' seconds') : 's'); // eslint-disable-line no-nested-ternary\n  }\n  return str;\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport { ColourGreen, ColourOrange, ColourRed, ColourYellow } from '../VariablesAndData';\nimport FormatTime from './FormatTime';\n\n/**\n * This function returns the color to be used for time-strings\n * @param\t{number}\t\t\ttime\t\t\tTime to be coloured\n * @returns {{string, string}}\t{text, color}\tBoth the formatted time and color as strings in an array\n */\nexport default function GetTimeColour(time) {\n  let color;\n  let text;\n  if (time <= 0) {\n    if (CMOptions.TimeFormat) text = '00:00:00:00:00';\n    else text = 'Done!';\n    color = ColourGreen;\n  } else {\n    text = FormatTime(time);\n    if (time > 300) color = ColourRed;\n    else if (time > 60) color = ColourOrange;\n    else color = ColourYellow;\n  }\n  return { text, color };\n}\n","import {\n  CacheAverageCPS,\n  CacheCurrWrinklerCount,\n  CacheCurrWrinklerCPSMult,\n  CacheWrinklersFattest,\n} from '../../Cache/VariablesAndData';\nimport { CMOptions } from '../../Config/VariablesAndData';\n\n/**\n * This function returns the cps as either current or average CPS depending on CM.Options.CPSMode\n * @returns\t{number}\tThe average or current cps\n */\nexport default function GetCPS() {\n  if (CMOptions.CPSMode) {\n    return CacheAverageCPS;\n  }\n  if (CMOptions.CalcWrink === 0) {\n    return Game.cookiesPs * (1 - Game.cpsSucked);\n  }\n  if (CMOptions.CalcWrink === 1) {\n    return Game.cookiesPs * (CacheCurrWrinklerCPSMult + (1 - CacheCurrWrinklerCount * 0.05));\n  }\n  if (CacheWrinklersFattest[1] !== null)\n    if (CMOptions.CalcWrink === 2 && Game.wrinklers[CacheWrinklersFattest[1]].type === 1) {\n      return (\n        Game.cookiesPs *\n        ((CacheCurrWrinklerCPSMult * 3) / CacheCurrWrinklerCount +\n          (1 - CacheCurrWrinklerCount * 0.05))\n      );\n    }\n  return (\n    Game.cookiesPs *\n    (CacheCurrWrinklerCPSMult / CacheCurrWrinklerCount + (1 - CacheCurrWrinklerCount * 0.05))\n  );\n}\n","import { CacheWrinklersFattest, CacheWrinklersTotal } from '../../Cache/VariablesAndData';\nimport { CMOptions } from '../../Config/VariablesAndData';\n\n/**\n * This function returns the total amount stored in the Wrinkler Bank\n * as calculated by  CM.Cache.CacheWrinklers() if CM.Options.CalcWrink is set\n * @returns\t{number}\t0 or the amount of cookies stored (CM.Cache.WrinklersTotal)\n */\nexport default function GetWrinkConfigBank() {\n  if (CMOptions.CalcWrink === 1) {\n    return CacheWrinklersTotal;\n  }\n  if (CMOptions.CalcWrink === 2) {\n    return CacheWrinklersFattest[0];\n  }\n  return 0;\n}\n","/** Functions to create various DOM elements used by the Bars */\n\nimport { ColourBackPre, ColourBlue, ColourTextPre } from '../VariablesAndData';\n\n/**\n * This function creates an indivudual timer for the timer bar\n * @param\t{string}\t\t\t\t\tid\t\t\t\t\tAn id to identify the timer\n * @param\t{string}\t\t\t\t\tname\t\t\t\tThe title of the timer\n * @param\t[{{string}, {string}}, ...]\tbars ([id, color])\tThe id and colours of individual parts of the timer\n */\nexport function CreateTimer(id, name, bars) {\n  const timerBar = document.createElement('div');\n  timerBar.id = id;\n  timerBar.style.height = '12px';\n  timerBar.style.margin = '0px 10px';\n  timerBar.style.position = 'relative';\n\n  const div = document.createElement('div');\n  div.style.width = '100%';\n  div.style.height = '10px';\n  div.style.margin = 'auto';\n  div.style.position = 'absolute';\n  div.style.left = '0px';\n  div.style.top = '0px';\n  div.style.right = '0px';\n  div.style.bottom = '0px';\n\n  const type = document.createElement('span');\n  type.style.display = 'inline-block';\n  type.style.textAlign = 'right';\n  type.style.fontSize = '10px';\n  type.style.width = '108px';\n  type.style.marginRight = '5px';\n  type.style.verticalAlign = 'text-top';\n  type.textContent = name;\n  div.appendChild(type);\n\n  for (let i = 0; i < bars.length; i++) {\n    const colorBar = document.createElement('span');\n    colorBar.id = bars[i].id;\n    colorBar.style.display = 'inline-block';\n    colorBar.style.height = '10px';\n    colorBar.style.verticalAlign = 'text-top';\n    colorBar.style.textAlign = 'center';\n    if (bars.length - 1 === i) {\n      colorBar.style.borderTopRightRadius = '10px';\n      colorBar.style.borderBottomRightRadius = '10px';\n    }\n    if (typeof bars[i].color !== 'undefined') {\n      colorBar.className = ColourBackPre + bars[i].color;\n    }\n    div.appendChild(colorBar);\n  }\n\n  const timer = document.createElement('span');\n  timer.id = `${id}Time`;\n  timer.style.marginLeft = '5px';\n  timer.style.verticalAlign = 'text-top';\n  div.appendChild(timer);\n\n  timerBar.appendChild(div);\n\n  return timerBar;\n}\n\n/**\n * This function extends the bottom bar (created by CM.Disp.CreateBotBar) with a column for the given building.\n * @param\t{string}\tbuildingName\tObjectname to be added (e.g., \"Cursor\")\n */\nexport function CreateBotBarBuildingColumn(buildingName) {\n  if (l('CMBotBar') !== null) {\n    const type = l('CMBotBar').firstChild.firstChild.childNodes[0];\n    const bonus = l('CMBotBar').firstChild.firstChild.childNodes[1];\n    const pp = l('CMBotBar').firstChild.firstChild.childNodes[2];\n    const time = l('CMBotBar').firstChild.firstChild.childNodes[3];\n\n    const i = buildingName;\n    const header = type.appendChild(document.createElement('td'));\n    header.appendChild(\n      document.createTextNode(`${i.indexOf(' ') !== -1 ? i.substring(0, i.indexOf(' ')) : i} (`),\n    );\n\n    const span = header.appendChild(document.createElement('span'));\n    span.className = ColourTextPre + ColourBlue;\n\n    header.appendChild(document.createTextNode(')'));\n    type.lastChild.style.paddingLeft = '8px';\n    bonus.appendChild(document.createElement('td'));\n    bonus.lastChild.style.paddingLeft = '8px';\n    pp.appendChild(document.createElement('td'));\n    pp.lastChild.style.paddingLeft = '8px';\n    time.appendChild(document.createElement('td'));\n    time.lastChild.style.paddingLeft = '2px';\n  }\n}\n","/** Functions related to the Bottom Bar */\n\nimport { CacheObjects1, CacheObjects10, CacheObjects100 } from '../../Cache/VariablesAndData';\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport { VersionMajor, VersionMinor } from '../../Data/Moddata.ts';\nimport Beautify from '../BeautifyAndFormatting/Beautify';\nimport FormatTime from '../BeautifyAndFormatting/FormatTime';\nimport GetTimeColour from '../BeautifyAndFormatting/GetTimeColour';\n\nimport GetCPS from '../HelperFunctions/GetCPS';\nimport GetWrinkConfigBank from '../HelperFunctions/GetWrinkConfigBank';\nimport { ColourBlue, ColourTextPre, ColourYellow, LastTargetBotBar } from '../VariablesAndData';\nimport { CreateBotBarBuildingColumn } from './CreateDOMElements';\n\n/**\n * This function creates the bottom bar and appends it to l('wrapper')\n */\nexport function CreateBotBar() {\n  const BotBar = document.createElement('div');\n  BotBar.id = 'CMBotBar';\n  BotBar.style.height = '69px';\n  BotBar.style.width = '100%';\n  BotBar.style.position = 'absolute';\n  BotBar.style.display = 'none';\n  BotBar.style.backgroundColor = '#262224';\n  BotBar.style.backgroundImage = 'linear-gradient(to bottom, #4d4548, #000000)';\n  BotBar.style.borderTop = '1px solid black';\n  BotBar.style.overflow = 'auto';\n  BotBar.style.textShadow = '-1px 0 black, 0 1px black, 1px 0 black, 0 -1px black';\n\n  const table = BotBar.appendChild(document.createElement('table'));\n  table.style.width = '100%';\n  table.style.textAlign = 'center';\n  table.style.whiteSpace = 'nowrap';\n  const tbody = table.appendChild(document.createElement('tbody'));\n\n  const firstCol = function (text, color) {\n    const td = document.createElement('td');\n    td.style.textAlign = 'right';\n    td.className = ColourTextPre + color;\n    td.textContent = text;\n    return td;\n  };\n  const type = tbody.appendChild(document.createElement('tr'));\n  type.style.fontWeight = 'bold';\n  type.appendChild(firstCol(`CM ${VersionMajor}.${VersionMinor}`, ColourYellow));\n  const bonus = tbody.appendChild(document.createElement('tr'));\n  bonus.appendChild(firstCol('Bonus Income', ColourBlue));\n  const pp = tbody.appendChild(document.createElement('tr'));\n  pp.appendChild(firstCol('Payback Period', ColourBlue));\n  const time = tbody.appendChild(document.createElement('tr'));\n  time.appendChild(firstCol('Time Left', ColourBlue));\n\n  l('wrapper').appendChild(BotBar);\n\n  Object.keys(Game.Objects).forEach((i) => {\n    CreateBotBarBuildingColumn(i);\n  });\n}\n\n/**\n * This function updates the bonus-, pp-, and time-rows in the the bottom bar\n */\nexport function UpdateBotBar() {\n  if (CMOptions.BotBar === 1 && CacheObjects1 && Game.buyMode === 1) {\n    let count = 0;\n    Object.keys(CacheObjects1).forEach((i) => {\n      let target = Game.buyBulk;\n      if (Game.buyMode === 1) {\n        LastTargetBotBar = target;\n      } else {\n        target = LastTargetBotBar;\n      }\n      if (target === 1) target = CacheObjects1;\n      if (target === 10) target = CacheObjects10;\n      if (target === 100) target = CacheObjects100;\n      count += 1;\n      l('CMBotBar').firstChild.firstChild.childNodes[0].childNodes[\n        count\n      ].childNodes[1].textContent = Game.Objects[i].amount;\n      l('CMBotBar').firstChild.firstChild.childNodes[1].childNodes[count].textContent = Beautify(\n        target[i].bonus,\n        2,\n      );\n      l('CMBotBar').firstChild.firstChild.childNodes[2].childNodes[count].className =\n        ColourTextPre + target[i].color;\n      let PPString;\n      if (CMOptions.PPDisplayTime) PPString = FormatTime(Math.round(target[i].pp));\n      else PPString = Beautify(Math.round(target[i].pp), 2);\n      l('CMBotBar').firstChild.firstChild.childNodes[2].childNodes[count].textContent = PPString;\n      const timeColour = GetTimeColour(\n        (Game.Objects[i].bulkPrice - (Game.cookies + GetWrinkConfigBank())) / GetCPS(),\n      );\n      l('CMBotBar').firstChild.firstChild.childNodes[3].childNodes[count].className =\n        ColourTextPre + timeColour.color;\n      if (timeColour.text === 'Done!' && Game.cookies < Game.Objects[i].bulkPrice) {\n        l('CMBotBar').firstChild.firstChild.childNodes[3].childNodes[\n          count\n        ].textContent = `${timeColour.text} (with Wrink)`;\n      } else\n        l('CMBotBar').firstChild.firstChild.childNodes[3].childNodes[count].textContent =\n          timeColour.text;\n    });\n  }\n}\n","/**\n * This function sets the size of the background of the full game and the left column\n * depending on whether certain abrs are activated\n * It is called by CM.Disp.UpdateAscendState() and CM.Disp.UpdateBotTimerBarPosition()\n */\nexport default function UpdateBackground() {\n  Game.Background.canvas.width = Game.Background.canvas.parentNode.offsetWidth;\n  Game.Background.canvas.height = Game.Background.canvas.parentNode.offsetHeight;\n  Game.LeftBackground.canvas.width = Game.LeftBackground.canvas.parentNode.offsetWidth;\n  Game.LeftBackground.canvas.height = Game.LeftBackground.canvas.parentNode.offsetHeight;\n  Game.DrawBackground();\n}\n","/** Called by the \"func\" of individual settings */\n\nimport UpdateBackground from '../Disp/HelperFunctions/UpdateBackground';\nimport { CMOptions } from './VariablesAndData';\n\n/**\n * This function changes the position of both the bottom and timer bar\n */\nexport function UpdateBotTimerBarPosition() {\n  if (CMOptions.BotBar === 1 && CMOptions.TimerBar === 1 && CMOptions.TimerBarPos === 1) {\n    l('CMBotBar').style.bottom = l('CMTimerBar').style.height;\n    l('game').style.bottom = `${Number(l('CMTimerBar').style.height.replace('px', '')) + 70}px`;\n  } else if (CMOptions.BotBar === 1) {\n    l('CMBotBar').style.bottom = '0px';\n    l('game').style.bottom = '70px';\n  } else if (CMOptions.TimerBar === 1 && CMOptions.TimerBarPos === 1) {\n    l('game').style.bottom = l('CMTimerBar').style.height;\n  } else {\n    // No bars\n    l('game').style.bottom = '0px';\n  }\n\n  if (CMOptions.TimerBar === 1 && CMOptions.TimerBarPos === 0) {\n    l('sectionLeft').style.top = l('CMTimerBar').style.height;\n  } else {\n    l('sectionLeft').style.top = '';\n  }\n\n  UpdateBackground();\n}\n\n/**\n * This function changes the visibility of the timer bar\n */\nexport function ToggleTimerBar() {\n  if (CMOptions.TimerBar === 1) l('CMTimerBar').style.display = '';\n  else l('CMTimerBar').style.display = 'none';\n  UpdateBotTimerBarPosition();\n}\n\n/**\n * This function changes the position of the timer bar\n */\nexport function ToggleTimerBarPos() {\n  if (CMOptions.TimerBarPos === 0) {\n    l('CMTimerBar').style.width = '30%';\n    l('CMTimerBar').style.bottom = '';\n    l('game').insertBefore(l('CMTimerBar'), l('sectionLeft'));\n  } else {\n    l('CMTimerBar').style.width = '100%';\n    l('CMTimerBar').style.bottom = '0px';\n    l('wrapper').appendChild(l('CMTimerBar'));\n  }\n  UpdateBotTimerBarPosition();\n}\n","import { CacheDragonAura, CacheDragonAura2 } from '../VariablesAndData'; // eslint-disable-line no-unused-vars\n\n/**\n * This functions caches the currently selected Dragon Auras\n */\nexport default function CacheDragonAuras() {\n  CacheDragonAura = Game.dragonAura;\n  CacheDragonAura2 = Game.dragonAura2;\n}\n","/**\n * This function constructs an object with the static properties of an achievement\n * @param\t{string}\tachievementName\tName of the Achievement\n * @returns {Object}\tyou\t\t\t\tThe static object\n */\nexport default function InitAchievement(achievementName) {\n  const me = Game.Achievements[achievementName];\n  const you = {};\n  you.name = me.name;\n  return you;\n}\n","import { SimObjects } from '../VariablesAndData';\nimport SimHas from './SimHas';\n\n/**\n * This functions creates functions similarly to Game.GetTieredCpsMult but checks Sim Data instead of Game Data\n */\nexport default function SimGetTieredCpsMult(me) {\n  let mult = 1;\n  Object.keys(me.tieredUpgrades).forEach((i) => {\n    if (!Game.Tiers[me.tieredUpgrades[i].tier].special && SimHas(me.tieredUpgrades[i].name))\n      mult *= 2;\n  });\n  Object.keys(me.synergies).forEach((i) => {\n    if (SimHas(me.synergies[i].name)) {\n      const syn = me.synergies[i];\n      if (syn.buildingTie1.name === me.name) mult *= 1 + 0.05 * syn.buildingTie2.amount;\n      else if (syn.buildingTie2.name === me.name) mult *= 1 + 0.001 * syn.buildingTie1.amount;\n    }\n  });\n  if (me.fortune && SimHas(me.fortune.name)) mult *= 1.07;\n  if (me.grandma && SimHas(me.grandma.name))\n    mult *= 1 + SimObjects.Grandma.amount * 0.01 * (1 / (me.id - 1));\n  if (typeof me.tieredUpgrades.misfortune === 'object') {\n    if (me.vanilla === 1 && SimHas(me.tieredUpgrades.misfortune.name)) {\n      switch (Game.elderWrath) {\n        default:\n          mult *= 1;\n          break;\n        case 1:\n          mult *= 1.02;\n          break;\n        case 2:\n          mult *= 1.04;\n          break;\n        case 3:\n          mult *= 1.06;\n          break;\n      }\n    }\n  }\n  return mult;\n}\n","import SimAuraMult from '../ReplacedGameFunctions/SimAuraMult';\nimport SimEff from '../ReplacedGameFunctions/SimEff';\nimport SimGetTieredCpsMult from '../ReplacedGameFunctions/SimGetTieredCpsMult';\nimport SimHas from '../ReplacedGameFunctions/SimHas';\nimport { SimObjects } from '../VariablesAndData';\n\n/**\n * This function constructs an object with the static properties of a building,\n * but with a 'cps' method changed to check sim data\n *\n * @param\t{string}\tbuildingName\tName of the building\n * @returns {Object}\tyou\t\t\t\tThe static object\n */\nexport default function InitialBuildingData(buildingName) {\n  const me = Game.Objects[buildingName];\n  const you = {};\n  if (me.name === 'Cursor') {\n    you.cps = function (it) {\n      let add = 0;\n      if (SimHas('Thousand fingers')) add += 0.1;\n      if (SimHas('Million fingers')) add *= 5;\n      if (SimHas('Billion fingers')) add *= 10;\n      if (SimHas('Trillion fingers')) add *= 20;\n      if (SimHas('Quadrillion fingers')) add *= 20;\n      if (SimHas('Quintillion fingers')) add *= 20;\n      if (SimHas('Sextillion fingers')) add *= 20;\n      if (SimHas('Septillion fingers')) add *= 20;\n      if (SimHas('Octillion fingers')) add *= 20;\n      if (SimHas('Nonillion fingers')) add *= 20;\n      let mult = 1;\n      let num = 0;\n      Object.keys(SimObjects).forEach((i) => {\n        if (SimObjects[i].name !== 'Cursor') num += SimObjects[i].amount;\n      });\n      add *= num;\n      mult *= SimGetTieredCpsMult(it);\n      mult *= Game.magicCpS('Cursor');\n      mult *= SimEff('cursorCps');\n      return (\n        Game.ComputeCps(\n          0.1,\n          SimHas('Reinforced index finger') +\n            SimHas('Carpal tunnel prevention cream') +\n            SimHas('Ambidextrous'),\n          add,\n        ) * mult\n      );\n    };\n  } else if (me.name === 'Grandma') {\n    you.cps = function (it) {\n      let mult = 1;\n      Object.keys(Game.GrandmaSynergies).forEach((i) => {\n        if (SimHas(Game.GrandmaSynergies[i])) mult *= 2;\n      });\n      if (SimHas('Bingo center/Research facility')) mult *= 4;\n      if (SimHas('Ritual rolling pins')) mult *= 2;\n      if (SimHas('Naughty list')) mult *= 2;\n\n      if (SimHas('Elderwort biscuits')) mult *= 1.02;\n\n      mult *= SimEff('grandmaCps');\n\n      if (SimHas('Cat ladies')) {\n        for (let i = 0; i < Game.UpgradesByPool.kitten.length; i++) {\n          if (SimHas(Game.UpgradesByPool.kitten[i].name)) mult *= 1.29;\n        }\n      }\n\n      mult *= SimGetTieredCpsMult(it);\n\n      let add = 0;\n      if (SimHas('One mind')) add += SimObjects.Grandma.amount * 0.02;\n      if (SimHas('Communal brainsweep')) add += SimObjects.Grandma.amount * 0.02;\n      if (SimHas('Elder Pact')) add += SimObjects.Portal.amount * 0.05;\n\n      let num = 0;\n      Object.keys(SimObjects).forEach((i) => {\n        if (SimObjects[i].name !== 'Grandma') num += SimObjects[i].amount;\n      });\n      // if (Game.hasAura('Elder Battalion')) mult*=1+0.01*num;\n      mult *= 1 + SimAuraMult('Elder Battalion') * 0.01 * num;\n\n      mult *= Game.magicCpS(me.name);\n\n      return (me.baseCps + add) * mult;\n    };\n  } else {\n    you.cps = function (it) {\n      let mult = 1;\n      mult *= SimGetTieredCpsMult(it);\n      mult *= Game.magicCpS(it.name);\n      return it.baseCPS * mult;\n    };\n  }\n\n  // Below is needed for above eval, specifically for the GetTieredCpsMult function\n  you.baseCps = me.baseCps;\n  you.name = me.name;\n  you.tieredUpgrades = me.tieredUpgrades;\n  you.synergies = me.synergies;\n  you.fortune = me.fortune;\n  you.grandma = me.grandma;\n  you.baseCPS = me.baseCps;\n  you.id = me.id;\n  you.vanilla = me.vanilla;\n  return you;\n}\n","import SimHas from '../ReplacedGameFunctions/SimHas';\nimport SimHasGod from '../ReplacedGameFunctions/SimHasGod';\nimport { SimObjects } from '../VariablesAndData';\n\n/**\n * This function constructs an object with the static properties of an upgrade\n * @param\t{string}\tupgradeName\t\tName of the Upgrade\n * @returns {Object}\tyou\t\t\t\tThe static object\n */\nexport default function InitUpgrade(upgradeName) {\n  const me = Game.Upgrades[upgradeName];\n  const you = {};\n  // Some upgrades have a function for .power (notably the valentine cookies)\n  you.power = me.power;\n  if (typeof you.power === 'function') {\n    if (me.name === 'Sugar crystal cookies') {\n      you.power = function () {\n        let n = 5;\n        Object.keys(SimObjects).forEach((i) => {\n          if (SimObjects[i].level >= 10) n += 1;\n        });\n        return n;\n      };\n    } else {\n      you.power = function () {\n        let pow = 2;\n        if (SimHas('Starlove')) pow = 3;\n        if (Game.hasGod) {\n          const godLvl = SimHasGod('seasons');\n          if (godLvl === 1) pow *= 1.3;\n          else if (godLvl === 2) pow *= 1.2;\n          else if (godLvl === 3) pow *= 1.1;\n        }\n        return pow;\n      };\n    }\n  }\n  you.pool = me.pool;\n  you.name = me.name;\n  return you;\n}\n","import CacheDragonAuras from '../../Cache/Dragon/CacheDragonAuras';\nimport { CacheDragonAura, CacheDragonAura2 } from '../../Cache/VariablesAndData';\nimport { CreateBotBarBuildingColumn } from '../../Disp/InfoBars/CreateDOMElements';\nimport InitAchievement from '../InitializeData/InitAchievement';\nimport InitialBuildingData from '../InitializeData/InitialBuildingData';\nimport InitUpgrade from '../InitializeData/InitUpgrade';\nimport {\n  SimAchievements,\n  SimAchievementsOwned, // eslint-disable-line no-unused-vars\n  SimDragonAura, // eslint-disable-line no-unused-vars\n  SimDragonAura2, // eslint-disable-line no-unused-vars\n  SimGod1, // eslint-disable-line no-unused-vars\n  SimGod2, // eslint-disable-line no-unused-vars\n  SimGod3, // eslint-disable-line no-unused-vars\n  SimHeavenlyPower, // eslint-disable-line no-unused-vars\n  SimObjects,\n  SimPledges, // eslint-disable-line no-unused-vars\n  SimPrestige, // eslint-disable-line no-unused-vars\n  SimUpgrades,\n  SimUpgradesOwned, // eslint-disable-line no-unused-vars\n} from '../VariablesAndData';\n\n/**\n * This function copies all relevant data and therefore sets a new iteration of the \"sim data\"\n * It is called at the start of any function that simulates certain behaviour or actions\n */\nexport default function CopyData() {\n  // Other variables\n  SimUpgradesOwned = Game.UpgradesOwned;\n  SimPledges = Game.pledges;\n  SimAchievementsOwned = Game.AchievementsOwned;\n  SimHeavenlyPower = Game.heavenlyPower;\n  SimPrestige = Game.prestige;\n\n  // Buildings\n  Object.keys(Game.Objects).forEach((i) => {\n    const me = Game.Objects[i];\n    let you = SimObjects[i];\n    if (you === undefined) {\n      // New building!\n      SimObjects[i] = InitialBuildingData(i);\n      you = SimObjects[i];\n      CreateBotBarBuildingColumn(i); // Add new building to the bottom bar\n    }\n    you.amount = me.amount;\n    you.level = me.level;\n    you.totalCookies = me.totalCookies;\n    you.basePrice = me.basePrice;\n    you.free = me.free;\n    if (me.minigameLoaded) {\n      if (me.name === 'Temple') {\n        SimGod1 = me.minigame.slot[0];\n        SimGod2 = me.minigame.slot[1];\n        SimGod3 = me.minigame.slot[2];\n      }\n      you.minigameLoaded = me.minigameLoaded;\n      you.minigame = me.minigame;\n    }\n    SimObjects[i] = you;\n  });\n\n  // Upgrades\n  Object.keys(Game.Upgrades).forEach((i) => {\n    const me = Game.Upgrades[i];\n    let you = SimUpgrades[i];\n    if (you === undefined) {\n      SimUpgrades[i] = InitUpgrade(i);\n      you = SimUpgrades[i];\n    }\n    you.bought = me.bought;\n    SimUpgrades[i] = you;\n  });\n\n  // Achievements\n  Object.keys(Game.Achievements).forEach((i) => {\n    const me = Game.Achievements[i];\n    let you = SimAchievements[i];\n    if (you === undefined) {\n      SimAchievements[i] = InitAchievement(i);\n      you = SimAchievements[i];\n    }\n    you.won = me.won;\n    SimAchievements[i] = you;\n  });\n\n  // Auras\n  CacheDragonAuras();\n  SimDragonAura = CacheDragonAura;\n  SimDragonAura2 = CacheDragonAura2;\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport {\n  ColourTextPre,\n  ColourBorderPre,\n  ColourGray,\n  ColourBlue,\n  ColourRed,\n  ColourYellow,\n  ColourPurple,\n  TooltipType,\n} from '../VariablesAndData';\n\n/** Creates various sections of tooltips */\n\n/**\n * This function creates a tooltipBox object which contains all CookieMonster added tooltip information.\n * @returns {object}\tdiv\t\tAn object containing the stylized box\n */\nexport function TooltipCreateTooltipBox() {\n  l('tooltip').firstChild.style.paddingBottom = '4px'; // Sets padding on base-tooltip\n  const tooltipBox = document.createElement('div');\n  tooltipBox.style.border = '1px solid';\n  tooltipBox.style.padding = '4px';\n  tooltipBox.style.margin = '0px -4px';\n  tooltipBox.id = 'CMTooltipBorder';\n  tooltipBox.className = ColourTextPre + ColourGray;\n  return tooltipBox;\n}\n\n/**\n * This function creates a header object for tooltips.\n * @param\t{string}\ttext\tTitle of header\n * @returns {object}\tdiv\t\tAn object containing the stylized header\n */\nexport function TooltipCreateHeader(text) {\n  const div = document.createElement('div');\n  div.style.fontWeight = 'bold';\n  div.id = `${text}Title`;\n  div.className = ColourTextPre + ColourBlue;\n  div.textContent = text;\n  return div;\n}\n\n/**\n * This function creates the tooltip objectm for warnings\n * The object is also removed by CM.Disp.UpdateTooltipWarnings() when type is 's' or 'g'\n * @returns {object}\tTooltipWarn\tThe Warnings-tooltip object\n */\nexport function TooltipCreateWarningSection() {\n  const TooltipWarn = document.createElement('div');\n  TooltipWarn.style.position = 'absolute';\n  TooltipWarn.style.display = 'block';\n  TooltipWarn.style.left = 'auto';\n  TooltipWarn.style.bottom = 'auto';\n  TooltipWarn.id = 'CMDispTooltipWarningParent';\n\n  const create = function (boxId, color, labelTextFront, labelTextBack, deficitId) {\n    const box = document.createElement('div');\n    box.id = boxId;\n    box.style.display = 'none';\n    box.style.transition = 'opacity 0.1s ease-out';\n    box.className = ColourBorderPre + color;\n    box.style.padding = '2px';\n    box.style.background = '#000 url(img/darkNoise.png)';\n    const labelDiv = document.createElement('div');\n    box.appendChild(labelDiv);\n    const labelSpan = document.createElement('span');\n    labelSpan.className = ColourTextPre + color;\n    labelSpan.style.fontWeight = 'bold';\n    labelSpan.textContent = labelTextFront;\n    labelDiv.appendChild(labelSpan);\n    labelDiv.appendChild(document.createTextNode(labelTextBack));\n    const deficitDiv = document.createElement('div');\n    box.appendChild(deficitDiv);\n    const deficitSpan = document.createElement('span');\n    deficitSpan.id = deficitId;\n    deficitDiv.appendChild(document.createTextNode('Deficit: '));\n    deficitDiv.appendChild(deficitSpan);\n    return box;\n  };\n\n  TooltipWarn.appendChild(\n    create(\n      'CMDispTooltipWarnLucky',\n      ColourRed,\n      'Warning: ',\n      'Purchase of this item will put you under the number of Cookies required for \"Lucky!\"',\n      'CMDispTooltipWarnLuckyText',\n    ),\n  );\n  TooltipWarn.firstChild.style.marginBottom = '4px';\n  TooltipWarn.appendChild(\n    create(\n      'CMDispTooltipWarnLuckyFrenzy',\n      ColourYellow,\n      'Warning: ',\n      'Purchase of this item will put you under the number of Cookies required for \"Lucky!\" (Frenzy)',\n      'CMDispTooltipWarnLuckyFrenzyText',\n    ),\n  );\n  TooltipWarn.lastChild.style.marginBottom = '4px';\n  TooltipWarn.appendChild(\n    create(\n      'CMDispTooltipWarnConjure',\n      ColourPurple,\n      'Warning: ',\n      'Purchase of this item will put you under the number of Cookies required for \"Conjure Baked Goods\"',\n      'CMDispTooltipWarnConjureText',\n    ),\n  );\n  TooltipWarn.lastChild.style.marginBottom = '4px';\n  TooltipWarn.appendChild(\n    create(\n      'CMDispTooltipWarnConjureFrenzy',\n      ColourPurple,\n      'Warning: ',\n      'Purchase of this item will put you under the number of Cookies required for \"Conjure Baked Goods\" (Frenzy)',\n      'CMDispTooltipWarnConjureFrenzyText',\n    ),\n  );\n  TooltipWarn.lastChild.style.marginBottom = '4px';\n  TooltipWarn.appendChild(\n    create(\n      'CMDispTooltipWarnEdifice',\n      ColourPurple,\n      'Warning: ',\n      'Purchase of this item will put you under the number of Cookies needed for \"Spontaneous Edifice\" to possibly give you your most expensive building\"',\n      'CMDispTooltipWarnEdificeText',\n    ),\n  );\n  TooltipWarn.lastChild.style.marginBottom = '4px';\n  TooltipWarn.appendChild(\n    create(\n      'CMDispTooltipWarnUser',\n      ColourRed,\n      'Warning: ',\n      `Purchase of this item will put you under the number of Cookies equal to ${CMOptions.ToolWarnUser} seconds of CPS`,\n      'CMDispTooltipWarnUserText',\n    ),\n  );\n\n  return TooltipWarn;\n}\n\n/**\n * This function appends the sections for Bonus Income, PP and Time left (to achiev) to the tooltip-object\n * The actual data is added by the Update-functions themselves\n * @param\t{object}\ttooltip\t\tObject of a TooltipBox, normally created by a call to CM.Disp.TooltipCreateTooltipBox()\n */\nexport function TooltipCreateCalculationSection(tooltip) {\n  tooltip.appendChild(TooltipCreateHeader('Bonus Income'));\n  const income = document.createElement('div');\n  income.style.marginBottom = '4px';\n  income.style.color = 'white';\n  income.id = 'CMTooltipIncome';\n  tooltip.appendChild(income);\n\n  tooltip.appendChild(TooltipCreateHeader('Bonus Cookies per Click'));\n  tooltip.lastChild.style.display = 'none'; // eslint-disable-line no-param-reassign\n  const click = document.createElement('div');\n  click.style.marginBottom = '4px';\n  click.style.color = 'white';\n  click.style.display = 'none';\n  click.id = 'CMTooltipCookiePerClick';\n  tooltip.appendChild(click);\n\n  tooltip.appendChild(TooltipCreateHeader('Payback Period'));\n  const pp = document.createElement('div');\n  pp.style.marginBottom = '4px';\n  pp.id = 'CMTooltipPP';\n  tooltip.appendChild(pp);\n\n  tooltip.appendChild(TooltipCreateHeader('Time Left'));\n  const time = document.createElement('div');\n  time.id = 'CMTooltipTime';\n  tooltip.appendChild(time);\n\n  if (TooltipType === 'b') {\n    tooltip.appendChild(TooltipCreateHeader('Production left till next achievement'));\n    tooltip.lastChild.id = 'CMTooltipProductionLeftHeader'; // eslint-disable-line no-param-reassign\n    const production = document.createElement('div');\n    production.id = 'CMTooltipProductionLeft';\n    tooltip.appendChild(production);\n  }\n  if (TooltipType === 'b') {\n    tooltip.appendChild(TooltipCreateHeader('Buildings (price / PP) left till next achievement'));\n    tooltip.lastChild.id = 'CMTooltipNextAchievementHeader'; // eslint-disable-line no-param-reassign\n    const production = document.createElement('div');\n    production.id = 'CMTooltipNextAchievement';\n    tooltip.appendChild(production);\n  }\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport GetCPS from '../../Disp/HelperFunctions/GetCPS';\nimport {\n  ColourBlue,\n  ColourGray,\n  ColourGreen,\n  ColourOrange,\n  ColourPurple,\n  ColourRed,\n  ColourYellow,\n} from '../../Disp/VariablesAndData';\nimport { CacheMinPP, CachePPArray } from '../VariablesAndData';\n\n/**\n * This functions return the colour assosciated with the given pp value\n * It is called by CM.Cache.CacheBuildingsPP(), CM.Cache.CacheBuildingsBulkPP() and CM.Cache.CacheUpgradePP()\n * @params\t{object}\tobj\t\tThe obj of which the pp value should be checked\n * @params\t{number}\tprice\tThe price of the object\n * @returns {string}\tcolor\tThe colour assosciated with the pp value\n */\nexport default function ColourOfPP(me, price) {\n  let color = '';\n  // Colour based on PP\n  if (me.pp <= 0 || me.pp === Infinity) color = ColourGray;\n  else if (me.pp < CacheMinPP) color = ColourBlue;\n  else if (me.pp === CacheMinPP) color = ColourGreen;\n  else if (me.pp < CachePPArray[10][0]) color = ColourYellow;\n  else if (me.pp < CachePPArray[20][0]) color = ColourOrange;\n  else if (me.pp < CachePPArray[30][0]) color = ColourRed;\n  else color = ColourPurple;\n\n  // Colour based on price in terms of CPS\n  if (Number(CMOptions.PPSecondsLowerLimit) !== 0) {\n    if (price / GetCPS() < Number(CMOptions.PPSecondsLowerLimit)) color = ColourBlue;\n  }\n  // Colour based on being able to purchase\n  if (CMOptions.PPOnlyConsiderBuyable) {\n    if (price - Game.cookies > 0) color = ColourRed;\n  }\n  return color;\n}\n","/**\n * This function returns the current CPS buff\n * @returns {number}\tmult\tThe multiplier\n */\nexport default function GetCPSBuffMult() {\n  let mult = 1;\n  Object.keys(Game.buffs).forEach((i) => {\n    if (typeof Game.buffs[i].multCpS !== 'undefined') mult *= Game.buffs[i].multCpS;\n  });\n  return mult;\n}\n","import { SimAchievements, SimAchievementsOwned } from '../VariablesAndData'; // eslint-disable-line no-unused-vars\n\n/**\n * This function \"wins\" an achievement in the current sim data\n * It functions similarly to Game.Win()\n * It is not created by CM.Sim.CreateSimFunctions() in order to avoid spamming pop-ups upon winning\n * @param\t{string}\twhat\tName of the achievement\n */\nexport default function SimWin(what) {\n  if (SimAchievements[what]) {\n    if (SimAchievements[what].won === 0) {\n      SimAchievements[what].won = 1;\n      if (Game.Achievements[what].pool !== 'shadow') SimAchievementsOwned += 1;\n    }\n  }\n}\n","import GetCPSBuffMult from '../../Cache/CPS/GetCPSBuffMult';\nimport { CacheCentEgg } from '../../Cache/VariablesAndData';\nimport { CenturyDateAtBeginLoop, CycliusDateAtBeginLoop } from '../../Main/VariablesAndData';\nimport SimAuraMult from '../ReplacedGameFunctions/SimAuraMult';\nimport SimEff from '../ReplacedGameFunctions/SimEff';\nimport SimGetHeavenlyMultiplier from '../ReplacedGameFunctions/SimGetHeavenlyMultiplier';\nimport SimHas from '../ReplacedGameFunctions/SimHas';\nimport SimHasGod from '../ReplacedGameFunctions/SimHasGod';\nimport SimWin from '../SimulationData/SimWin';\nimport {\n  SimAchievementsOwned,\n  SimCookiesPs,\n  SimCookiesPsRaw, // eslint-disable-line no-unused-vars\n  SimEffs, // eslint-disable-line no-unused-vars\n  SimHeavenlyPower,\n  SimObjects,\n  SimPrestige,\n  SimUpgrades,\n} from '../VariablesAndData';\n\n/**\n * This function calculates the CPS of the current \"sim data\"\n * It is similar to Game.CalculateGains()\n * It is called at the start of any function that simulates certain behaviour or actions\n * @global\t{number}\tCM.Sim.cookiesPs\tThe CPS of the current sim data\n */\nexport default function CalculateGains() {\n  SimCookiesPs = 0;\n  let mult = 1;\n  // Include minigame effects\n  const effs = {};\n  Object.keys(Game.Objects).forEach((i) => {\n    if (Game.Objects[i].minigameLoaded && Game.Objects[i].minigame.effs) {\n      const myEffs = Game.Objects[i].minigame.effs;\n      Object.keys(myEffs).forEach((ii) => {\n        if (effs[ii]) effs[ii] *= myEffs[ii];\n        else effs[ii] = myEffs[ii];\n      });\n    }\n  });\n  SimEffs = effs;\n\n  if (Game.ascensionMode !== 1)\n    mult += parseFloat(SimPrestige) * 0.01 * SimHeavenlyPower * SimGetHeavenlyMultiplier();\n\n  mult *= SimEff('cps');\n\n  if (SimHas('Heralds') && Game.ascensionMode !== 1) mult *= 1 + 0.01 * Game.heralds;\n\n  Object.keys(Game.cookieUpgrades).forEach((i) => {\n    const me = Game.cookieUpgrades[i];\n    if (SimHas(me.name)) {\n      // Some upgrades have a functio as .power (notably the valentine cookies)\n      // CM.Sim.InitialBuildingData has changed to use CM.Sim.Has instead of Game.Has etc.\n      // Therefore this call is to the .power of the Sim.Object\n      if (typeof me.power === 'function') {\n        mult *= 1 + SimUpgrades[me.name].power(SimUpgrades[me.name]) * 0.01;\n      } else mult *= 1 + me.power * 0.01;\n    }\n  });\n\n  if (SimHas('Specialized chocolate chips')) mult *= 1.01;\n  if (SimHas('Designer cocoa beans')) mult *= 1.02;\n  if (SimHas('Underworld ovens')) mult *= 1.03;\n  if (SimHas('Exotic nuts')) mult *= 1.04;\n  if (SimHas('Arcane sugar')) mult *= 1.05;\n\n  if (SimHas('Increased merriness')) mult *= 1.15;\n  if (SimHas('Improved jolliness')) mult *= 1.15;\n  if (SimHas('A lump of coal')) mult *= 1.01;\n  if (SimHas('An itchy sweater')) mult *= 1.01;\n  if (SimHas(\"Santa's dominion\")) mult *= 1.2;\n\n  if (SimHas('Fortune #100')) mult *= 1.01;\n  if (SimHas('Fortune #101')) mult *= 1.07;\n\n  if (SimHas('Dragon scale')) mult *= 1.03;\n\n  // Check effect of chosen Gods\n  let buildMult = 1;\n  if (SimHasGod) {\n    let godLvl = SimHasGod('asceticism');\n    if (godLvl === 1) mult *= 1.15;\n    else if (godLvl === 2) mult *= 1.1;\n    else if (godLvl === 3) mult *= 1.05;\n\n    godLvl = SimHasGod('ages');\n    if (godLvl === 1)\n      mult *= 1 + 0.15 * Math.sin((CycliusDateAtBeginLoop / 1000 / (60 * 60 * 3)) * Math.PI * 2);\n    else if (godLvl === 2)\n      mult *= 1 + 0.15 * Math.sin((CycliusDateAtBeginLoop / 1000 / (60 * 60 * 12)) * Math.PI * 2);\n    else if (godLvl === 3)\n      mult *= 1 + 0.15 * Math.sin((CycliusDateAtBeginLoop / 1000 / (60 * 60 * 24)) * Math.PI * 2);\n\n    godLvl = SimHasGod('decadence');\n    if (godLvl === 1) buildMult *= 0.93;\n    else if (godLvl === 2) buildMult *= 0.95;\n    else if (godLvl === 3) buildMult *= 0.98;\n\n    godLvl = SimHasGod('industry');\n    if (godLvl === 1) buildMult *= 1.1;\n    else if (godLvl === 2) buildMult *= 1.06;\n    else if (godLvl === 3) buildMult *= 1.03;\n\n    godLvl = SimHasGod('labor');\n    if (godLvl === 1) buildMult *= 0.97;\n    else if (godLvl === 2) buildMult *= 0.98;\n    else if (godLvl === 3) buildMult *= 0.99;\n  }\n\n  if (SimHas(\"Santa's legacy\")) mult *= 1 + (Game.santaLevel + 1) * 0.03;\n\n  const milkProgress = SimAchievementsOwned / 25;\n  let milkMult = 1;\n  if (SimHas(\"Santa's milk and cookies\")) milkMult *= 1.05;\n  // if (CM.Sim.hasAura('Breath of Milk')) milkMult *= 1.05;\n  milkMult *= 1 + SimAuraMult('Breath of Milk') * 0.05;\n  if (SimHasGod) {\n    const godLvl = SimHasGod('mother');\n    if (godLvl === 1) milkMult *= 1.1;\n    else if (godLvl === 2) milkMult *= 1.05;\n    else if (godLvl === 3) milkMult *= 1.03;\n  }\n  milkMult *= SimEff('milk');\n\n  let catMult = 1;\n\n  if (SimHas('Kitten helpers')) catMult *= 1 + milkProgress * 0.1 * milkMult;\n  if (SimHas('Kitten workers')) catMult *= 1 + milkProgress * 0.125 * milkMult;\n  if (SimHas('Kitten engineers')) catMult *= 1 + milkProgress * 0.15 * milkMult;\n  if (SimHas('Kitten overseers')) catMult *= 1 + milkProgress * 0.175 * milkMult;\n  if (SimHas('Kitten managers')) catMult *= 1 + milkProgress * 0.2 * milkMult;\n  if (SimHas('Kitten accountants')) catMult *= 1 + milkProgress * 0.2 * milkMult;\n  if (SimHas('Kitten specialists')) catMult *= 1 + milkProgress * 0.2 * milkMult;\n  if (SimHas('Kitten experts')) catMult *= 1 + milkProgress * 0.2 * milkMult;\n  if (SimHas('Kitten consultants')) catMult *= 1 + milkProgress * 0.2 * milkMult;\n  if (SimHas('Kitten assistants to the regional manager'))\n    catMult *= 1 + milkProgress * 0.175 * milkMult;\n  if (SimHas('Kitten marketeers')) catMult *= 1 + milkProgress * 0.15 * milkMult;\n  if (SimHas('Kitten analysts')) catMult *= 1 + milkProgress * 0.125 * milkMult;\n  if (SimHas('Kitten executives')) catMult *= 1 + milkProgress * 0.115 * milkMult;\n  if (SimHas('Kitten angels')) catMult *= 1 + milkProgress * 0.1 * milkMult;\n  if (SimHas('Fortune #103')) catMult *= 1 + milkProgress * 0.05 * milkMult;\n\n  Object.keys(SimObjects).forEach((i) => {\n    const me = SimObjects[i];\n    let storedCps = me.cps(me);\n    if (Game.ascensionMode !== 1) storedCps *= (1 + me.level * 0.01) * buildMult;\n    if (me.name === 'Grandma' && SimHas('Milkhelp&reg; lactose intolerance relief tablets'))\n      storedCps *= 1 + 0.05 * milkProgress * milkMult;\n    SimCookiesPs += me.amount * storedCps;\n  });\n\n  if (SimHas('\"egg\"')) SimCookiesPs += 9; // \"egg\"\n\n  mult *= catMult;\n\n  let eggMult = 1;\n  if (SimHas('Chicken egg')) eggMult *= 1.01;\n  if (SimHas('Duck egg')) eggMult *= 1.01;\n  if (SimHas('Turkey egg')) eggMult *= 1.01;\n  if (SimHas('Quail egg')) eggMult *= 1.01;\n  if (SimHas('Robin egg')) eggMult *= 1.01;\n  if (SimHas('Ostrich egg')) eggMult *= 1.01;\n  if (SimHas('Cassowary egg')) eggMult *= 1.01;\n  if (SimHas('Salmon roe')) eggMult *= 1.01;\n  if (SimHas('Frogspawn')) eggMult *= 1.01;\n  if (SimHas('Shark egg')) eggMult *= 1.01;\n  if (SimHas('Turtle egg')) eggMult *= 1.01;\n  if (SimHas('Ant larva')) eggMult *= 1.01;\n  if (SimHas('Century egg')) {\n    // The boost increases a little every day, with diminishing returns up to +10% on the 100th day\n    let day =\n      (Math.floor((CenturyDateAtBeginLoop - Game.startDate) / 1000 / 10) * 10) / 60 / 60 / 24;\n    day = Math.min(day, 100);\n    // Sets a Cache value to be displayed in the Stats page, could be moved...\n    CacheCentEgg = 1 + (1 - (1 - day / 100) ** 3) * 0.1;\n    eggMult *= CacheCentEgg;\n  }\n  mult *= eggMult;\n\n  if (SimHas('Sugar baking')) mult *= 1 + Math.min(100, Game.lumps) * 0.01;\n\n  // if (CM.Sim.hasAura('Radiant Appetite')) mult *= 2;\n  mult *= 1 + SimAuraMult('Radiant Appetite');\n\n  const rawCookiesPs = SimCookiesPs * mult;\n  Object.keys(Game.CpsAchievements).forEach((i) => {\n    if (rawCookiesPs >= Game.CpsAchievements[i].threshold) SimWin(Game.CpsAchievements[i].name);\n  });\n\n  SimCookiesPsRaw = rawCookiesPs;\n\n  const { n } = Game.shimmerTypes.golden;\n  const auraMult = SimAuraMult(\"Dragon's Fortune\");\n  for (let i = 0; i < n; i++) {\n    mult *= 1 + auraMult * 1.23;\n  }\n\n  const name = Game.bakeryName.toLowerCase();\n  if (name === 'orteil') mult *= 0.99;\n  else if (name === 'ortiel') mult *= 0.98;\n\n  if (SimHas('Elder Covenant')) mult *= 0.95;\n\n  if (SimHas('Golden switch [off]')) {\n    let goldenSwitchMult = 1.5;\n    if (SimHas('Residual luck')) {\n      const upgrades = Game.goldenCookieUpgrades;\n      Object.keys(upgrades).forEach((i) => {\n        if (SimHas(upgrades[i])) goldenSwitchMult += 0.1;\n      });\n    }\n    mult *= goldenSwitchMult;\n  }\n  if (SimHas('Shimmering veil [off]')) {\n    let veilMult = 0.5;\n    if (SimHas('Reinforced membrane')) veilMult += 0.1;\n    mult *= 1 + veilMult;\n  }\n\n  if (SimHas('Magic shenanigans')) mult *= 1000;\n  if (SimHas('Occult obstruction')) mult *= 0;\n\n  SimCookiesPs = Game.runModHookOnValue('cps', SimCookiesPs);\n\n  mult *= GetCPSBuffMult();\n\n  SimCookiesPs *= mult;\n\n  // if (Game.hasBuff('Cursed finger')) Game.cookiesPs = 0;\n}\n","import SimAuraMult from './SimAuraMult';\nimport SimHas from './SimHas';\nimport SimHasGod from './SimHasGod';\n\n/**\n * This functions creates functions similarly to Game.GetHeavenlyMultiplier but checks Sim Data instead of Game Data\n */\nexport default function SimGetHeavenlyMultiplier() {\n  let heavenlyMult = 0;\n  if (SimHas('Heavenly chip secret')) heavenlyMult += 0.05;\n  if (SimHas('Heavenly cookie stand')) heavenlyMult += 0.2;\n  if (SimHas('Heavenly bakery')) heavenlyMult += 0.25;\n  if (SimHas('Heavenly confectionery')) heavenlyMult += 0.25;\n  if (SimHas('Heavenly key')) heavenlyMult += 0.25;\n  // if (SimHasAura('Dragon God')) heavenlyMult*=1.05;\n  heavenlyMult *= 1 + SimAuraMult('Dragon God') * 0.05;\n  if (SimHas('Lucky digit')) heavenlyMult *= 1.01;\n  if (SimHas('Lucky number')) heavenlyMult *= 1.01;\n  if (SimHas('Lucky payout')) heavenlyMult *= 1.01;\n  if (Game.hasGod) {\n    const godLvl = SimHasGod('creation');\n    if (godLvl === 1) heavenlyMult *= 0.7;\n    else if (godLvl === 2) heavenlyMult *= 0.8;\n    else if (godLvl === 3) heavenlyMult *= 0.9;\n  }\n  return heavenlyMult;\n}\n","/** Data copied directly from the game */\n\n/** Array of the names of all fortune cookies obtainable from the ticker */\nexport const Fortunes: string[] = [\n  'Fortune #001',\n  'Fortune #002',\n  'Fortune #003',\n  'Fortune #004',\n  'Fortune #005',\n  'Fortune #006',\n  'Fortune #007',\n  'Fortune #008',\n  'Fortune #009',\n  'Fortune #010',\n  'Fortune #011',\n  'Fortune #012',\n  'Fortune #013',\n  'Fortune #014',\n  'Fortune #015',\n  'Fortune #016',\n  'Fortune #017',\n  'Fortune #018',\n  'Fortune #100',\n  'Fortune #101',\n  'Fortune #102',\n  'Fortune #103',\n  'Fortune #104',\n];\n\n/** Array of the names of all Halloween cookies */\nexport const HalloCookies: string[] = [\n  'Skull cookies',\n  'Ghost cookies',\n  'Bat cookies',\n  'Slime cookies',\n  'Pumpkin cookies',\n  'Eyeball cookies',\n  'Spider cookies',\n];\n\n/** Array of the names of all Christmas cookies */\nexport const ChristCookies: string[] = [\n  'Christmas tree biscuits',\n  'Snowflake biscuits',\n  'Snowman biscuits',\n  'Holly biscuits',\n  'Candy cane biscuits',\n  'Bell biscuits',\n  'Present biscuits',\n];\n\n/** Array of the names of all Valentine cookies */\nexport const ValCookies: string[] = [\n  'Pure heart biscuits',\n  'Ardent heart biscuits',\n  'Sour heart biscuits',\n  'Weeping heart biscuits',\n  'Golden heart biscuits',\n  'Eternal heart biscuits',\n  'Prism heart biscuits',\n];\n\n/** Array of the names of all plant drops */\nexport const PlantDrops: string[] = [\n  'Elderwort biscuits',\n  'Bakeberry cookies',\n  'Duketater cookies',\n  'Green yeast digestives',\n  'Wheat slims',\n  'Fern tea',\n  'Ichor syrup',\n];\n\n/** All possible effects plants and other items can have with a display-title */\nexport const Effects: { [index: string]: string } = {\n  buildingCost: 'Building prices',\n  click: 'Cookies per click',\n  cps: 'Total CPS',\n  cursorCps: 'Cursor CPS',\n  goldenCookieDur: 'Golden cookie duration',\n  goldenCookieEffDur: 'Golden cookie effect duration',\n  goldenCookieFreq: 'Golden cookie frequency',\n  goldenCookieGain: 'Golden cookie gains',\n  grandmaCps: 'Grandma CPS',\n  itemDrops: 'Random item drop chance',\n  milk: 'Effect from milk',\n  reindeerDur: 'Reindeer duration',\n  reindeerFreq: 'Reindeer frequency',\n  reindeerGain: 'Reindeer gains',\n  upgradeCost: 'Upgrade prices',\n  wrathCookieDur: 'Wrath cookie duration',\n  wrathCookieEffDur: 'Wrath cookie effect duration',\n  wrathCookieFreq: 'Wrath cookie frequency',\n  wrathCookieGain: 'Wrath cookie gains',\n  wrinklerEat: 'Wrinkler ',\n  wrinklerSpawn: 'Wrinkler spawn frequency',\n};\n","import { SimAchievements } from '../VariablesAndData';\n\n/**\n * This functions creates functions similarly to Game.HasAchiev but checks Sim Data instead of Game Data\n */\nexport default function SimHasAchiev(what) {\n  return SimAchievements[what] ? SimAchievements[what].won : 0;\n}\n","import { ChristCookies, HalloCookies } from '../../Data/Gamedata.ts';\nimport SimHas from '../ReplacedGameFunctions/SimHas';\nimport SimHasAchiev from '../ReplacedGameFunctions/SimHasAchiev';\nimport SimWin from '../SimulationData/SimWin';\nimport { SimObjects, SimUpgradesOwned } from '../VariablesAndData';\n\n/**\n * This function calculates if any special achievements have been obtained\n * If so it SimWin()'s them and the caller function will know to recall CM.Sim.CalculateGains()\n * It is called at the end of any functions that simulates certain behaviour\n */\nexport default function CheckOtherAchiev() {\n  let grandmas = 0;\n  Object.keys(Game.GrandmaSynergies).forEach((i) => {\n    if (SimHas(Game.GrandmaSynergies[i])) grandmas += 1;\n  });\n  if (!SimHasAchiev('Elder') && grandmas >= 7) SimWin('Elder');\n  if (!SimHasAchiev('Veteran') && grandmas >= 14) SimWin('Veteran');\n\n  let buildingsOwned = 0;\n  let mathematician = 1;\n  let base10 = 1;\n  let minAmount = 100000;\n  Object.keys(SimObjects).forEach((i) => {\n    buildingsOwned += SimObjects[i].amount;\n    minAmount = Math.min(SimObjects[i].amount, minAmount);\n    if (!SimHasAchiev('Mathematician')) {\n      if (\n        SimObjects[i].amount <\n        Math.min(128, 2 ** (Game.ObjectsById.length - Game.Objects[i].id - 1))\n      )\n        mathematician = 0;\n    }\n    if (!SimHasAchiev('Base 10')) {\n      if (SimObjects[i].amount < (Game.ObjectsById.length - Game.Objects[i].id) * 10) base10 = 0;\n    }\n  });\n  if (minAmount >= 1) SimWin('One with everything');\n  if (mathematician === 1) SimWin('Mathematician');\n  if (base10 === 1) SimWin('Base 10');\n  if (minAmount >= 100) SimWin('Centennial');\n  if (minAmount >= 150) SimWin('Centennial and a half');\n  if (minAmount >= 200) SimWin('Bicentennial');\n  if (minAmount >= 250) SimWin('Bicentennial and a half');\n  if (minAmount >= 300) SimWin('Tricentennial');\n  if (minAmount >= 350) SimWin('Tricentennial and a half');\n  if (minAmount >= 400) SimWin('Quadricentennial');\n  if (minAmount >= 450) SimWin('Quadricentennial and a half');\n  if (minAmount >= 500) SimWin('Quincentennial');\n  if (minAmount >= 550) SimWin('Quincentennial and a half');\n  if (minAmount >= 600) SimWin('Sexcentennial');\n\n  if (buildingsOwned >= 100) SimWin('Builder');\n  if (buildingsOwned >= 500) SimWin('Architect');\n  if (buildingsOwned >= 1000) SimWin('Engineer');\n  if (buildingsOwned >= 2000) SimWin('Lord of Constructs');\n  if (buildingsOwned >= 4000) SimWin('Grand design');\n  if (buildingsOwned >= 8000) SimWin('Ecumenopolis');\n\n  if (SimUpgradesOwned >= 20) SimWin('Enhancer');\n  if (SimUpgradesOwned >= 50) SimWin('Augmenter');\n  if (SimUpgradesOwned >= 100) SimWin('Upgrader');\n  if (SimUpgradesOwned >= 200) SimWin('Lord of Progress');\n  if (SimUpgradesOwned >= 300) SimWin('The full picture');\n  if (SimUpgradesOwned >= 400) SimWin(\"When there's nothing left to add\");\n\n  if (buildingsOwned >= 4000 && SimUpgradesOwned >= 300) SimWin('Polymath');\n  if (buildingsOwned >= 8000 && SimUpgradesOwned >= 400) SimWin('Renaissance baker');\n\n  if (SimObjects.Cursor.amount + SimObjects.Grandma.amount >= 777) SimWin('The elder scrolls');\n\n  let hasAllHalloCook = true;\n  Object.keys(HalloCookies).forEach((i) => {\n    if (!SimHas(HalloCookies[i])) hasAllHalloCook = false;\n  });\n  if (hasAllHalloCook) SimWin('Spooky cookies');\n\n  let hasAllChristCook = true;\n  Object.keys(ChristCookies).forEach((i) => {\n    if (!SimHas(ChristCookies[i])) hasAllChristCook = false;\n  });\n  if (hasAllChristCook) SimWin('Let it snow');\n\n  if (SimHas('Fortune cookies')) {\n    const list = Game.Tiers.fortune.upgrades;\n    let fortunes = 0;\n    Object.keys(list).forEach((i) => {\n      if (SimHas(list[i].name)) fortunes += 1;\n    });\n    if (fortunes >= list.length) SimWin('O Fortuna');\n  }\n}\n","import CalculateGains from '../Calculations/CalculateGains';\nimport CheckOtherAchiev from '../Calculations/CheckOtherAchiev';\nimport CopyData from '../SimulationData/CopyData';\nimport SimWin from '../SimulationData/SimWin';\nimport { SimAchievementsOwned, SimCookiesPs, SimObjects } from '../VariablesAndData';\n\n/**\n * This function calculates the bonus income of buying a building\n * It is called by CM.Cache.CacheBuildingIncome()\n * @param\t{string}\tbuilding\tThe name of the building to be bought\n * @param\t{number}\tamount\t\tThe amount to be bought\n * @returns {number}\t\t\t\tThe bonus income of the building\n */\nexport default function BuyBuildingsBonusIncome(building, amount) {\n  CopyData();\n  SimObjects[building].amount += amount;\n  const me = SimObjects[building];\n\n  if (building === 'Cursor') {\n    if (me.amount >= 1) SimWin('Click');\n    if (me.amount >= 2) SimWin('Double-click');\n    if (me.amount >= 50) SimWin('Mouse wheel');\n    if (me.amount >= 100) SimWin('Of Mice and Men');\n    if (me.amount >= 200) SimWin('The Digital');\n    if (me.amount >= 300) SimWin('Extreme polydactyly');\n    if (me.amount >= 400) SimWin('Dr. T');\n    if (me.amount >= 500) SimWin('Thumbs, phalanges, metacarpals');\n    if (me.amount >= 600) SimWin('With her finger and her thumb');\n    if (me.amount >= 700) SimWin('Gotta hand it to you');\n    if (me.amount >= 800) SimWin(\"The devil's workshop\");\n  } else {\n    Object.keys(Game.Objects[me.name].tieredAchievs).forEach((j) => {\n      if (me.amount >= Game.Tiers[Game.Objects[me.name].tieredAchievs[j].tier].achievUnlock) {\n        SimWin(Game.Objects[me.name].tieredAchievs[j].name);\n      }\n    });\n  }\n\n  const lastAchievementsOwned = SimAchievementsOwned;\n\n  CalculateGains();\n\n  CheckOtherAchiev();\n\n  if (lastAchievementsOwned !== SimAchievementsOwned) {\n    CalculateGains();\n  }\n\n  return SimCookiesPs - Game.cookiesPs;\n}\n","/**\n * This function calculates the time it takes to reach a certain magic level\n * @param\t{number}\tcurrentMagic\t\tThe current magic level\n * @param\t{number}\tmaxMagic\t\t\tThe user's max magic level\n * @param\t{number}\ttargetMagic\t\t\tThe target magic level\n * @returns\t{number}\tcount / Game.fps\tThe time it takes to reach targetMagic\n */\nexport default function CalculateGrimoireRefillTime(currentMagic, maxMagic, targetMagic) {\n  let magic = currentMagic;\n  let count = 0;\n  while (magic < targetMagic) {\n    magic += Math.max(0.002, (magic / Math.max(maxMagic, 100)) ** 0.5) * 0.002;\n    count += 1;\n  }\n  return count / Game.fps;\n}\n","import { CMOptions } from '../VariablesAndData';\n\n/**\n * This function toggles the position of the warnings created by CM.Disp.TooltipCreateWarningSection()\n * It is called by a change in CM.Options.ToolWarnPos\n * and upon creation of the warning tooltip by CM.Disp.UpdateTooltipWarnings()\n */\nexport default function ToggleToolWarnPos() {\n  if (l('CMDispTooltipWarningParent') !== null) {\n    if (CMOptions.ToolWarnPos === 0) {\n      l('CMDispTooltipWarningParent').style.top = 'auto';\n      l('CMDispTooltipWarningParent').style.margin = '4px -4px';\n      l('CMDispTooltipWarningParent').style.padding = '3px 4px';\n    } else {\n      l('CMDispTooltipWarningParent').style.right = 'auto';\n      l('CMDispTooltipWarningParent').style.margin = '4px';\n      l('CMDispTooltipWarningParent').style.padding = '4px 3px';\n    }\n  }\n}\n","import CopyData from '../../Sim/SimulationData/CopyData';\nimport { TooltipName, TooltipType } from '../VariablesAndData';\nimport * as Create from './CreateTooltip';\nimport Building from './TypesOfTooltips/Building';\nimport GardenPlots from './TypesOfTooltips/GardenPlots';\nimport Grimoire from './TypesOfTooltips/Grimoire';\nimport HarvestAll from './TypesOfTooltips/HarvestAll';\nimport PantheonGods from './TypesOfTooltips/PantheonGods';\nimport SugarLump from './TypesOfTooltips/SugarLump';\nimport Upgrade from './TypesOfTooltips/Upgrade';\nimport Warnings from './TypesOfTooltips/Warnings';\nimport WrinklerButton from './TypesOfTooltips/WrinklerButton';\n\n/**\n * This function updates the sections of the tooltips created by CookieMonster\n */\nexport default function UpdateTooltips() {\n  CopyData();\n  if (l('tooltipAnchor').style.display !== 'none' && l('CMTooltipArea')) {\n    l('CMTooltipArea').innerHTML = '';\n    const tooltipBox = Create.TooltipCreateTooltipBox();\n    l('CMTooltipArea').appendChild(tooltipBox);\n\n    if (TooltipType === 'b') {\n      Building();\n    } else if (TooltipType === 'u') {\n      Upgrade();\n    } else if (TooltipType === 's') {\n      SugarLump();\n    } else if (TooltipType === 'g') {\n      Grimoire();\n    } else if (TooltipType === 'p') {\n      GardenPlots();\n    } else if (TooltipType === 'ha') {\n      HarvestAll();\n    } else if (TooltipType === 'wb') {\n      WrinklerButton();\n    } else if (TooltipType === 'pag' || (TooltipType === 'pas' && TooltipName[1] !== -1)) {\n      PantheonGods();\n    }\n    Warnings();\n  } else if (l('CMTooltipArea') === null) {\n    // Remove warnings if its a basic tooltip\n    if (l('CMDispTooltipWarningParent') !== null) {\n      l('CMDispTooltipWarningParent').remove();\n    }\n  }\n}\n","import ColourOfPP from '../../../Cache/PP/ColourOfPP';\nimport {\n  CacheObjects1,\n  CacheObjects10,\n  CacheObjects100,\n  CacheObjectsNextAchievement,\n} from '../../../Cache/VariablesAndData';\nimport { CMOptions } from '../../../Config/VariablesAndData';\nimport BuyBuildingsBonusIncome from '../../../Sim/SimulationEvents/BuyBuildingBonusIncome';\nimport { SimObjects } from '../../../Sim/VariablesAndData';\nimport Beautify from '../../BeautifyAndFormatting/Beautify';\nimport FormatTime from '../../BeautifyAndFormatting/FormatTime';\nimport GetTimeColour from '../../BeautifyAndFormatting/GetTimeColour';\nimport GetCPS from '../../HelperFunctions/GetCPS';\nimport GetWrinkConfigBank from '../../HelperFunctions/GetWrinkConfigBank';\nimport {\n  ColourTextPre,\n  LastTargetTooltipBuilding,\n  TooltipBonusIncome,\n  TooltipName,\n  TooltipPrice,\n} from '../../VariablesAndData';\nimport * as Create from '../CreateTooltip';\n\n/**\n * This function adds extra info to the Building tooltips\n */\nexport default function Building() {\n  if (CMOptions.TooltipBuildUpgrade === 1 && Game.buyMode === 1) {\n    const tooltipBox = l('CMTooltipBorder');\n    Create.TooltipCreateCalculationSection(tooltipBox);\n\n    let target;\n    if (Game.buyMode === 1) {\n      LastTargetTooltipBuilding = target;\n    } else {\n      target = LastTargetTooltipBuilding;\n    }\n    if (Game.buyBulk === 1) target = CacheObjects1;\n    else if (Game.buyBulk === 10) target = CacheObjects10;\n    else if (Game.buyBulk === 100) target = CacheObjects100;\n\n    TooltipPrice = Game.Objects[TooltipName].bulkPrice;\n    TooltipBonusIncome = target[TooltipName].bonus;\n\n    if (CMOptions.TooltipBuildUpgrade === 1 && Game.buyMode === 1) {\n      l('CMTooltipIncome').textContent = Beautify(TooltipBonusIncome, 2);\n      const increase = Math.round((TooltipBonusIncome / Game.cookiesPs) * 10000);\n      if (Number.isFinite(increase) && increase !== 0) {\n        l('CMTooltipIncome').textContent += ` (${increase / 100}% of income)`;\n      } else {\n        l('CMTooltipIncome').textContent += ` (<0${\n          CMOptions.ScaleSeparator ? ',' : '.'\n        }01% of income)`;\n      }\n      l('CMTooltipBorder').className = ColourTextPre + target[TooltipName].color;\n      if (CMOptions.PPDisplayTime)\n        l('CMTooltipPP').textContent = FormatTime(target[TooltipName].pp);\n      else l('CMTooltipPP').textContent = Beautify(target[TooltipName].pp, 2);\n      l('CMTooltipPP').className = ColourTextPre + target[TooltipName].color;\n      const timeColour = GetTimeColour(\n        (TooltipPrice - (Game.cookies + GetWrinkConfigBank())) / GetCPS(),\n      );\n      l('CMTooltipTime').textContent = timeColour.text;\n      if (timeColour.text === 'Done!' && Game.cookies < target[TooltipName].price) {\n        l('CMTooltipTime').textContent = `${timeColour.text} (with Wrink)`;\n      } else l('CMTooltipTime').textContent = timeColour.text;\n      l('CMTooltipTime').className = ColourTextPre + timeColour.color;\n    }\n\n    // Add \"production left till next achievement\"-bar\n    l('CMTooltipProductionLeftHeader').style.display = 'none';\n    l('CMTooltipTime').style.marginBottom = '0px';\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const i of Object.keys(Game.Objects[TooltipName].productionAchievs)) {\n      if (!Game.HasAchiev(Game.Objects[TooltipName].productionAchievs[i].achiev.name)) {\n        const nextProductionAchiev = Game.Objects[TooltipName].productionAchievs[i];\n        l('CMTooltipTime').style.marginBottom = '4px';\n        l('CMTooltipProductionLeftHeader').style.display = '';\n        l('CMTooltipProductionLeft').className = `ProdAchievement${TooltipName}`;\n        l('CMTooltipProductionLeft').textContent = Beautify(\n          nextProductionAchiev.pow - SimObjects[TooltipName].totalCookies,\n          15,\n        );\n        l('CMTooltipProductionLeft').style.color = 'white';\n        break;\n      }\n    }\n\n    const ObjectsTillNext = CacheObjectsNextAchievement[TooltipName];\n    if (ObjectsTillNext.AmountNeeded < 101) {\n      l('CMTooltipProductionLeft').style.marginBottom = '4px';\n      l('CMTooltipNextAchievementHeader').style.display = '';\n\n      let PPOfAmount;\n      if (Game.cookiesPs) {\n        PPOfAmount =\n          Math.max(ObjectsTillNext.price - (Game.cookies + GetWrinkConfigBank()), 0) /\n            Game.cookiesPs +\n          ObjectsTillNext.price /\n            BuyBuildingsBonusIncome(TooltipName, ObjectsTillNext.AmountNeeded);\n      } else\n        PPOfAmount =\n          ObjectsTillNext.price /\n          BuyBuildingsBonusIncome(TooltipName, ObjectsTillNext.AmountNeeded);\n\n      l('CMTooltipNextAchievement').textContent = `${Beautify(\n        ObjectsTillNext.AmountNeeded,\n      )} / ${Beautify(ObjectsTillNext.price)} / `;\n      l('CMTooltipNextAchievement').style.color = 'white';\n      const PPFrag = document.createElement('span');\n      if (CMOptions.PPDisplayTime) PPFrag.textContent = FormatTime(PPOfAmount);\n      else PPFrag.textContent = Beautify(PPOfAmount);\n      PPFrag.className = ColourTextPre + ColourOfPP({ pp: PPOfAmount }, ObjectsTillNext.price);\n      l('CMTooltipNextAchievement').appendChild(PPFrag);\n    } else {\n      l('CMTooltipNextAchievementHeader').style.display = 'none';\n      l('CMTooltipProductionLeft').style.marginBottom = '0px';\n    }\n  } else l('CMTooltipArea').style.display = 'none';\n}\n","import { CacheLastChoEgg, CacheUpgrades } from '../../../Cache/VariablesAndData';\nimport { CMOptions } from '../../../Config/VariablesAndData';\nimport Beautify from '../../BeautifyAndFormatting/Beautify';\nimport FormatTime from '../../BeautifyAndFormatting/FormatTime';\nimport GetTimeColour from '../../BeautifyAndFormatting/GetTimeColour';\nimport GetCPS from '../../HelperFunctions/GetCPS';\nimport GetWrinkConfigBank from '../../HelperFunctions/GetWrinkConfigBank';\nimport {\n  ColourTextPre,\n  TooltipBonusIncome,\n  TooltipBonusMouse,\n  TooltipName,\n  TooltipPrice,\n} from '../../VariablesAndData';\nimport * as Create from '../CreateTooltip';\n\n/**\n * This function adds extra info to the Upgrade tooltips\n */\nexport default function Upgrade() {\n  const tooltipBox = l('CMTooltipBorder');\n  Create.TooltipCreateCalculationSection(tooltipBox);\n\n  TooltipBonusIncome = CacheUpgrades[Game.UpgradesInStore[TooltipName].name].bonus;\n  TooltipPrice = Game.Upgrades[Game.UpgradesInStore[TooltipName].name].getPrice();\n  TooltipBonusMouse = CacheUpgrades[Game.UpgradesInStore[TooltipName].name].bonusMouse;\n\n  if (CMOptions.TooltipBuildUpgrade === 1) {\n    l('CMTooltipIncome').textContent = Beautify(TooltipBonusIncome, 2);\n    const increase = Math.round((TooltipBonusIncome / Game.cookiesPs) * 10000);\n    // Don't display certain parts of tooltip if not applicable\n    if (l('CMTooltipIncome').textContent === '0') {\n      l('Bonus IncomeTitle').style.display = 'none';\n      l('CMTooltipIncome').style.display = 'none';\n      l('Payback PeriodTitle').style.display = 'none';\n      l('CMTooltipPP').style.display = 'none';\n    } else {\n      if (Number.isFinite(increase) && increase !== 0) {\n        l('CMTooltipIncome').textContent += ` (${increase / 100}% of income)`;\n      } else {\n        l('CMTooltipIncome').textContent += ` (<0${\n          CMOptions.ScaleSeparator ? ',' : '.'\n        }01% of income)`;\n      }\n      l('CMTooltipBorder').className =\n        ColourTextPre + CacheUpgrades[Game.UpgradesInStore[TooltipName].name].color;\n    }\n\n    // If clicking power upgrade\n    if (TooltipBonusMouse) {\n      l('CMTooltipCookiePerClick').textContent = Beautify(TooltipBonusMouse);\n      l('CMTooltipCookiePerClick').style.display = 'block';\n      l('CMTooltipCookiePerClick').previousSibling.style.display = 'block';\n    }\n    // If only a clicking power upgrade change PP to click-based period\n    if (!TooltipBonusIncome && TooltipBonusMouse) {\n      l('CMTooltipPP').textContent = `${Beautify(TooltipPrice / TooltipBonusMouse)} Clicks`;\n      l('CMTooltipPP').style.color = 'white';\n      l('Payback PeriodTitle').style.display = 'block';\n      l('CMTooltipPP').style.display = 'block';\n    } else {\n      if (CMOptions.PPDisplayTime)\n        l('CMTooltipPP').textContent = FormatTime(\n          CacheUpgrades[Game.UpgradesInStore[TooltipName].name].pp,\n        );\n      else\n        l('CMTooltipPP').textContent = Beautify(\n          CacheUpgrades[Game.UpgradesInStore[TooltipName].name].pp,\n          2,\n        );\n      l('CMTooltipPP').className =\n        ColourTextPre + CacheUpgrades[Game.UpgradesInStore[TooltipName].name].color;\n    }\n    const timeColour = GetTimeColour(\n      (TooltipPrice - (Game.cookies + GetWrinkConfigBank())) / GetCPS(),\n    );\n    l('CMTooltipTime').textContent = timeColour.text;\n    if (\n      timeColour.text === 'Done!' &&\n      Game.cookies < Game.UpgradesInStore[TooltipName].getPrice()\n    ) {\n      l('CMTooltipTime').textContent = `${timeColour.text} (with Wrink)`;\n    } else l('CMTooltipTime').textContent = timeColour.text;\n    l('CMTooltipTime').className = ColourTextPre + timeColour.color;\n\n    // Add extra info to Chocolate egg tooltip\n    if (Game.UpgradesInStore[TooltipName].name === 'Chocolate egg') {\n      l('CMTooltipBorder').lastChild.style.marginBottom = '4px';\n      l('CMTooltipBorder').appendChild(\n        Create.TooltipCreateHeader('Cookies to be gained (Currently/Max)'),\n      );\n      const chocolate = document.createElement('div');\n      chocolate.style.color = 'white';\n      chocolate.textContent = `${Beautify(Game.cookies * 0.05)} / ${Beautify(CacheLastChoEgg)}`;\n      l('CMTooltipBorder').appendChild(chocolate);\n    }\n  } else l('CMTooltipArea').style.display = 'none';\n}\n","import { CMOptions } from '../../../Config/VariablesAndData';\nimport GetLumpColour from '../../HelperFunctions/GetLumpColour';\nimport { ColourTextPre } from '../../VariablesAndData';\nimport * as Create from '../CreateTooltip';\n/**\n * This function adds extra info to the Sugar Lump tooltip\n * It adds to the additional information to l('CMTooltipArea')\n */\nexport default function SugarLump() {\n  if (CMOptions.TooltipLump === 1) {\n    const tooltipBox = l('CMTooltipBorder');\n\n    tooltipBox.appendChild(Create.TooltipCreateHeader('Current Sugar Lump'));\n\n    const lumpType = document.createElement('div');\n    lumpType.id = 'CMTooltipTime';\n    tooltipBox.appendChild(lumpType);\n    const lumpColour = GetLumpColour(Game.lumpCurrentType);\n    lumpType.textContent = lumpColour.text;\n    lumpType.className = ColourTextPre + lumpColour.color;\n  } else l('CMTooltipArea').style.display = 'none';\n}\n","import {\n  ColourGray,\n  ColourGreen,\n  ColourOrange,\n  ColourPurple,\n  ColourRed,\n  ColourYellow,\n} from '../VariablesAndData';\n\n/**\n * This function returns Name and Colour as object for sugar lump type that is given as input param.\n * It is called by CM.Disp.UpdateTooltipSugarLump()\n * @param \t{string} \t\t\t\ttype \t\t\tSugar Lump Type.\n * @returns {{string}, {string}}\ttext, color\t\tAn array containing the text and display-color of the sugar lump\n */\nexport default function GetLumpColour(type) {\n  if (type === 0) {\n    return { text: 'Normal', color: ColourGray };\n  }\n  if (type === 1) {\n    return { text: 'Bifurcated', color: ColourGreen };\n  }\n  if (type === 2) {\n    return { text: 'Golden', color: ColourYellow };\n  }\n  if (type === 3) {\n    return { text: 'Meaty', color: ColourOrange };\n  }\n  if (type === 4) {\n    return { text: 'Caramelized', color: ColourPurple };\n  }\n  return { text: 'Unknown Sugar Lump', color: ColourRed };\n}\n","import { CacheNoGoldSwitchCookiesPS } from '../../../Cache/VariablesAndData';\nimport { CMOptions } from '../../../Config/VariablesAndData';\nimport Beautify from '../../BeautifyAndFormatting/Beautify';\nimport GetTimeColour from '../../BeautifyAndFormatting/GetTimeColour';\nimport CalculateGrimoireRefillTime from '../../HelperFunctions/CalculateGrimoireRefillTime';\nimport GetWrinkConfigBank from '../../HelperFunctions/GetWrinkConfigBank';\nimport { ColourTextPre, TooltipName } from '../../VariablesAndData';\nimport * as Create from '../CreateTooltip';\n\n/**\n * This function adds extra info to the Grimoire tooltips\n * It adds to the additional information to l('CMTooltipArea')\n */\nexport default function Grimoire() {\n  const { minigame } = Game.Objects['Wizard tower'];\n  const spellCost = minigame.getSpellCost(minigame.spellsById[TooltipName]);\n\n  if (CMOptions.TooltipGrim === 1 && spellCost <= minigame.magicM) {\n    const tooltipBox = l('CMTooltipBorder');\n\n    // Time left till enough magic for spell\n    tooltipBox.appendChild(Create.TooltipCreateHeader('Time Left'));\n    const time = document.createElement('div');\n    time.id = 'CMTooltipTime';\n    tooltipBox.appendChild(time);\n    const timeColour = GetTimeColour(\n      CalculateGrimoireRefillTime(minigame.magic, minigame.magicM, spellCost),\n    );\n    time.textContent = timeColour.text;\n    time.className = ColourTextPre + timeColour.color;\n\n    // Time left untill magic spent is recovered\n    if (spellCost <= minigame.magic) {\n      tooltipBox.appendChild(Create.TooltipCreateHeader('Recover Time'));\n      const recover = document.createElement('div');\n      recover.id = 'CMTooltipRecover';\n      tooltipBox.appendChild(recover);\n      const recoverColour = GetTimeColour(\n        CalculateGrimoireRefillTime(\n          Math.max(0, minigame.magic - spellCost),\n          minigame.magicM,\n          minigame.magic,\n        ),\n      );\n      recover.textContent = recoverColour.text;\n      recover.className = ColourTextPre + recoverColour.color;\n    }\n\n    // Extra information on cookies gained when spell is Conjure Baked Goods (Name === 0)\n    if (TooltipName === '0') {\n      tooltipBox.appendChild(Create.TooltipCreateHeader('Cookies to be gained/lost'));\n      const conjure = document.createElement('div');\n      conjure.id = 'x';\n      tooltipBox.appendChild(conjure);\n      const reward = document.createElement('span');\n      reward.style.color = '#33FF00';\n      reward.textContent = Beautify(\n        Math.min(\n          (Game.cookies + GetWrinkConfigBank()) * 0.15,\n          CacheNoGoldSwitchCookiesPS * 60 * 30,\n        ),\n        2,\n      );\n      conjure.appendChild(reward);\n      const seperator = document.createElement('span');\n      seperator.textContent = ' / ';\n      conjure.appendChild(seperator);\n      const loss = document.createElement('span');\n      loss.style.color = 'red';\n      loss.textContent = Beautify(CacheNoGoldSwitchCookiesPS * 60 * 15, 2);\n      conjure.appendChild(loss);\n    }\n\n    l('CMTooltipArea').appendChild(tooltipBox);\n  } else l('CMTooltipArea').style.display = 'none';\n}\n","import { CMOptions } from '../../../Config/VariablesAndData';\nimport Beautify from '../../BeautifyAndFormatting/Beautify';\nimport { TooltipName } from '../../VariablesAndData';\nimport * as Create from '../CreateTooltip';\n\n/**\n * This function adds extra info to the Garden plots tooltips\n * It adds to the additional information to l('CMTooltipArea')\n */\nexport default function GardenPlots() {\n  const { minigame } = Game.Objects.Farm;\n  if (CMOptions.TooltipPlots && minigame.plot[TooltipName[1]][TooltipName[0]][0] !== 0) {\n    const mature =\n      minigame.plot[TooltipName[1]][TooltipName[0]][1] >\n      minigame.plantsById[minigame.plot[TooltipName[1]][TooltipName[0]][0] - 1].mature;\n    const plantName =\n      minigame.plantsById[minigame.plot[TooltipName[1]][TooltipName[0]][0] - 1].name;\n    l('CMTooltipBorder').appendChild(Create.TooltipCreateHeader('Reward (Current / Maximum)'));\n    const reward = document.createElement('div');\n    reward.id = 'CMTooltipPlantReward';\n    l('CMTooltipBorder').appendChild(reward);\n    if (plantName === 'Bakeberry') {\n      l('CMTooltipPlantReward').textContent = `${\n        mature ? Beautify(Math.min(Game.cookies * 0.03, Game.cookiesPs * 60 * 30)) : '0'\n      } / ${Beautify(Game.cookiesPs * 60 * 30)}`;\n    } else if (plantName === 'Chocoroot' || plantName === 'White chocoroot') {\n      l('CMTooltipPlantReward').textContent = `${\n        mature ? Beautify(Math.min(Game.cookies * 0.03, Game.cookiesPs * 60 * 3)) : '0'\n      } / ${Beautify(Game.cookiesPs * 60 * 3)}`;\n    } else if (plantName === 'Queenbeet') {\n      l('CMTooltipPlantReward').textContent = `${\n        mature ? Beautify(Math.min(Game.cookies * 0.04, Game.cookiesPs * 60 * 60)) : '0'\n      } / ${Beautify(Game.cookiesPs * 60 * 60)}`;\n    } else if (plantName === 'Duketater') {\n      l('CMTooltipPlantReward').textContent = `${\n        mature ? Beautify(Math.min(Game.cookies * 0.08, Game.cookiesPs * 60 * 120)) : '0'\n      } / ${Beautify(Game.cookiesPs * 60 * 120)}`;\n    } else l('CMTooltipArea').style.display = 'none';\n  } else l('CMTooltipArea').style.display = 'none';\n}\n","import { CMOptions } from '../../../Config/VariablesAndData';\nimport Beautify from '../../BeautifyAndFormatting/Beautify';\nimport * as Create from '../CreateTooltip';\n\n/**\n * This function adds extra info to the Garden Harvest All tooltip\n * It is called when the Harvest All tooltip is created or refreshed by CM.Disp.UpdateTooltip()\n * It adds to the additional information to l('CMTooltipArea')\n */\nexport default function HarvestAll() {\n  const { minigame } = Game.Objects.Farm;\n  if (CMOptions.TooltipLump) {\n    l('CMTooltipBorder').appendChild(Create.TooltipCreateHeader('Cookies gained from harvesting:'));\n    let totalGain = 0;\n    let mortal = 0;\n    if (Game.keys[16] && Game.keys[17]) mortal = 1;\n    for (let y = 0; y < 6; y++) {\n      for (let x = 0; x < 6; x++) {\n        if (minigame.plot[y][x][0] >= 1) {\n          const tile = minigame.plot[y][x];\n          const me = minigame.plantsById[tile[0] - 1];\n          const plantName = me.name;\n\n          let count = true;\n          if (mortal && me.immortal) count = false;\n          if (tile[1] < me.matureBase) count = false;\n          if (count && plantName === 'Bakeberry') {\n            totalGain += Math.min(Game.cookies * 0.03, Game.cookiesPs * 60 * 30);\n          } else if ((count && plantName === 'Chocoroot') || plantName === 'White chocoroot') {\n            totalGain += Math.min(Game.cookies * 0.03, Game.cookiesPs * 60 * 3);\n          } else if (count && plantName === 'Queenbeet') {\n            totalGain += Math.min(Game.cookies * 0.04, Game.cookiesPs * 60 * 60);\n          } else if (count && plantName === 'Duketater') {\n            totalGain += Math.min(Game.cookies * 0.08, Game.cookiesPs * 60 * 120);\n          }\n        }\n      }\n    }\n    l('CMTooltipBorder').appendChild(document.createTextNode(Beautify(totalGain)));\n  } else l('CMTooltipArea').style.display = 'none';\n}\n","import { CacheWrinklersFattest, CacheWrinklersNormal } from '../../../Cache/VariablesAndData';\nimport Beautify from '../../BeautifyAndFormatting/Beautify';\nimport { TooltipName } from '../../VariablesAndData';\nimport * as Create from '../CreateTooltip';\n\n/**\n * This function adds extra info to the wrinkler button tooltip\n * It adds to the additional information to l('CMTooltipArea')\n */\nexport default function WrinklerButton() {\n  l('tooltip').innerHTML = '';\n  l('tooltip').appendChild(Create.TooltipCreateHeader('Reward:'));\n\n  const WrinklerReward = document.createElement('div');\n  WrinklerReward.id = 'CMWrinklerReward';\n  if (TooltipName === 'PopAllNormal') {\n    WrinklerReward.textContent = Beautify(CacheWrinklersNormal);\n  } else if (TooltipName === 'PopFattest') {\n    WrinklerReward.textContent = Beautify(CacheWrinklersFattest[0]);\n  }\n\n  l('tooltip').appendChild(WrinklerReward);\n}\n","import { CacheGods } from '../../../Cache/VariablesAndData';\nimport { CMOptions } from '../../../Config/VariablesAndData';\nimport Beautify from '../../BeautifyAndFormatting/Beautify';\nimport { TooltipName, TooltipType } from '../../VariablesAndData';\nimport * as Create from '../CreateTooltip';\n\n/**\n * This function adds extra info to the Pantheon Gods tooltip\n * It is called when the Harvest All tooltip is created or refreshed by CM.Disp.UpdateTooltip()\n * It adds to the additional information to l('CMTooltipArea')\n */\nexport default function PantheonGods() {\n  if (CMOptions.TooltipPantheon === 1) {\n    const tooltipBox = l('CMTooltipBorder');\n    let GodID;\n    if (TooltipType === 'pas') GodID = TooltipName[1];\n    else GodID = TooltipName;\n\n    // Time left till enough magic for spell\n    tooltipBox.appendChild(Create.TooltipCreateHeader('Effect in position 1:'));\n    const cps1 = document.createElement('div');\n    cps1.id = 'CMPantheonTooltipPosition1';\n    if (CacheGods[GodID][0] !== 0) {\n      cps1.textContent = Beautify(CacheGods[GodID][0]);\n      const increase = Math.round((CacheGods[GodID][0] / Game.cookiesPs) * 10000);\n      if (Number.isFinite(increase) && increase !== 0) {\n        cps1.textContent += ` (${increase / 100}% of income)`;\n      } else {\n        cps1.textContent += ` (<0${CMOptions.ScaleSeparator ? ',' : '.'}01% of income)`;\n      }\n    } else cps1.textContent = 'No effect to CPS';\n    tooltipBox.appendChild(cps1);\n\n    tooltipBox.appendChild(Create.TooltipCreateHeader('Effect in position 2:'));\n    const cps2 = document.createElement('div');\n    cps2.id = 'CMPantheonTooltipPosition2';\n    if (CacheGods[GodID][1] !== 0) {\n      cps2.textContent = Beautify(CacheGods[GodID][1]);\n      const increase = Math.round((CacheGods[GodID][1] / Game.cookiesPs) * 10000);\n      if (Number.isFinite(increase) && increase !== 0) {\n        cps2.textContent += ` (${increase / 100}% of income)`;\n      } else {\n        cps2.textContent += ` (<0${CMOptions.ScaleSeparator ? ',' : '.'}01% of income)`;\n      }\n    } else cps2.textContent = 'No effect to CPS';\n    tooltipBox.appendChild(cps2);\n\n    tooltipBox.appendChild(Create.TooltipCreateHeader('Effect in position 3:'));\n    const cps3 = document.createElement('div');\n    cps3.id = 'CMPantheonTooltipPosition2';\n    if (CacheGods[GodID][2] !== 0) {\n      cps3.textContent = Beautify(CacheGods[GodID][2]);\n      const increase = Math.round((CacheGods[GodID][2] / Game.cookiesPs) * 10000);\n      if (Number.isFinite(increase) && increase !== 0) {\n        cps3.textContent += ` (${increase / 100}% of income)`;\n      } else {\n        cps3.textContent += ` (<0${CMOptions.ScaleSeparator ? ',' : '.'}01% of income)`;\n      }\n    } else cps3.textContent = 'No effect to CPS';\n    tooltipBox.appendChild(cps3);\n\n    l('CMTooltipArea').appendChild(tooltipBox);\n  } else l('CMTooltipArea').style.display = 'none';\n}\n","import GetCPSBuffMult from '../../../Cache/CPS/GetCPSBuffMult';\nimport { CacheEdifice, CacheLucky } from '../../../Cache/VariablesAndData';\nimport ToggleToolWarnPos from '../../../Config/Toggles/ToggleToolWarnPos';\nimport { CMOptions } from '../../../Config/VariablesAndData';\nimport Beautify from '../../BeautifyAndFormatting/Beautify';\nimport FormatTime from '../../BeautifyAndFormatting/FormatTime';\nimport GetCPS from '../../HelperFunctions/GetCPS';\nimport GetWrinkConfigBank from '../../HelperFunctions/GetWrinkConfigBank';\nimport { TooltipBonusIncome, TooltipPrice, TooltipType } from '../../VariablesAndData';\nimport * as Create from '../CreateTooltip';\n\n/**\n * This function updates the warnings section of the building and upgrade tooltips\n */\nexport default function Warnings() {\n  if (TooltipType === 'b' || TooltipType === 'u') {\n    if (document.getElementById('CMDispTooltipWarningParent') === null) {\n      l('tooltipAnchor').appendChild(Create.TooltipCreateWarningSection());\n      ToggleToolWarnPos();\n    }\n\n    if (CMOptions.ToolWarnPos === 0) l('CMDispTooltipWarningParent').style.right = '0px';\n    else l('CMDispTooltipWarningParent').style.top = `${l('tooltip').offsetHeight}px`;\n\n    l('CMDispTooltipWarningParent').style.width = `${l('tooltip').offsetWidth - 6}px`;\n\n    const amount = Game.cookies + GetWrinkConfigBank() - TooltipPrice;\n    const bonusIncomeUsed = CMOptions.ToolWarnBon ? TooltipBonusIncome : 0;\n    let limitLucky = CacheLucky;\n    if (CMOptions.ToolWarnBon === 1) {\n      let bonusNoFren = TooltipBonusIncome;\n      bonusNoFren /= GetCPSBuffMult();\n      limitLucky += (bonusNoFren * 60 * 15) / 0.15;\n    }\n\n    if (CMOptions.ToolWarnLucky === 1) {\n      if (amount < limitLucky && (TooltipType !== 'b' || Game.buyMode === 1)) {\n        l('CMDispTooltipWarnLucky').style.display = '';\n        l('CMDispTooltipWarnLuckyText').textContent = `${Beautify(\n          limitLucky - amount,\n        )} (${FormatTime((limitLucky - amount) / (GetCPS() + bonusIncomeUsed))})`;\n      } else l('CMDispTooltipWarnLucky').style.display = 'none';\n    } else l('CMDispTooltipWarnLucky').style.display = 'none';\n\n    if (CMOptions.ToolWarnLuckyFrenzy === 1) {\n      const limitLuckyFrenzy = limitLucky * 7;\n      if (amount < limitLuckyFrenzy && (TooltipType !== 'b' || Game.buyMode === 1)) {\n        l('CMDispTooltipWarnLuckyFrenzy').style.display = '';\n        l('CMDispTooltipWarnLuckyFrenzyText').textContent = `${Beautify(\n          limitLuckyFrenzy - amount,\n        )} (${FormatTime((limitLuckyFrenzy - amount) / (GetCPS() + bonusIncomeUsed))})`;\n      } else l('CMDispTooltipWarnLuckyFrenzy').style.display = 'none';\n    } else l('CMDispTooltipWarnLuckyFrenzy').style.display = 'none';\n\n    if (CMOptions.ToolWarnConjure === 1) {\n      const limitConjure = limitLucky * 2;\n      if (amount < limitConjure && (TooltipType !== 'b' || Game.buyMode === 1)) {\n        l('CMDispTooltipWarnConjure').style.display = '';\n        l('CMDispTooltipWarnConjureText').textContent = `${Beautify(\n          limitConjure - amount,\n        )} (${FormatTime((limitConjure - amount) / (GetCPS() + bonusIncomeUsed))})`;\n      } else l('CMDispTooltipWarnConjure').style.display = 'none';\n    } else l('CMDispTooltipWarnConjure').style.display = 'none';\n\n    if (CMOptions.ToolWarnConjureFrenzy === 1) {\n      const limitConjureFrenzy = limitLucky * 2 * 7;\n      if (amount < limitConjureFrenzy && (TooltipType !== 'b' || Game.buyMode === 1)) {\n        l('CMDispTooltipWarnConjureFrenzy').style.display = '';\n        l('CMDispTooltipWarnConjureFrenzyText').textContent = `${Beautify(\n          limitConjureFrenzy - amount,\n        )} (${FormatTime((limitConjureFrenzy - amount) / (GetCPS() + bonusIncomeUsed))})`;\n      } else l('CMDispTooltipWarnConjureFrenzy').style.display = 'none';\n    } else l('CMDispTooltipWarnConjureFrenzy').style.display = 'none';\n\n    if (CMOptions.ToolWarnEdifice === 1 && Game.Objects['Wizard tower'].minigameLoaded) {\n      if (CacheEdifice && amount < CacheEdifice && (TooltipType !== 'b' || Game.buyMode === 1)) {\n        l('CMDispTooltipWarnEdifice').style.display = '';\n        l('CMDispTooltipWarnEdificeText').textContent = `${Beautify(\n          CacheEdifice - amount,\n        )} (${FormatTime((CacheEdifice - amount) / (GetCPS() + bonusIncomeUsed))})`;\n      } else l('CMDispTooltipWarnEdifice').style.display = 'none';\n    } else l('CMDispTooltipWarnEdifice').style.display = 'none';\n\n    if (CMOptions.ToolWarnUser > 0) {\n      if (\n        amount < CMOptions.ToolWarnUser * GetCPS() &&\n        (TooltipType !== 'b' || Game.buyMode === 1)\n      ) {\n        l('CMDispTooltipWarnUser').style.display = '';\n        // Need to update tooltip text dynamically\n        l(\n          'CMDispTooltipWarnUser',\n        ).children[0].textContent = `Purchase of this item will put you under the number of Cookies equal to ${CMOptions.ToolWarnUser} seconds of CPS`;\n        l('CMDispTooltipWarnUserText').textContent = `${Beautify(\n          CMOptions.ToolWarnUser * GetCPS() - amount,\n        )} (${FormatTime(\n          (CMOptions.ToolWarnUser * GetCPS() - amount) / (GetCPS() + bonusIncomeUsed),\n        )})`;\n      } else l('CMDispTooltipWarnUser').style.display = 'none';\n    } else l('CMDispTooltipWarnUser').style.display = 'none';\n  } else if (l('CMDispTooltipWarningParent') !== null) {\n    l('CMDispTooltipWarningParent').remove();\n  }\n}\n","import ToggleWrinklerButtons from '../Config/Toggles/ToggleWrinklerButtons';\nimport { CMOptions } from '../Config/VariablesAndData';\nimport Beautify from './BeautifyAndFormatting/Beautify';\nimport UpdateBuildings from './BuildingsUpgrades/Buildings';\nimport UpdateUpgradeSectionsHeight from './BuildingsUpgrades/UpdateUpgradeSectionsHeight';\nimport UpdateUpgrades from './BuildingsUpgrades/Upgrades';\nimport { UpdateBotBar } from './InfoBars/BottomBar';\nimport { UpdateTimerBar } from './InfoBars/TimerBar';\nimport RefreshMenu from './MenuSections/Refreshmenu';\nimport UpdateTooltips from './Tooltips/UpdateTooltips';\nimport { CheckWrinklerTooltip, UpdateWrinklerTooltip } from './Tooltips/WrinklerTooltips';\n\n/**\n * This function handles all custom drawing for the Game.Draw() function.\n * It is hooked on 'draw' by CM.RegisterHooks()\n */\nexport default function CMDrawHook() {\n  // Draw autosave timer in stats menu, this must be done here to make it count down correctly\n  if (\n    Game.prefs.autosave &&\n    Game.drawT % 10 === 0 && // with autosave ON and every 10 ticks\n    Game.onMenu === 'stats' &&\n    CMOptions.Stats // while being on the stats menu only\n  ) {\n    const timer = document.getElementById('CMStatsAutosaveTimer');\n    if (timer) {\n      timer.innerText = Game.sayTime(Game.fps * 60 - (Game.T % (Game.fps * 60)), 4);\n    }\n  }\n\n  // Update colors\n  UpdateBuildings();\n  UpdateUpgrades();\n  UpdateUpgradeSectionsHeight();\n\n  // Redraw timers\n  UpdateTimerBar();\n\n  // Update Bottom Bar\n  UpdateBotBar();\n\n  // Update Tooltip\n  UpdateTooltips();\n\n  // Update Wrinkler Tooltip\n  CheckWrinklerTooltip();\n  UpdateWrinklerTooltip();\n\n  // Change menu refresh interval\n  RefreshMenu();\n\n  // Update display of wrinkler buttons, this checks if Elder Pledge has been bought and if they should be disabled\n  ToggleWrinklerButtons();\n\n  // Replace Cookies counter because Orteil uses very weird code to \"pad\" it...\n  if (CMOptions.Scale) {\n    let str = l('cookies').innerHTML.replace(/.*(?=<br>)/i, Beautify(Game.cookies));\n    if (Game.prefs.monospace) str = `<span class=\"monospace\">${str}</span>`;\n    l('cookies').innerHTML = str;\n  }\n}\n","/** Functions related to the Timer Bar */\n\nimport { UpdateBotTimerBarPosition } from '../../Config/SpecificToggles';\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport {\n  BuffColours,\n  ColourBackPre,\n  ColourGray,\n  ColourOrange,\n  ColourPurple,\n  LastNumberOfTimers,\n} from '../VariablesAndData';\nimport { CreateTimer } from './CreateDOMElements';\n\n/**\n * This function creates the TimerBar and appends it to l('wrapper')\n */\nexport function CreateTimerBar() {\n  const TimerBar = document.createElement('div');\n  TimerBar.id = 'CMTimerBar';\n  TimerBar.style.position = 'absolute';\n  TimerBar.style.display = 'none';\n  TimerBar.style.height = '0px';\n  TimerBar.style.fontSize = '10px';\n  TimerBar.style.fontWeight = 'bold';\n  TimerBar.style.backgroundColor = 'black';\n\n  // Create standard Autosave bar\n  const CMTimerBarAutosave = CreateTimer('CMTimerBarAutosave', 'Autosave', [\n    { id: 'CMTimerBarAutosaveBar', color: ColourPurple },\n  ]);\n  TimerBar.appendChild(CMTimerBarAutosave);\n\n  // Create standard Golden Cookie bar\n  const CMTimerBarGC = CreateTimer('CMTimerBarGC', 'Next Cookie', [\n    { id: 'CMTimerBarGCMinBar', color: ColourGray },\n    { id: 'CMTimerBarGCBar', color: ColourPurple },\n  ]);\n  TimerBar.appendChild(CMTimerBarGC);\n\n  // Create standard Reindeer bar\n  const CMTimerBarRen = CreateTimer('CMTimerBarRen', 'Next Reindeer', [\n    { id: 'CMTimerBarRenMinBar', color: ColourGray },\n    { id: 'CMTimerBarRenBar', color: ColourOrange },\n  ]);\n  TimerBar.appendChild(CMTimerBarRen);\n  const TimerBarBuffTimers = document.createElement('div');\n  TimerBarBuffTimers.id = 'CMTimerBarBuffTimers';\n  TimerBar.appendChild(TimerBarBuffTimers);\n\n  l('wrapper').appendChild(TimerBar);\n}\n\n/**\n * This function updates indivudual timers in the timer bar\n */\nexport function UpdateTimerBar() {\n  if (CMOptions.TimerBar === 1) {\n    // label width: 113, timer width: 30, div margin: 20\n    const maxWidthTwoBar = l('CMTimerBar').offsetWidth - 163;\n    // label width: 113, div margin: 20, calculate timer width at runtime\n    const maxWidthOneBar = l('CMTimerBar').offsetWidth - 133;\n    let numberOfTimers = 0;\n\n    if (CMOptions.AutosaveTimerBar && Game.prefs.autosave) {\n      const timeTillNextAutosave =\n        (Game.fps * 60 - (Game.OnAscend ? 0 : Game.T % (Game.fps * 60))) / Game.fps;\n      l('CMTimerBarAutosave').style.display = '';\n      l('CMTimerBarAutosaveBar').style.width = `${Math.round(\n        (timeTillNextAutosave *\n          (maxWidthOneBar - Math.ceil(timeTillNextAutosave).toString().length * 8)) /\n          60,\n      )}px`;\n      if (CMOptions.TimerBarOverlay >= 1) {\n        l('CMTimerBarAutosaveBar').textContent = Math.ceil(timeTillNextAutosave);\n      } else l('CMTimerBarAutosaveBar').textContent = '';\n      l('CMTimerBarAutosaveTime').textContent = Math.ceil(timeTillNextAutosave);\n      numberOfTimers += 1;\n    } else l('CMTimerBarAutosave').style.display = 'none';\n\n    // Regulates visibility of Golden Cookie timer\n    if (Game.shimmerTypes.golden.spawned === 0 && !Game.Has('Golden switch [off]')) {\n      l('CMTimerBarGC').style.display = '';\n      l('CMTimerBarGCMinBar').style.width = `${Math.round(\n        (Math.max(0, Game.shimmerTypes.golden.minTime - Game.shimmerTypes.golden.time) *\n          maxWidthTwoBar) /\n          Game.shimmerTypes.golden.maxTime,\n      )}px`;\n      if (CMOptions.TimerBarOverlay >= 1)\n        l('CMTimerBarGCMinBar').textContent = Math.ceil(\n          (Game.shimmerTypes.golden.minTime - Game.shimmerTypes.golden.time) / Game.fps,\n        );\n      else l('CMTimerBarGCMinBar').textContent = '';\n      if (Game.shimmerTypes.golden.minTime === Game.shimmerTypes.golden.maxTime) {\n        l('CMTimerBarGCMinBar').style.borderTopRightRadius = '10px';\n        l('CMTimerBarGCMinBar').style.borderBottomRightRadius = '10px';\n      } else {\n        l('CMTimerBarGCMinBar').style.borderTopRightRadius = '';\n        l('CMTimerBarGCMinBar').style.borderBottomRightRadius = '';\n      }\n      l('CMTimerBarGCBar').style.width = `${Math.round(\n        (Math.min(\n          Game.shimmerTypes.golden.maxTime - Game.shimmerTypes.golden.minTime,\n          Game.shimmerTypes.golden.maxTime - Game.shimmerTypes.golden.time,\n        ) *\n          maxWidthTwoBar) /\n          Game.shimmerTypes.golden.maxTime,\n      )}px`;\n      if (CMOptions.TimerBarOverlay >= 1)\n        l('CMTimerBarGCBar').textContent = Math.ceil(\n          Math.min(\n            Game.shimmerTypes.golden.maxTime - Game.shimmerTypes.golden.minTime,\n            Game.shimmerTypes.golden.maxTime - Game.shimmerTypes.golden.time,\n          ) / Game.fps,\n        );\n      else l('CMTimerBarGCBar').textContent = '';\n      l('CMTimerBarGCTime').textContent = Math.ceil(\n        (Game.shimmerTypes.golden.maxTime - Game.shimmerTypes.golden.time) / Game.fps,\n      );\n      numberOfTimers += 1;\n    } else l('CMTimerBarGC').style.display = 'none';\n\n    // Regulates visibility of Reindeer timer\n    if (Game.season === 'christmas' && Game.shimmerTypes.reindeer.spawned === 0) {\n      l('CMTimerBarRen').style.display = '';\n      l('CMTimerBarRenMinBar').style.width = `${Math.round(\n        (Math.max(0, Game.shimmerTypes.reindeer.minTime - Game.shimmerTypes.reindeer.time) *\n          maxWidthTwoBar) /\n          Game.shimmerTypes.reindeer.maxTime,\n      )}px`;\n      if (CMOptions.TimerBarOverlay >= 1)\n        l('CMTimerBarRenMinBar').textContent = Math.ceil(\n          (Game.shimmerTypes.reindeer.minTime - Game.shimmerTypes.reindeer.time) / Game.fps,\n        );\n      else l('CMTimerBarRenMinBar').textContent = '';\n      l('CMTimerBarRenBar').style.width = `${Math.round(\n        (Math.min(\n          Game.shimmerTypes.reindeer.maxTime - Game.shimmerTypes.reindeer.minTime,\n          Game.shimmerTypes.reindeer.maxTime - Game.shimmerTypes.reindeer.time,\n        ) *\n          maxWidthTwoBar) /\n          Game.shimmerTypes.reindeer.maxTime,\n      )}px`;\n      if (CMOptions.TimerBarOverlay >= 1)\n        l('CMTimerBarRenBar').textContent = Math.ceil(\n          Math.min(\n            Game.shimmerTypes.reindeer.maxTime - Game.shimmerTypes.reindeer.minTime,\n            Game.shimmerTypes.reindeer.maxTime - Game.shimmerTypes.reindeer.time,\n          ) / Game.fps,\n        );\n      else l('CMTimerBarRenBar').textContent = '';\n      l('CMTimerBarRenTime').textContent = Math.ceil(\n        (Game.shimmerTypes.reindeer.maxTime - Game.shimmerTypes.reindeer.time) / Game.fps,\n      );\n      numberOfTimers += 1;\n    } else {\n      l('CMTimerBarRen').style.display = 'none';\n    }\n\n    // On every frame all buff-timers are deleted and re-created\n    const BuffTimerBars = {};\n    l('CMTimerBarBuffTimers').innerHTML = '';\n    Object.keys(Game.buffs).forEach((i) => {\n      if (Game.buffs[i]) {\n        const timer = CreateTimer(Game.buffs[i].name, Game.buffs[i].name, [\n          { id: `${Game.buffs[i].name}Bar` },\n        ]);\n        timer.style.display = '';\n        let classColour = '';\n        // Gives specific timers specific colors\n        if (typeof BuffColours[Game.buffs[i].name] !== 'undefined') {\n          classColour = BuffColours[Game.buffs[i].name];\n        } else classColour = ColourPurple;\n        timer.lastChild.children[1].className = ColourBackPre + classColour;\n        timer.lastChild.children[1].style.color = 'black';\n        if (CMOptions.TimerBarOverlay === 2)\n          timer.lastChild.children[1].textContent = `${Math.round(\n            100 * (Game.buffs[i].time / Game.buffs[i].maxTime),\n          )}%`;\n        else timer.lastChild.children[1].textContent = '';\n        timer.lastChild.children[1].style.width = `${Math.round(\n          (Game.buffs[i].time *\n            (maxWidthOneBar - Math.ceil(Game.buffs[i].time / Game.fps).toString().length * 8)) /\n            Game.buffs[i].maxTime,\n        )}px`;\n        timer.lastChild.children[2].textContent = Math.ceil(Game.buffs[i].time / Game.fps);\n        numberOfTimers += 1;\n        BuffTimerBars[Game.buffs[i].name] = timer;\n      }\n    });\n    Object.keys(BuffTimerBars).forEach((i) => {\n      l('CMTimerBarBuffTimers').appendChild(BuffTimerBars[i]);\n    });\n\n    if (numberOfTimers !== 0) {\n      l('CMTimerBar').style.height = `${numberOfTimers * 12 + 2}px`;\n    }\n    if (LastNumberOfTimers !== numberOfTimers) {\n      LastNumberOfTimers = numberOfTimers;\n      UpdateBotTimerBarPosition();\n    }\n  }\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport { SimObjects } from '../../Sim/VariablesAndData';\nimport Beautify from '../BeautifyAndFormatting/Beautify';\nimport {\n  TooltipWrinkler,\n  TooltipWrinklerArea,\n  TooltipWrinklerBeingShown,\n} from '../VariablesAndData';\n\n/**\n * This function checks and create a tooltip for the wrinklers\n * It is called by CM.Disp.Draw()\n * As wrinklers are not appended to the DOM we us a different system than for other tooltips\n */\nexport function CheckWrinklerTooltip() {\n  if (CMOptions.TooltipWrink === 1 && TooltipWrinklerArea === 1) {\n    // Latter is set by CM.Main.AddWrinklerAreaDetect\n    let showingTooltip = false;\n    Object.keys(Game.wrinklers).forEach((i) => {\n      const me = Game.wrinklers[i];\n      if (me.phase > 0 && me.selected) {\n        showingTooltip = true;\n        if (TooltipWrinklerBeingShown[i] === 0 || TooltipWrinklerBeingShown[i] === undefined) {\n          const placeholder = document.createElement('div');\n          const wrinkler = document.createElement('div');\n          wrinkler.style.minWidth = '120px';\n          wrinkler.style.marginBottom = '4px';\n          const div = document.createElement('div');\n          div.style.textAlign = 'center';\n          div.id = 'CMTooltipWrinkler';\n          wrinkler.appendChild(div);\n          placeholder.appendChild(wrinkler);\n          Game.tooltip.draw(this, escape(placeholder.innerHTML));\n          TooltipWrinkler = i;\n          TooltipWrinklerBeingShown[i] = 1;\n        }\n      } else {\n        TooltipWrinklerBeingShown[i] = 0;\n      }\n    });\n    if (!showingTooltip) {\n      Game.tooltip.hide();\n    }\n  }\n}\n\n/**\n * This function updates the amount to be displayed by the wrinkler tooltip created by CM.Disp.CheckWrinklerTooltip()\n * It is called by CM.Disp.Draw()\n * As wrinklers are not appended to the DOM we us a different system than for other tooltips\n */\nexport function UpdateWrinklerTooltip() {\n  if (CMOptions.TooltipWrink === 1 && l('CMTooltipWrinkler') !== null) {\n    let { sucked } = Game.wrinklers[TooltipWrinkler];\n    let toSuck = 1.1;\n    if (Game.Has('Sacrilegious corruption')) toSuck *= 1.05;\n    if (Game.wrinklers[TooltipWrinkler].type === 1) toSuck *= 3; // Shiny wrinklers\n    sucked *= toSuck;\n    if (Game.Has('Wrinklerspawn')) sucked *= 1.05;\n    if (SimObjects.Temple.minigameLoaded) {\n      const godLvl = Game.hasGod('scorn');\n      if (godLvl === 1) sucked *= 1.15;\n      else if (godLvl === 2) sucked *= 1.1;\n      else if (godLvl === 3) sucked *= 1.05;\n    }\n    l('CMTooltipWrinkler').textContent = Beautify(sucked);\n  }\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\n\n/**\n * This function refreshes the stats page, CM.Options.UpStats determines the rate at which that happens\n * It is called by CM.Disp.Draw()\n */\nexport default function RefreshMenu() {\n  if (\n    CMOptions.UpStats &&\n    Game.onMenu === 'stats' &&\n    (Game.drawT - 1) % (Game.fps * 5) !== 0 &&\n    (Game.drawT - 1) % Game.fps === 0\n  )\n    Game.UpdateMenu();\n}\n","import { CacheAverageCookiesFromClicks } from '../Cache/VariablesAndData';\n\nexport default function CMClickHook() {\n  // Add cookies from click to array that stores average\n  CacheAverageCookiesFromClicks.addLatest(Game.computedMouseCps);\n}\n","import { ClickTimes, CookieTimes } from '../../Disp/VariablesAndData';\nimport {\n  ChoEggDiff, // eslint-disable-line no-unused-vars\n  ClicksDiff, // eslint-disable-line no-unused-vars\n  CookiesDiff, // eslint-disable-line no-unused-vars\n  WrinkDiff, // eslint-disable-line no-unused-vars\n  WrinkFattestDiff, // eslint-disable-line no-unused-vars\n} from '../VariablesAndData';\n\n/**\n * @class\n * @classdesc \tThis is a class used to store values used to calculate average over time (mostly cps)\n * @var\t\t\t{number}\t\t\t\tmaxLength\tThe maximum length of the value-storage\n * @var\t\t\t{[]}\t\t\t\t\tqueue\t\tThe values stored\n * @method\t\taddLatest(newValue)\t\tAppends newValue to the value storage\n * @method\t\tcalcAverage(timePeriod)\tReturns the average over the specified timeperiod\n */\nexport class CMAvgQueue {\n  constructor(maxLength) {\n    this.maxLength = maxLength;\n    this.queue = [];\n  }\n\n  addLatest(newValue) {\n    if (this.queue.push(newValue) > this.maxLength) {\n      this.queue.shift();\n    }\n  }\n\n  /**\n   * This functions returns the average of the values in the queue\n   * @param \t{number}\ttimePeriod\tThe period in seconds to computer average over\n   * @returns {number}\tret\t\t\tThe average\n   */\n  calcAverage(timePeriod) {\n    let time = timePeriod;\n    if (time > this.maxLength) time = this.maxLength;\n    if (time > this.queue.length) time = this.queue.length;\n    let ret = 0;\n    for (let i = this.queue.length - 1; i >= 0 && i > this.queue.length - 1 - time; i--) {\n      ret += this.queue[i];\n    }\n    if (ret === 0) {\n      return 0;\n    }\n    return ret / time;\n  }\n\n  calcSum(timePeriod) {\n    let time = timePeriod;\n    if (time > this.maxLength) time = this.maxLength;\n    if (time > this.queue.length) time = this.queue.length;\n    if (time === 0) return 0;\n    return this.queue.slice(-time).reduce((a, b) => a + b, 0);\n  }\n}\n\n/**\n * This functions caches creates the CMAvgQueue used by CM.Cache.CacheAvgCPS() to calculate CPS\n * Called by CM.Cache.InitCache()\n */\nexport function InitCookiesDiff() {\n  CookiesDiff = new CMAvgQueue(CookieTimes[CookieTimes.length - 1]);\n  WrinkDiff = new CMAvgQueue(CookieTimes[CookieTimes.length - 1]);\n  WrinkFattestDiff = new CMAvgQueue(CookieTimes[CookieTimes.length - 1]);\n  ChoEggDiff = new CMAvgQueue(CookieTimes[CookieTimes.length - 1]);\n  ClicksDiff = new CMAvgQueue(ClickTimes[ClickTimes.length - 1]);\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport { ClickTimes, CookieTimes } from '../../Disp/VariablesAndData';\nimport {\n  CacheAverageClicks, // eslint-disable-line no-unused-vars\n  CacheAverageCPS,\n  CacheAverageGainBank,\n  CacheAverageGainChoEgg,\n  CacheAverageGainWrink,\n  CacheAverageGainWrinkFattest,\n  CacheAvgCPSWithChoEgg, // eslint-disable-line no-unused-vars\n  CacheLastChoEgg,\n  CacheLastClicks,\n  CacheLastCookies,\n  CacheLastCPSCheck,\n  CacheLastWrinkCookies,\n  CacheLastWrinkFattestCookies,\n  CacheRealCookiesEarned, // eslint-disable-line no-unused-vars\n  CacheSellForChoEgg,\n  CacheWrinklersFattest,\n  CacheWrinklersTotal,\n  ChoEggDiff,\n  ClicksDiff,\n  CookiesDiff,\n  WrinkDiff,\n  WrinkFattestDiff,\n} from '../VariablesAndData';\n\n/**\n * This functions caches two variables related average CPS and Clicks\n * It is called by CM.Cache.LoopCache()\n * @global\t{number}\tCM.Cache.RealCookiesEarned\tCookies earned including the Chocolate Egg\n * @global\t{number}\tCM.Cache.AvgCPS\t\t\t\tAverage cookies over time-period as defined by AvgCPSHist\n * @global\t{number}\tCM.Cache.AverageClicks\t\tAverage cookies from clicking over time-period as defined by AvgClicksHist\n * @global\t{number}\tCM.Cache.AvgCPSChoEgg\t\tAverage cookies from combination of normal CPS and average Chocolate Cookie CPS\n */\nexport default function CacheAvgCPS() {\n  const currDate = Math.floor(Date.now() / 1000);\n  // Only calculate every new second\n  if ((Game.T / Game.fps) % 1 === 0) {\n    let choEggTotal = Game.cookies + CacheSellForChoEgg;\n    if (Game.cpsSucked > 0) choEggTotal += CacheWrinklersTotal;\n    CacheRealCookiesEarned = Math.max(Game.cookiesEarned, choEggTotal);\n    choEggTotal *= 0.05;\n\n    // Add recent gains to AvgQueue's\n    const timeDiff = currDate - CacheLastCPSCheck;\n    const bankDiffAvg = Math.max(0, Game.cookies - CacheLastCookies) / timeDiff;\n    const wrinkDiffAvg = Math.max(0, CacheWrinklersTotal - CacheLastWrinkCookies) / timeDiff;\n    const wrinkFattestDiffAvg =\n      Math.max(0, CacheWrinklersFattest[0] - CacheLastWrinkFattestCookies) / timeDiff;\n    const choEggDiffAvg = Math.max(0, choEggTotal - CacheLastChoEgg) / timeDiff;\n    const clicksDiffAvg = (Game.cookieClicks - CacheLastClicks) / timeDiff;\n    for (let i = 0; i < timeDiff; i++) {\n      CookiesDiff.addLatest(bankDiffAvg);\n      WrinkDiff.addLatest(wrinkDiffAvg);\n      WrinkFattestDiff.addLatest(wrinkFattestDiffAvg);\n      ChoEggDiff.addLatest(choEggDiffAvg);\n      ClicksDiff.addLatest(clicksDiffAvg);\n    }\n\n    // Store current data for next loop\n    CacheLastCPSCheck = currDate;\n    CacheLastCookies = Game.cookies;\n    CacheLastWrinkCookies = CacheWrinklersTotal;\n    CacheLastWrinkFattestCookies = CacheWrinklersFattest[0];\n    CacheLastChoEgg = choEggTotal;\n    CacheLastClicks = Game.cookieClicks;\n\n    // Get average gain over period of cpsLength seconds\n    const cpsLength = CookieTimes[CMOptions.AvgCPSHist];\n    CacheAverageGainBank = CookiesDiff.calcAverage(cpsLength);\n    CacheAverageGainWrink = WrinkDiff.calcAverage(cpsLength);\n    CacheAverageGainWrinkFattest = WrinkFattestDiff.calcAverage(cpsLength);\n    CacheAverageGainChoEgg = ChoEggDiff.calcAverage(cpsLength);\n    CacheAverageCPS = CacheAverageGainBank;\n    if (CMOptions.CalcWrink === 1) CacheAverageCPS += CacheAverageGainWrink;\n    if (CMOptions.CalcWrink === 2) CacheAverageCPS += CacheAverageGainWrinkFattest;\n\n    const choEgg = Game.HasUnlocked('Chocolate egg') && !Game.Has('Chocolate egg');\n\n    if (choEgg || CMOptions.CalcWrink === 0) {\n      CacheAvgCPSWithChoEgg =\n        CacheAverageGainBank + CacheAverageGainWrink + (choEgg ? CacheAverageGainChoEgg : 0);\n    } else CacheAvgCPSWithChoEgg = CacheAverageCPS;\n\n    // eslint-disable-next-line no-unused-vars\n    CacheAverageClicks = ClicksDiff.calcAverage(ClickTimes[CMOptions.AvgClicksHist]);\n  }\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport GetWrinkConfigBank from '../../Disp/HelperFunctions/GetWrinkConfigBank';\nimport { ColourGray } from '../../Disp/VariablesAndData';\nimport {\n  CacheMinPP, // eslint-disable-line no-unused-vars\n  CacheMinPPBulk, // eslint-disable-line no-unused-vars\n  CacheObjects1,\n  CacheObjects10,\n  CacheObjects100,\n  CachePPArray,\n} from '../VariablesAndData';\nimport ColourOfPP from './ColourOfPP';\n\n/**\n * This functions caches the buildings of bulk-buy mode when PP is compared against optimal single-purchase building\n * It saves all date in CM.Cache.Objects...\n * It is called by CM.Cache.CacheBuildingsPP()\n */\nfunction CacheColour(target, amount) {\n  Object.keys(target).forEach((i) => {\n    if (CMOptions.PPRigidelMode && amount === 1) {\n      target[i].color = ColourGray; // eslint-disable-line no-param-reassign\n      return;\n    }\n    // eslint-disable-next-line no-param-reassign\n    target[i].color = ColourOfPP(target[i], Game.Objects[i].getSumPrice(amount));\n    // Colour based on excluding certain top-buildings\n    for (let j = 0; j < CMOptions.PPExcludeTop; j++) {\n      if (target[i].pp === CachePPArray[j][0]) target[i].color = ColourGray; // eslint-disable-line no-param-reassign\n    }\n  });\n}\n\nfunction CachePP(target, amount) {\n  Object.keys(target).forEach((i) => {\n    const price = Game.Objects[i].getSumPrice(amount);\n    if (Game.cookiesPs) {\n      target[i].pp = // eslint-disable-line no-param-reassign\n        Math.max(price - (Game.cookies + GetWrinkConfigBank()), 0) / Game.cookiesPs +\n        price / target[i].bonus;\n    } else target[i].pp = price / target[i].bonus; // eslint-disable-line no-param-reassign\n    if (!(CMOptions.PPRigidelMode && amount === 1))\n      CachePPArray.push([target[i].pp, amount, price]);\n  });\n}\n\n/**\n * This functions caches the PP of each building it saves all date in CM.Cache.Objects...\n * It is called by CM.Cache.CachePP()\n */\nexport default function CacheBuildingsPP() {\n  CacheMinPP = Infinity;\n  CachePPArray = [];\n  if (typeof CMOptions.PPExcludeTop === 'undefined') CMOptions.PPExcludeTop = 0; // Otherwise breaks during initialization\n\n  // Calculate PP and colors\n  CachePP(CacheObjects1, 1);\n  CachePP(CacheObjects10, 10);\n  CachePP(CacheObjects100, 100);\n\n  // Set CM.Cache.min to best non-excluded buidliung\n  CachePPArray.sort((a, b) => a[0] - b[0]);\n  let indexOfMin = CMOptions.PPExcludeTop;\n  if (CMOptions.PPOnlyConsiderBuyable) {\n    while (CachePPArray[indexOfMin][2] > Game.cookies) {\n      indexOfMin += 1;\n      if (CachePPArray.length === indexOfMin + 1) {\n        break;\n      }\n    }\n  }\n  CacheMinPP = CachePPArray[indexOfMin][0];\n  CacheMinPPBulk = CachePPArray[indexOfMin][1];\n\n  CacheColour(CacheObjects1, 1);\n  CacheColour(CacheObjects10, 10);\n  CacheColour(CacheObjects100, 100);\n}\n","/**\n * Section: Functions related to caching PP */\n\nimport { CacheObjects1, CacheObjects10, CacheObjects100, CacheUpgrades } from '../VariablesAndData';\nimport CacheBuildingsPP from './Building';\nimport CacheUpgradePP from './Upgrade';\n\n/**\n * This functions caches the PP of each building and upgrade and stores it in the cache\n * It is called by CM.Cache.LoopCache() and CM.Cache.InitCache()\n */\nexport default function CachePP() {\n  CacheBuildingsPP();\n  CacheUpgradePP();\n  window.CookieMonsterData.Objects1 = JSON.parse(JSON.stringify(CacheObjects1));\n  window.CookieMonsterData.Objects10 = JSON.parse(JSON.stringify(CacheObjects10));\n  window.CookieMonsterData.Objects100 = JSON.parse(JSON.stringify(CacheObjects100));\n  window.CookieMonsterData.Upgrades = [];\n  Object.entries(CacheUpgrades).forEach((i) => {\n    window.CookieMonsterData.Upgrades[i[0]] = JSON.parse(JSON.stringify(i[1]));\n  });\n}\n","import GetWrinkConfigBank from '../../Disp/HelperFunctions/GetWrinkConfigBank';\nimport { CacheUpgrades } from '../VariablesAndData';\nimport ColourOfPP from './ColourOfPP';\n\n/**\n * This functions caches the PP of each building it saves all date in CM.Cache.Upgrades\n * It is called by CM.Cache.CachePP()\n */\nexport default function CacheUpgradePP() {\n  Object.keys(CacheUpgrades).forEach((i) => {\n    if (Game.cookiesPs) {\n      CacheUpgrades[i].pp =\n        Math.max(Game.Upgrades[i].getPrice() - (Game.cookies + GetWrinkConfigBank()), 0) /\n          Game.cookiesPs +\n        Game.Upgrades[i].getPrice() / CacheUpgrades[i].bonus;\n    } else CacheUpgrades[i].pp = Game.Upgrades[i].getPrice() / CacheUpgrades[i].bonus;\n    if (Number.isNaN(CacheUpgrades[i].pp)) CacheUpgrades[i].pp = Infinity;\n\n    CacheUpgrades[i].color = ColourOfPP(CacheUpgrades[i], Game.Upgrades[i].getPrice());\n  });\n}\n","/**\n * This function calculates the total price for buying \"increase\" of a building\n * Base Game does not currently allow this\n * It is called by CM.Cache.CacheBuildingsPrices() and CM.Disp.Tooltip()\n * @param\t{string}\tbuild\t\tName of the building\n * @param\t{number}\tbasePrice\tBase Price of building\n * @param\t{number}\tstart\t\tStarting amount of building\n * @param\t{number}\tfree\t\tFree amount of building\n * @param\t{number}\tincrease\tIncrease of building\n * @returns {number}\tmoni\t\tTotal price\n */\nexport default function BuildingGetPrice(build, basePrice, start, free, increase) {\n  let startingAmount = start;\n  let moni = 0;\n  for (let i = 0; i < increase; i += 1) {\n    let price = basePrice * Game.priceIncrease ** Math.max(0, startingAmount - free);\n    price = Game.modifyBuildingPrice(build, price);\n    price = Math.ceil(price);\n    moni += price;\n    startingAmount += 1;\n  }\n  return moni;\n}\n","/** Section: Functions related to caching income */\n\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport BuildingGetPrice from '../../Sim/SimulationEvents/BuyBuilding';\nimport BuyBuildingsBonusIncome from '../../Sim/SimulationEvents/BuyBuildingBonusIncome';\nimport BuyUpgradesBonusIncome from '../../Sim/SimulationEvents/BuyUpgrades';\nimport {\n  CacheAverageGainBank,\n  CacheAverageGainWrink,\n  CacheAverageGainWrinkFattest,\n  CacheDoRemakeBuildPrices, // eslint-disable-line no-unused-vars\n  CacheObjects1,\n  CacheObjects10,\n  CacheObjects100,\n  CacheObjectsNextAchievement,\n  CacheUpgrades,\n} from '../VariablesAndData';\n\n/**\n * This functions starts the calculation/simulation of the bonus income of buildings\n * It is called by CM.Cache.CacheIncome()\n * @param\t{amount}\tamount\tAmount to be bought\n * @parem\t{string}\ttarget\tThe target Cache object (\"Objects1\", \"Objects10\" or \"Objects100\")\n */\nfunction CacheBuildingIncome(amount) {\n  const result = {};\n  Object.keys(Game.Objects).forEach((i) => {\n    result[i] = {};\n    result[i].bonus = BuyBuildingsBonusIncome(i, amount);\n    if (amount !== 1) {\n      CacheDoRemakeBuildPrices = 1;\n    }\n  });\n  return result;\n}\n\n/**\n * This functions starts the calculation/simulation of the bonus income of upgrades\n * It is called by CM.Cache.CacheIncome()\n */\nfunction CacheUpgradeIncome() {\n  CacheUpgrades = [];\n  Object.keys(Game.Upgrades).forEach((i) => {\n    const bonusIncome = BuyUpgradesBonusIncome(i);\n    if (i === 'Elder Pledge') {\n      CacheUpgrades[i] = { bonus: Game.cookiesPs - CacheAverageGainBank };\n      if (CMOptions.CalcWrink === 1) CacheUpgrades[i].bonus -= CacheAverageGainWrink;\n      else if (CMOptions.CalcWrink === 2) CacheUpgrades[i].bonus -= CacheAverageGainWrinkFattest;\n      if (!Number.isFinite(CacheUpgrades[i].bonus)) CacheUpgrades[i].bonus = 0;\n    } else {\n      CacheUpgrades[i] = {};\n      if (bonusIncome[0]) CacheUpgrades[i].bonus = bonusIncome[0];\n      if (bonusIncome[1]) CacheUpgrades[i].bonusMouse = bonusIncome[1];\n    }\n  });\n}\n\n/**\n * This functions caches the price of each building and stores it in the cache\n */\nexport function CacheBuildingsPrices() {\n  Object.keys(Game.Objects).forEach((i) => {\n    CacheObjects1[i].price = BuildingGetPrice(\n      Game.Objects[i],\n      Game.Objects[i].basePrice,\n      Game.Objects[i].amount,\n      Game.Objects[i].free,\n      1,\n    );\n    CacheObjects10[i].price = BuildingGetPrice(\n      Game.Objects[i],\n      Game.Objects[i].basePrice,\n      Game.Objects[i].amount,\n      Game.Objects[i].free,\n      10,\n    );\n    CacheObjects100[i].price = BuildingGetPrice(\n      Game.Objects[i],\n      Game.Objects[i].basePrice,\n      Game.Objects[i].amount,\n      Game.Objects[i].free,\n      100,\n    );\n    CacheObjectsNextAchievement[i].price = BuildingGetPrice(\n      Game.Objects[i],\n      Game.Objects[i].basePrice,\n      Game.Objects[i].amount,\n      Game.Objects[i].free,\n      CacheObjectsNextAchievement[i].AmountNeeded,\n    );\n  });\n}\n\n/**\n * This functions caches the income gain of each building and upgrade and stores it in the cache\n * It is called by CM.Main.Loop() and CM.Cache.InitCache()\n */\nexport function CacheIncome() {\n  // Simulate Building Buys for 1, 10 and 100 amount\n  CacheObjects1 = CacheBuildingIncome(1);\n  CacheObjects10 = CacheBuildingIncome(10);\n  CacheObjects100 = CacheBuildingIncome(100);\n\n  // Simulate Upgrade Buys\n  CacheUpgradeIncome();\n}\n","import CalculateGains from '../Calculations/CalculateGains';\nimport CheckOtherAchiev from '../Calculations/CheckOtherAchiev';\nimport SimAuraMult from '../ReplacedGameFunctions/SimAuraMult';\nimport SimEff from '../ReplacedGameFunctions/SimEff';\nimport SimHas from '../ReplacedGameFunctions/SimHas';\nimport SimHasGod from '../ReplacedGameFunctions/SimHasGod';\nimport CopyData from '../SimulationData/CopyData';\nimport SimWin from '../SimulationData/SimWin';\nimport {\n  SimAchievementsOwned,\n  SimCookiesPs,\n  SimObjects,\n  SimPledges,\n  SimUpgrades,\n  SimUpgradesOwned, // eslint-disable-line no-unused-vars\n} from '../VariablesAndData';\n\n/**\n * This function calculates the cookies per click\n * It is called by CM.Sim.BuyUpgradesBonusIncome() when an upgrades has no bonus-income (and is thus a clicking-upgrade)\n * @returns\t{number}\tout\tThe clicking power\n */\nfunction MouseCps() {\n  let add = 0;\n  if (SimHas('Thousand fingers')) add += 0.1;\n  if (SimHas('Million fingers')) add *= 5;\n  if (SimHas('Billion fingers')) add *= 10;\n  if (SimHas('Trillion fingers')) add *= 20;\n  if (SimHas('Quadrillion fingers')) add *= 20;\n  if (SimHas('Quintillion fingers')) add *= 20;\n  if (SimHas('Sextillion fingers')) add *= 20;\n  if (SimHas('Septillion fingers')) add *= 20;\n  if (SimHas('Octillion fingers')) add *= 20;\n  if (SimHas('Nonillion fingers')) add *= 20;\n  let num = 0;\n  Object.keys(SimObjects).forEach((i) => {\n    num += SimObjects[i].amount;\n  });\n  num -= SimObjects.Cursor.amount;\n  add *= num;\n\n  // Can use SimCookiesPs as function is always called after CM.Sim.CalculateGains()\n  if (SimHas('Plastic mouse')) add += SimCookiesPs * 0.01;\n  if (SimHas('Iron mouse')) add += SimCookiesPs * 0.01;\n  if (SimHas('Titanium mouse')) add += SimCookiesPs * 0.01;\n  if (SimHas('Adamantium mouse')) add += SimCookiesPs * 0.01;\n  if (SimHas('Unobtainium mouse')) add += SimCookiesPs * 0.01;\n  if (SimHas('Eludium mouse')) add += SimCookiesPs * 0.01;\n  if (SimHas('Wishalloy mouse')) add += SimCookiesPs * 0.01;\n  if (SimHas('Fantasteel mouse')) add += SimCookiesPs * 0.01;\n  if (SimHas('Nevercrack mouse')) add += SimCookiesPs * 0.01;\n  if (SimHas('Armythril mouse')) add += SimCookiesPs * 0.01;\n  if (SimHas('Technobsidian mouse')) add += SimCookiesPs * 0.01;\n  if (SimHas('Plasmarble mouse')) add += SimCookiesPs * 0.01;\n  if (SimHas('Miraculite mouse')) add += SimCookiesPs * 0.01;\n\n  if (SimHas('Fortune #104')) add += SimCookiesPs * 0.01;\n\n  let mult = 1;\n  if (SimHas(\"Santa's helpers\")) mult *= 1.1;\n  if (SimHas('Cookie egg')) mult *= 1.1;\n  if (SimHas('Halo gloves')) mult *= 1.1;\n  if (SimHas('Dragon claw')) mult *= 1.03;\n\n  if (SimHas('Aura gloves')) {\n    mult *= 1 + 0.05 * Math.min(Game.Objects.Cursor.level, SimHas('Luminous gloves') ? 20 : 10);\n  }\n\n  mult *= SimEff('click');\n  if (SimObjects.Temple.minigameLoaded) {\n    if (SimHasGod) {\n      const godLvl = SimHasGod('labor');\n      if (godLvl === 1) mult *= 1.15;\n      else if (godLvl === 2) mult *= 1.1;\n      else if (godLvl === 3) mult *= 1.05;\n    }\n  }\n\n  Object.keys(Game.buffs).forEach((i) => {\n    if (typeof Game.buffs[i].multClick !== 'undefined') mult *= Game.buffs[i].multClick;\n  });\n\n  // if (CM.Sim.auraMult('Dragon Cursor')) mult*=1.05;\n  mult *= 1 + SimAuraMult('Dragon Cursor') * 0.05;\n\n  // No need to make this function a CM function\n  let out =\n    mult *\n    Game.ComputeCps(\n      1,\n      SimHas('Reinforced index finger') +\n        SimHas('Carpal tunnel prevention cream') +\n        SimHas('Ambidextrous'),\n      add,\n    );\n\n  out = Game.runModHookOnValue('cookiesPerClick', out);\n\n  if (Game.hasBuff('Cursed finger')) out = Game.buffs['Cursed finger'].power;\n\n  return out;\n}\n\n/**\n * This function calculates the bonus income of buying a building\n * It is called by CM.Cache.CacheBuildingIncome()\n * @param\t{string}\t\t\t\tbuilding\tThe name of the upgrade to be bought\n * @returns {[{number, number}]}\t\t\t\tThe bonus income of the upgrade and the difference in MouseCPS\n */\nexport default function BuyUpgradesBonusIncome(upgrade) {\n  if (\n    Game.Upgrades[upgrade].pool === 'toggle' ||\n    (Game.Upgrades[upgrade].bought === 0 &&\n      Game.Upgrades[upgrade].unlocked &&\n      Game.Upgrades[upgrade].pool !== 'prestige')\n  ) {\n    CopyData();\n    if (SimUpgrades[upgrade].name === 'Shimmering veil [on]') {\n      SimUpgrades['Shimmering veil [off]'].bought = 0;\n    } else if (SimUpgrades[upgrade].name === 'Golden switch [on]') {\n      SimUpgrades['Golden switch [off]'].bought = 0;\n    } else {\n      SimUpgrades[upgrade].bought = (SimUpgrades[upgrade].bought + 1) % 2;\n    }\n    if (Game.CountsAsUpgradeOwned(Game.Upgrades[upgrade].pool)) SimUpgradesOwned += 1;\n\n    if (upgrade === 'Elder Pledge') {\n      SimPledges += 1;\n      if (SimPledges > 0) SimWin('Elder nap');\n      if (SimPledges >= 5) SimWin('Elder slumber');\n    } else if (upgrade === 'Elder Covenant') {\n      SimWin('Elder calm');\n    } else if (upgrade === 'Prism heart biscuits') {\n      SimWin('Lovely cookies');\n    } else if (upgrade === 'Heavenly key') {\n      SimWin('Wholesome');\n    }\n\n    const lastAchievementsOwned = SimAchievementsOwned;\n\n    CalculateGains();\n\n    CheckOtherAchiev();\n\n    if (lastAchievementsOwned !== SimAchievementsOwned) {\n      CalculateGains();\n    }\n\n    const diffMouseCPS = MouseCps() - Game.computedMouseCps;\n    if (diffMouseCPS) {\n      return [SimCookiesPs - Game.cookiesPs, diffMouseCPS];\n    }\n    return [SimCookiesPs - Game.cookiesPs];\n  }\n  return [];\n}\n","import GetCPSBuffMult from '../CPS/GetCPSBuffMult';\nimport {\n  CacheChainFrenzyMaxReward,\n  CacheChainFrenzyRequired, // eslint-disable-line no-unused-vars\n  CacheChainFrenzyRequiredNext, // eslint-disable-line no-unused-vars\n  CacheChainFrenzyWrathMaxReward,\n  CacheChainFrenzyWrathRequired, // eslint-disable-line no-unused-vars\n  CacheChainFrenzyWrathRequiredNext, // eslint-disable-line no-unused-vars\n  CacheChainMaxReward,\n  CacheChainRequired, // eslint-disable-line no-unused-vars\n  CacheChainRequiredNext, // eslint-disable-line no-unused-vars\n  CacheChainWrathMaxReward,\n  CacheChainWrathRequired, // eslint-disable-line no-unused-vars\n  CacheChainWrathRequiredNext, // eslint-disable-line no-unused-vars\n  CacheDragonsFortuneMultAdjustment,\n  CacheGoldenCookiesMult,\n  CacheNoGoldSwitchCookiesPS,\n  CacheWrathCookiesMult,\n} from '../VariablesAndData';\n\n/**\n * This functions calculates the max possible payout given a set of variables\n * It is called by CM.Disp.CreateStatsChainSection() and CM.Cache.CacheChain()\n * @param\t{number}\t\t\t\t\tdigit\t\tNumber of Golden Cookies in chain\n * @param\t{number}\t\t\t\t\tmaxPayout\tMaximum payout\n * @param\t{number}\t\t\t\t\tmult\t\tMultiplier\n * @returns\t[{number, number, number}]\t\t\t\tTotal cookies earned, cookie needed for this and next level\n */\nexport function MaxChainCookieReward(digit, maxPayout, mult) {\n  let totalFromChain = 0;\n  let moni = 0;\n  let nextMoni = 0;\n  let nextRequired = 0;\n  let chain = 1 + Math.max(0, Math.ceil(Math.log(Game.cookies) / Math.LN10) - 10);\n  while (nextMoni < maxPayout * mult) {\n    moni = Math.max(\n      digit,\n      Math.min(Math.floor((1 / 9) * 10 ** chain * digit * mult), maxPayout * mult),\n    );\n    nextMoni = Math.max(\n      digit,\n      Math.min(Math.floor((1 / 9) * 10 ** (chain + 1) * digit * mult), maxPayout * mult),\n    );\n    nextRequired = Math.floor((1 / 9) * 10 ** (chain + 1) * digit * mult);\n    totalFromChain += moni;\n    chain += 1;\n  }\n  return [totalFromChain, moni, nextRequired];\n}\n\n/**\n * This functions caches data related to Chain Cookies reward from Golden Cookioes\n * It is called by CM.Main.Loop() upon changes to cps and CM.Cache.InitCache()\n * @global\t[{number, number}]\tCM.Cache.ChainMaxReward\t\t\tTotal cookies earned, and cookies needed for next level for normal chain\n * @global\t{number}\t\t\tCM.Cache.ChainRequired\t\t\tCookies needed for maximum reward for normal chain\n * @global\t{number}\t\t\tCM.Cache.ChainRequiredNext\t\tTotal cookies needed for next level for normal chain\n * @global\t[{number, number}]\tCM.Cache.ChainMaxWrathReward\t\t\tTotal cookies earned, and cookies needed for next level for wrath chain\n * @global\t{number}\t\t\tCM.Cache.ChainWrathRequired\t\t\tCookies needed for maximum reward for wrath chain\n * @global\t{number}\t\t\tCM.Cache.ChainWrathRequiredNext\t\tTotal cookies needed for next level for wrath chain\n * @global\t[{number, number}]\tCM.Cache.ChainFrenzyMaxReward\t\t\tTotal cookies earned, and cookies needed for next level for normal frenzy chain\n * @global\t{number}\t\t\tCM.Cache.ChainFrenzyRequired\t\t\tCookies needed for maximum reward for normal frenzy chain\n * @global\t{number}\t\t\tCM.Cache.ChainFrenzyRequiredNext\t\tTotal cookies needed for next level for normal frenzy chain\n * @global\t[{number, number}]\tCM.Cache.ChainFrenzyWrathMaxReward\t\t\tTotal cookies earned, and cookies needed for next level for wrath frenzy chain\n * @global\t{number}\t\t\tCM.Cache.ChainFrenzyWrathRequired\t\t\tCookies needed for maximum reward for wrath frenzy chain\n * @global\t{number}\t\t\tCM.Cache.ChainFrenzyWrathRequiredNext\t\tTotal cookies needed for next level for wrath frenzy chain\n */\nexport function CacheChain() {\n  let maxPayout = CacheNoGoldSwitchCookiesPS * 60 * 60 * 6 * CacheDragonsFortuneMultAdjustment;\n  // Removes effect of Frenzy etc.\n  const cpsBuffMult = GetCPSBuffMult();\n  if (cpsBuffMult > 0) maxPayout /= cpsBuffMult;\n  else maxPayout = 0;\n\n  CacheChainMaxReward = MaxChainCookieReward(7, maxPayout, CacheGoldenCookiesMult);\n  CacheChainRequired = (CacheChainMaxReward[1] * 2) / CacheGoldenCookiesMult;\n  CacheChainRequiredNext = CacheChainMaxReward[2] / 60 / 60 / 6 / CacheDragonsFortuneMultAdjustment;\n\n  CacheChainWrathMaxReward = MaxChainCookieReward(6, maxPayout, CacheWrathCookiesMult);\n  CacheChainWrathRequired = (CacheChainWrathMaxReward[1] * 2) / CacheWrathCookiesMult;\n  CacheChainWrathRequiredNext =\n    CacheChainWrathMaxReward[2] / 60 / 60 / 6 / CacheDragonsFortuneMultAdjustment;\n\n  CacheChainFrenzyMaxReward = MaxChainCookieReward(7, maxPayout * 7, CacheGoldenCookiesMult);\n  CacheChainFrenzyRequired = (CacheChainFrenzyMaxReward[1] * 2) / CacheGoldenCookiesMult;\n  CacheChainFrenzyRequiredNext =\n    CacheChainFrenzyMaxReward[2] / 60 / 60 / 6 / CacheDragonsFortuneMultAdjustment;\n\n  CacheChainFrenzyWrathMaxReward = MaxChainCookieReward(6, maxPayout * 7, CacheWrathCookiesMult);\n  CacheChainFrenzyWrathRequired = (CacheChainFrenzyWrathMaxReward[1] * 2) / CacheWrathCookiesMult;\n  CacheChainFrenzyWrathRequiredNext =\n    CacheChainFrenzyWrathMaxReward[2] / 60 / 60 / 6 / CacheDragonsFortuneMultAdjustment;\n}\n","import {\n  CacheHCPerSecond, // eslint-disable-line no-unused-vars\n  CacheLastHeavenlyCheck,\n  CacheLastHeavenlyChips,\n  HeavenlyChipsDiff,\n} from '../VariablesAndData';\n\n/**\n * This functions caches the heavenly chips per second in the last five seconds\n * It is called by CM.Cache.LoopCache()\n * @global\t{number}\tCM.Cache.HCPerSecond\tThe Heavenly Chips per second in the last five seconds\n */\nexport default function CacheHeavenlyChipsPS() {\n  const currDate = Math.floor(Date.now() / 1000);\n  // Only calculate every new second\n  if ((Game.T / Game.fps) % 1 === 0) {\n    const chipsOwned = Game.HowMuchPrestige(Game.cookiesReset);\n    const ascendNowToOwn = Math.floor(Game.HowMuchPrestige(Game.cookiesReset + Game.cookiesEarned));\n    const ascendNowToGet = ascendNowToOwn - Math.floor(chipsOwned);\n\n    // Add recent gains to AvgQueue's\n    const timeDiff = currDate - CacheLastHeavenlyCheck;\n    const heavenlyChipsDiffAvg = Math.max(0, ascendNowToGet - CacheLastHeavenlyChips) / timeDiff;\n    for (let i = 0; i < timeDiff; i++) {\n      HeavenlyChipsDiff.addLatest(heavenlyChipsDiffAvg);\n    }\n\n    // Store current data for next loop\n    CacheLastHeavenlyCheck = currDate;\n    CacheLastHeavenlyChips = ascendNowToGet;\n\n    // Get average gain over period of 5 seconds\n    CacheHCPerSecond = HeavenlyChipsDiff.calcAverage(5);\n  }\n}\n","import { crateMissing } from '../../Disp/MenuSections/Statistics/CreateMissingUpgrades';\nimport {\n  CacheMissingUpgrades, // eslint-disable-line no-unused-vars\n  CacheMissingUpgradesCookies, // eslint-disable-line no-unused-vars\n  CacheMissingUpgradesPrestige, // eslint-disable-line no-unused-vars\n} from '../VariablesAndData';\n\n/**\n * This functions caches variables related to missing upgrades\n * It is called by CM.Main.Loop() and CM.Cache.InitCache()\n * @global\t{string}\tCM.Cache.MissingUpgrades\t\t\tString containig the HTML to create the \"crates\" for missing normal upgrades\n * @global\t{string}\tCM.Cache.MissingUpgradesCookies\t\tString containig the HTML to create the \"crates\" for missing cookie upgrades\n * @global\t{string}\tCM.Cache.MissingUpgradesPrestige\tString containig the HTML to create the \"crates\" for missing prestige upgrades\n */\nexport default function CacheAllMissingUpgrades() {\n  CacheMissingUpgrades = '';\n  CacheMissingUpgradesCookies = '';\n  CacheMissingUpgradesPrestige = '';\n  const list = [];\n  // sort the upgrades\n  Object.keys(Game.Upgrades).forEach((i) => {\n    list.push(Game.Upgrades[i]);\n  });\n  const sortMap = function (a, b) {\n    if (a.order > b.order) return 1;\n    if (a.order < b.order) return -1;\n    return 0;\n  };\n  list.sort(sortMap);\n\n  Object.keys(list).forEach((i) => {\n    const me = list[i];\n\n    if (me.bought === 0) {\n      let str = '';\n\n      str += crateMissing(me);\n      /* eslint-disable no-unused-vars */\n      if (me.pool === 'prestige') CacheMissingUpgradesPrestige += str;\n      else if (me.pool === 'cookie') CacheMissingUpgradesCookies += str;\n      else if (me.pool !== 'toggle' && me.pool !== 'unused' && me.pool !== 'debug')\n        CacheMissingUpgrades += str;\n      /* eslint-enable no-unused-vars */\n    }\n  });\n}\n","/** Functions related to displaying the missing upgrades in the Statistics page */\n\nimport {\n  CacheMissingUpgrades,\n  CacheMissingUpgradesCookies,\n  CacheMissingUpgradesPrestige,\n} from '../../../Cache/VariablesAndData';\n\n/**\n * This function creates the missing upgrades sections for prestige, normal and cookie upgrades\n */\nexport function AddMissingUpgrades() {\n  l('menu').childNodes.forEach((menuSection) => {\n    if (menuSection.children[0]) {\n      if (menuSection.children[0].innerHTML === 'Prestige' && CacheMissingUpgradesPrestige) {\n        const prestigeUpgradesMissing =\n          CacheMissingUpgradesPrestige.match(new RegExp('div', 'g') || []).length / 2;\n        const title = document.createElement('div');\n        title.id = 'CMMissingUpgradesPrestigeTitle';\n        title.className = 'listing';\n        const titlefrag = document.createElement('div');\n        titlefrag.innerHTML = `<b>Missing Prestige upgrades:</b> ${prestigeUpgradesMissing}/${\n          Game.PrestigeUpgrades.length\n        } (${Math.floor((prestigeUpgradesMissing / Game.PrestigeUpgrades.length) * 100)}%)`;\n        title.appendChild(titlefrag);\n        menuSection.appendChild(title);\n        const upgrades = document.createElement('div');\n        upgrades.className = 'listing crateBox';\n        upgrades.innerHTML = CacheMissingUpgradesPrestige;\n        menuSection.appendChild(upgrades);\n      } else if (menuSection.children[0].innerHTML === 'Upgrades') {\n        if (CacheMissingUpgrades) {\n          const normalUpgradesMissing =\n            CacheMissingUpgrades.match(new RegExp('div', 'g') || []).length / 2;\n          const title = document.createElement('div');\n          title.id = 'CMMissingUpgradesTitle';\n          title.className = 'listing';\n          const titlefrag = document.createElement('div');\n          titlefrag.innerHTML = `<b>Missing normal upgrades:</b> ${normalUpgradesMissing}/${\n            Game.UpgradesByPool[''].length + Game.UpgradesByPool.tech.length\n          } (${Math.floor(\n            (normalUpgradesMissing /\n              (Game.UpgradesByPool[''].length + Game.UpgradesByPool.tech.length)) *\n              100,\n          )}%)`;\n          title.appendChild(titlefrag);\n          menuSection.insertBefore(title, menuSection.childNodes[3]);\n          const upgrades = document.createElement('div');\n          upgrades.className = 'listing crateBox';\n          upgrades.innerHTML = CacheMissingUpgrades;\n          menuSection.insertBefore(\n            upgrades,\n            document.getElementById('CMMissingUpgradesTitle').nextSibling,\n          );\n        }\n        if (CacheMissingUpgradesCookies) {\n          const cookieUpgradesMissing =\n            CacheMissingUpgradesCookies.match(new RegExp('div', 'g') || []).length / 2;\n          const title = document.createElement('div');\n          title.id = 'CMMissingUpgradesCookiesTitle';\n          title.className = 'listing';\n          const titlefrag = document.createElement('div');\n          titlefrag.innerHTML = `<b>Missing Cookie upgrades:</b> ${cookieUpgradesMissing}/${\n            Game.UpgradesByPool.cookie.length\n          } (${Math.floor((cookieUpgradesMissing / Game.UpgradesByPool.cookie.length) * 100)}%)`;\n          title.appendChild(titlefrag);\n          menuSection.appendChild(title);\n          const upgrades = document.createElement('div');\n          upgrades.className = 'listing crateBox';\n          upgrades.innerHTML = CacheMissingUpgradesCookies;\n          menuSection.appendChild(upgrades);\n        }\n      }\n    }\n  });\n}\n\n/**\n * This function returns the \"crates\" (icons) for missing upgrades in the stats sections\n * It returns a html string that gets appended to the respective CM.Cache.MissingUpgrades-variable by CM.Cache.CacheMissingUpgrades()\n * @param\t{object}\tme\tThe upgrade object\n * @returns\t{string}\t?\tThe HTML string that creates the icon.\n */\nexport function crateMissing(me) {\n  let classes = 'crate upgrade missing';\n  if (me.pool === 'prestige') classes += ' heavenly';\n\n  let noFrame = 0;\n  if (!Game.prefs.crates) noFrame = 1;\n  if (noFrame) classes += ' noFrame';\n\n  let { icon } = me;\n  if (me.iconFunction) icon = me.iconFunction();\n  const tooltip = `function() {return Game.crateTooltip(Game.UpgradesById[${me.id}], 'stats');}`;\n  return `<div class=\"${classes}\"\n\t${Game.getDynamicTooltip(tooltip, 'top', true)}\n\tstyle = \"${`${icon[2] ? `background-image: url(${icon[2]});` : ''}background-position:${\n    -icon[0] * 48\n  }px ${-icon[1] * 48}px`};\">\n\t</div>`;\n}\n","import { CacheSeaSpec } from '../VariablesAndData'; // eslint-disable-line no-unused-vars\n\n/**\n * This functions caches the reward of popping a reindeer\n * It is called by CM.Main.Loop() and CM.Cache.InitCache()\n * @global\t{number}\tCM.Cache.SeaSpec\tThe reward for popping a reindeer\n */\nexport default function CacheSeasonSpec() {\n  if (Game.season === 'christmas') {\n    let val = Game.cookiesPs * 60;\n    if (Game.hasBuff('Elder frenzy')) val *= 0.5;\n    if (Game.hasBuff('Frenzy')) val *= 0.75;\n    CacheSeaSpec = Math.max(25, val);\n    if (Game.Has('Ho ho ho-flavored frosting')) CacheSeaSpec *= 2;\n  }\n}\n","/** Functions related to Caching stats */\n\nimport SimHas from '../../Sim/ReplacedGameFunctions/SimHas';\nimport GetCPSBuffMult from '../CPS/GetCPSBuffMult';\nimport {\n  CacheConjure,\n  CacheConjureReward, // eslint-disable-line no-unused-vars\n  CacheDragonsFortuneMultAdjustment,\n  CacheEdifice,\n  CacheEdificeBuilding, // eslint-disable-line no-unused-vars\n  CacheGoldenCookiesMult,\n  CacheLucky,\n  CacheLuckyFrenzy,\n  CacheLuckyReward, // eslint-disable-line no-unused-vars\n  CacheLuckyRewardFrenzy, // eslint-disable-line no-unused-vars\n  CacheLuckyWrathReward, // eslint-disable-line no-unused-vars\n  CacheLuckyWrathRewardFrenzy, // eslint-disable-line no-unused-vars\n  CacheNoGoldSwitchCookiesPS,\n  CacheWrathCookiesMult,\n} from '../VariablesAndData';\n\n/**\n * This functions caches variables related to the stats page\n */\nexport function CacheStatsCookies() {\n  CacheLucky = (CacheNoGoldSwitchCookiesPS * 900) / 0.15;\n  CacheLucky *= CacheDragonsFortuneMultAdjustment;\n  const cpsBuffMult = GetCPSBuffMult();\n  if (cpsBuffMult > 0) CacheLucky /= cpsBuffMult;\n  else CacheLucky = 0;\n  CacheLuckyReward = CacheGoldenCookiesMult * (CacheLucky * 0.15) + 13;\n  CacheLuckyWrathReward = CacheWrathCookiesMult * (CacheLucky * 0.15) + 13;\n  CacheLuckyFrenzy = CacheLucky * 7;\n  CacheLuckyRewardFrenzy = CacheGoldenCookiesMult * (CacheLuckyFrenzy * 0.15) + 13;\n  CacheLuckyWrathRewardFrenzy = CacheWrathCookiesMult * (CacheLuckyFrenzy * 0.15) + 13;\n  CacheConjure = CacheLucky * 2;\n  CacheConjureReward = CacheConjure * 0.15;\n\n  CacheEdifice = 0;\n  let max = 0;\n  let n = 0;\n  Object.keys(Game.Objects).forEach((i) => {\n    if (Game.Objects[i].amount > max) max = Game.Objects[i].amount;\n    if (Game.Objects[i].amount > 0) n += 1;\n  });\n  Object.keys(Game.Objects).forEach((i) => {\n    if (\n      (Game.Objects[i].amount < max || n === 1) &&\n      Game.Objects[i].amount < 400 &&\n      Game.Objects[i].price * 2 > CacheEdifice\n    ) {\n      CacheEdifice = Game.Objects[i].price * 2;\n      CacheEdificeBuilding = i;\n    }\n  });\n}\n\n/**\n * This functions calculates the multipliers of Golden and Wrath cookie rewards\n */\nexport function CacheGoldenAndWrathCookiesMults() {\n  let goldenMult = 1;\n  let wrathMult = 1;\n  let mult = 1;\n\n  // Factor auras and upgrade in mults\n  if (SimHas('Green yeast digestives')) mult *= 1.01;\n  if (SimHas('Dragon fang')) mult *= 1.03;\n\n  goldenMult *= 1 + Game.auraMult('Ancestral Metamorphosis') * 0.1;\n  goldenMult *= Game.eff('goldenCookieGain');\n  wrathMult *= 1 + Game.auraMult('Unholy Dominion') * 0.1;\n  wrathMult *= Game.eff('wrathCookieGain');\n\n  // Calculate final golden and wrath multipliers\n  CacheGoldenCookiesMult = mult * goldenMult;\n  CacheWrathCookiesMult = mult * wrathMult;\n\n  // Calculate Dragon's Fortune multiplier adjustment:\n  // If Dragon's Fortune (or Reality Bending) aura is active and there are currently no golden cookies,\n  // compute a multiplier adjustment to apply on the current CPS to simulate 1 golden cookie on screen.\n  // Otherwise, the aura effect will be factored in the base CPS making the multiplier not requiring adjustment.\n  CacheDragonsFortuneMultAdjustment = 1;\n  if (Game.shimmerTypes.golden.n === 0) {\n    CacheDragonsFortuneMultAdjustment *= 1 + Game.auraMult(\"Dragon's Fortune\") * 1.23;\n  }\n}\n","import { CacheObjectsNextAchievement } from '../VariablesAndData';\nimport IndividualAmountTillNextAchievement from './IndividualAmountTillNextAchievement';\n\n/**\n * This functions caches the amount of buildings needed till next achievement\n * @param\t{boolean}\tforceRecalc\tWhether a recalcution should be forced (after CPS change)\n */\nexport default function AllAmountTillNextAchievement(forceRecalc) {\n  const result = {};\n\n  Object.keys(Game.Objects).forEach((i) => {\n    if (\n      Object.keys(CacheObjectsNextAchievement).length !== 0 &&\n      CacheObjectsNextAchievement[i].TotalNeeded > Game.Objects[i].amount &&\n      !forceRecalc\n    ) {\n      result[i] = {\n        AmountNeeded: CacheObjectsNextAchievement[i].TotalNeeded - Game.Objects[i].amount,\n        TotalNeeded: CacheObjectsNextAchievement[i].TotalNeeded,\n        price: Game.Objects[i].getSumPrice(\n          CacheObjectsNextAchievement[i].TotalNeeded - Game.Objects[i].amount,\n        ),\n      };\n    } else {\n      const tillNext = IndividualAmountTillNextAchievement(i);\n      result[i] = {\n        AmountNeeded: tillNext,\n        TotalNeeded: Game.Objects[i].amount + tillNext,\n        price: Game.Objects[i].getSumPrice(tillNext),\n      };\n    }\n  });\n  CacheObjectsNextAchievement = result; // eslint-disable-line no-unused-vars\n}\n","import BuyBuildingsBonusIncome from '../../Sim/SimulationEvents/BuyBuildingBonusIncome';\nimport { SimAchievementsOwned } from '../../Sim/VariablesAndData';\n\nexport default function IndividualAmountTillNextAchievement(building) {\n  const AchievementsAtStart = Game.AchievementsOwned;\n  let index = 100;\n  let lastIndexWithChange = 100;\n  while (index > -1) {\n    BuyBuildingsBonusIncome(building, index);\n    if (SimAchievementsOwned > AchievementsAtStart) {\n      lastIndexWithChange = index;\n      index -= 10;\n    } else if (index === 100) {\n      return 101;\n    } else {\n      index += 1;\n      while (index <= lastIndexWithChange) {\n        BuyBuildingsBonusIncome(building, index);\n        if (SimAchievementsOwned > AchievementsAtStart) {\n          return index;\n        }\n        index += 1;\n      }\n    }\n  }\n  return 101;\n}\n","/** Caches data related to Wrinklers */\n\nimport { SimObjects } from '../../Sim/VariablesAndData';\nimport {\n  CacheWrinklersFattest,\n  CacheWrinklersNormal, // eslint-disable-line no-unused-vars\n  CacheWrinklersTotal, // eslint-disable-line no-unused-vars\n} from '../VariablesAndData';\n\n/**\n * This functions caches data related to Wrinklers\n * It is called by CM.Cache.LoopCache() and CM.Cache.InitCache()\n * @global\t{number}\t\t\t\tCM.Cache.WrinklersTotal\t\tThe cookies of all wrinklers\n * @global\t{number}\t\t\t\tCM.Cache.WrinklersNormal\tThe cookies of all normal wrinklers\n * @global\t{[{number}, {number}]}\tCM.Cache.WrinklersFattest\tA list containing the cookies and the id of the fattest non-shiny wrinkler\n */\nexport default function CacheWrinklers() {\n  CacheWrinklersTotal = 0;\n  CacheWrinklersNormal = 0;\n  CacheWrinklersFattest = [0, null];\n  for (let i = 0; i < Game.wrinklers.length; i++) {\n    let { sucked } = Game.wrinklers[i];\n    let toSuck = 1.1;\n    if (Game.Has('Sacrilegious corruption')) toSuck *= 1.05;\n    if (Game.wrinklers[i].type === 1) toSuck *= 3; // Shiny wrinklers\n    sucked *= toSuck;\n    if (Game.Has('Wrinklerspawn')) sucked *= 1.05;\n    if (SimObjects.Temple.minigameLoaded) {\n      const godLvl = Game.hasGod('scorn');\n      if (godLvl === 1) sucked *= 1.15;\n      else if (godLvl === 2) sucked *= 1.1;\n      else if (godLvl === 3) sucked *= 1.05;\n    }\n    CacheWrinklersTotal += sucked;\n    if (Game.wrinklers[i].type === 0) {\n      CacheWrinklersNormal += sucked;\n      if (sucked > CacheWrinklersFattest[0]) CacheWrinklersFattest = [sucked, i];\n    }\n  }\n}\n","import { ClickTimes } from '../Disp/VariablesAndData';\nimport { CMAvgQueue, InitCookiesDiff } from './CPS/AverageQueue';\nimport CacheAvgCPS from './CPS/CPS';\nimport CacheDragonAuras from './Dragon/CacheDragonAuras';\nimport CachePP from './PP/PP';\nimport { CacheBuildingsPrices, CacheIncome } from './PriceAndIncome/PriceAndIncome';\nimport { CacheChain } from './Stats/ChainCookies';\nimport CacheHeavenlyChipsPS from './Stats/HeavenlyChips';\nimport CacheAllMissingUpgrades from './Stats/MissingUpgrades';\nimport CacheSeasonSpec from './Stats/Reindeer';\nimport { CacheGoldenAndWrathCookiesMults, CacheStatsCookies } from './Stats/Stats';\nimport AllAmountTillNextAchievement from './TillNextAchievement/AllAmountTillNextAchievement';\nimport { CacheAverageCookiesFromClicks, HeavenlyChipsDiff } from './VariablesAndData'; // eslint-disable-line no-unused-vars\nimport CacheWrinklers from './Wrinklers/Wrinklers';\n\n/**\n * This functions runs all cache-functions to generate all \"full\" cache\n */\nexport default function InitCache() {\n  CacheDragonAuras();\n  CacheWrinklers();\n  CacheStatsCookies();\n  CacheGoldenAndWrathCookiesMults();\n  CacheChain();\n  CacheAllMissingUpgrades();\n  CacheSeasonSpec();\n  InitCookiesDiff();\n  /** Used by CM.Cache.CacheHeavenlyChipsPS() */\n  HeavenlyChipsDiff = new CMAvgQueue(5);\n  CacheAverageCookiesFromClicks = new CMAvgQueue(ClickTimes[ClickTimes.length - 1] * 20);\n  CacheHeavenlyChipsPS();\n  AllAmountTillNextAchievement();\n  CacheAvgCPS();\n  CacheIncome();\n  CacheBuildingsPrices();\n  CachePP();\n}\n","/** This array describes all default settings */\nconst ConfigDefault: {\n  [index: string]: string | number | { [index: string]: number };\n} = {\n  CPSMode: 1,\n  AvgCPSHist: 3,\n  AvgClicksHist: 0,\n  CalcWrink: 0,\n  Scale: 2,\n  ScaleDecimals: 2,\n  ScaleSeparator: 0,\n  ScaleCutoff: 999999,\n  TimeFormat: 0,\n  DetailedTime: 1,\n  PPDisplayTime: 0,\n  BuildColour: 1,\n  PPOnlyConsiderBuyable: 0,\n  PPExcludeTop: 0,\n  PPRigidelMode: 0,\n  PPSecondsLowerLimit: 0,\n  ColourBlue: '#4bb8f0',\n  ColourGreen: '#00ff00',\n  ColourYellow: '#ffff00',\n  ColourOrange: '#ff7f00',\n  ColourRed: '#ff0000',\n  ColourPurple: '#ff00ff',\n  ColourGray: '#b3b3b3',\n  ColourPink: '#ff1493',\n  ColourBrown: '#8b4513',\n  BotBar: 1,\n  TimerBar: 1,\n  TimerBarPos: 0,\n  TimerBarOverlay: 2,\n  AutosaveTimerBar: 0,\n  UpBarColour: 1,\n  UpgradeBarFixedPos: 1,\n  SortBuildings: 0,\n  SortUpgrades: 0,\n  UpgradesNeverCollapse: 0,\n  DragonAuraInfo: 1,\n  GrimoireBar: 1,\n  GCTimer: 1,\n  Favicon: 1,\n  WrinklerButtons: 1,\n  HideSectionsButtons: 0,\n  TooltipBuildUpgrade: 1,\n  TooltipAmor: 0,\n  ToolWarnLucky: 1,\n  ToolWarnLuckyFrenzy: 1,\n  ToolWarnConjure: 1,\n  ToolWarnConjureFrenzy: 1,\n  ToolWarnEdifice: 1,\n  ToolWarnUser: 0,\n  ToolWarnBon: 1,\n  ToolWarnPos: 1,\n  TooltipGrim: 1,\n  TooltipWrink: 1,\n  TooltipLump: 1,\n  TooltipPlots: 1,\n  TooltipPantheon: 1,\n  TooltipAscendButton: 1,\n  Stats: 1,\n  MissingUpgrades: 1,\n  MissingAchievements: 0,\n  UpStats: 1,\n  HeavenlyChipsTarget: 1,\n  ShowMissedGC: 1,\n  Title: 1,\n  GeneralSound: 1,\n  GCNotification: 0,\n  GCFlash: 1,\n  ColourGCFlash: '#ffffff',\n  GCSound: 1,\n  GCVolume: 100,\n  GCSoundURL: 'https://freesound.org/data/previews/66/66717_931655-lq.mp3',\n  FortuneNotification: 0,\n  FortuneFlash: 1,\n  ColourFortuneFlash: '#ffffff',\n  FortuneSound: 1,\n  FortuneVolume: 100,\n  FortuneSoundURL: 'https://freesound.org/data/previews/174/174027_3242494-lq.mp3',\n  SeaNotification: 0,\n  SeaFlash: 1,\n  ColourSeaFlash: '#ffffff',\n  SeaSound: 1,\n  SeaVolume: 100,\n  SeaSoundURL: 'https://www.freesound.org/data/previews/121/121099_2193266-lq.mp3',\n  GardFlash: 1,\n  ColourGardFlash: '#ffffff',\n  GardSound: 1,\n  GardVolume: 100,\n  GardSoundURL: 'https://freesound.org/data/previews/103/103046_861714-lq.mp3',\n  MagicNotification: 0,\n  MagicFlash: 1,\n  ColourMagicFlash: '#ffffff',\n  MagicSound: 1,\n  MagicVolume: 100,\n  MagicSoundURL: 'https://freesound.org/data/previews/221/221683_1015240-lq.mp3',\n  WrinklerNotification: 0,\n  WrinklerFlash: 1,\n  ColourWrinklerFlash: '#ffffff',\n  WrinklerSound: 1,\n  WrinklerVolume: 100,\n  WrinklerSoundURL: 'https://freesound.org/data/previews/124/124186_8043-lq.mp3',\n  WrinklerMaxNotification: 0,\n  WrinklerMaxFlash: 1,\n  ColourWrinklerMaxFlash: '#ffffff',\n  WrinklerMaxSound: 1,\n  WrinklerMaxVolume: 100,\n  WrinklerMaxSoundURL: 'https://freesound.org/data/previews/152/152743_15663-lq.mp3',\n  BulkBuyBlock: 0,\n  FavouriteSettings: 1,\n  Header: {\n    Favourite: 1,\n    Calculation: 1,\n    Notation: 1,\n    Colours: 1,\n    BarsDisplay: 1,\n    Tooltip: 1,\n    Statistics: 1,\n    Notification: 1,\n    NotificationGeneral: 1,\n    NotificationGC: 1,\n    NotificationFC: 1,\n    NotificationSea: 1,\n    NotificationGard: 1,\n    NotificationMagi: 1,\n    NotificationWrink: 1,\n    NotificationWrinkMax: 1,\n    Miscellaneous: 1,\n    Lucky: 1,\n    Chain: 1,\n    Spells: 1,\n    Garden: 1,\n    Prestige: 1,\n    Wrink: 1,\n    Sea: 1,\n    Achievs: 1,\n    Misc: 1,\n    InfoTab: 1,\n  },\n};\n\nexport default ConfigDefault;\n","/**\n * This function checks if the user has given permissions for notifications\n * It is called by a change in any of the notification options\n * Note that most browsers will stop asking if the user has ignored the prompt around 6 times\n * @param \t{number}\tToggleOnOff\t\tA number indicating whether the option has been turned off (0) or on (1)\n */\nfunction CheckNotificationPermissions(ToggleOnOff) {\n  if (ToggleOnOff === 1) {\n    // Check if browser support Promise version of Notification Permissions\n    const checkNotificationPromise = function () {\n      try {\n        Notification.requestPermission().then();\n      } catch (e) {\n        return false;\n      }\n      return true;\n    };\n\n    // Check if the browser supports notifications and which type\n    if (!('Notification' in window)) {\n      console.log('This browser does not support notifications.'); // eslint-disable-line no-console\n    } else if (checkNotificationPromise()) {\n      Notification.requestPermission().then();\n    } else {\n      Notification.requestPermission();\n    }\n  }\n}\n\nexport default CheckNotificationPermissions;\n","import { UpdateBotBar } from '../../Disp/InfoBars/BottomBar';\nimport { UpdateBotTimerBarPosition } from '../SpecificToggles';\nimport { CMOptions } from '../VariablesAndData';\n\n/**\n * This function toggle the bottom bar\n * It is called by CM.Disp.UpdateAscendState() and a change in CMOptions.BotBar\n */\nexport default function ToggleBotBar() {\n  if (CMOptions.BotBar === 1) {\n    l('CMBotBar').style.display = '';\n    UpdateBotBar();\n  } else {\n    l('CMBotBar').style.display = 'none';\n  }\n  UpdateBotTimerBarPosition();\n}\n","import UpdateBuildings from '../BuildingsUpgrades/Buildings';\nimport UpdateUpgrades from '../BuildingsUpgrades/Upgrades';\nimport { UpdateBotBar } from '../InfoBars/BottomBar';\n\n/**\n * This function refreshes all numbers after a change in scale-setting\n * It is therefore called by a changes in CM.Options.Scale, CM.Options.ScaleDecimals, CM.Options.ScaleSeparator and CM.Options.ScaleCutoff\n */\nexport default function RefreshScale() {\n  BeautifyAll();\n  Game.RefreshStore();\n  Game.RebuildUpgrades();\n\n  UpdateBotBar();\n  UpdateBuildings();\n  UpdateUpgrades();\n}\n","import { CacheSpawnedGoldenShimmer } from '../../Cache/VariablesAndData';\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport { LastGoldenCookieState } from '../../Main/VariablesAndData';\n\n/**\n * This function creates the Favicon, it is called by CM.Main.DelayInit()\n */\nexport function CreateFavicon() {\n  const Favicon = document.createElement('link');\n  Favicon.id = 'CMFavicon';\n  Favicon.rel = 'shortcut icon';\n  Favicon.href = 'https://orteil.dashnet.org/cookieclicker/favicon.ico';\n  document.getElementsByTagName('head')[0].appendChild(Favicon);\n}\n\n/**\n * This function updates the Favicon depending on whether a Golden Cookie has spawned\n * By relying on CM.Cache.spawnedGoldenShimmer it only changes for non-user spawned cookie\n */\nexport function UpdateFavicon() {\n  if (CMOptions.Favicon === 1 && LastGoldenCookieState > 0) {\n    if (CacheSpawnedGoldenShimmer.wrath)\n      l('CMFavicon').href =\n        'https://CookieMonsterTeam.github.io/CookieMonster/favicon/wrathCookie.ico';\n    else\n      l('CMFavicon').href =\n        'https://CookieMonsterTeam.github.io/CookieMonster/favicon/goldenCookie.ico';\n  } else l('CMFavicon').href = 'https://orteil.dashnet.org/cookieclicker/favicon.ico';\n}\n","/** The basic setting class */\nexport default class Setting {\n  type: string;\n\n  group: string;\n\n  constructor(type: string, group: string) {\n    this.type = type;\n    this.group = group;\n  }\n}\n","import Setting from './BaseSetting';\n\n/** The colour picker setting class */\nexport default class SettingColours extends Setting {\n  desc: string;\n\n  constructor(type: string, group: string, desc: string) {\n    super(type, group);\n    this.desc = desc;\n  }\n}\n","import Setting from './BaseSetting';\n\n/** The number input setting class */\nexport default class SettingInputNumber extends Setting {\n  label: string[];\n\n  desc: string;\n\n  min: number;\n\n  max: number;\n\n  constructor(\n    type: string,\n    group: string,\n    label: string[],\n    desc: string,\n    min: number,\n    max: number,\n  ) {\n    super(type, group);\n    this.label = label;\n    this.desc = desc;\n    this.min = min;\n    this.max = max;\n  }\n}\n","import Setting from './BaseSetting';\n\n/** The standard toggle setting class */\nexport default class SettingStandard extends Setting {\n  label: string[];\n\n  desc: string;\n\n  toggle: boolean;\n\n  func: () => void;\n\n  constructor(\n    type: string,\n    group: string,\n    label: string[],\n    desc: string,\n    toggle: boolean,\n    func?: () => void,\n  ) {\n    super(type, group);\n    this.label = label;\n    this.desc = desc;\n    this.toggle = toggle;\n    if (func !== undefined) {\n      this.func = func;\n    }\n  }\n}\n","import Setting from './BaseSetting';\n\n/** The volume level setting class */\nexport default class SettingVolume extends Setting {\n  label: string[];\n\n  desc: string;\n\n  constructor(type: string, group: string, label: string[], desc: string) {\n    super(type, group);\n    this.label = label;\n    this.desc = desc;\n    for (let i = 0; i < 101; i++) {\n      this.label[i] = `${i}%`;\n    }\n  }\n}\n","import CheckNotificationPermissions from '../Config/CheckNotificationPermissions';\nimport { ToggleTimerBar, ToggleTimerBarPos } from '../Config/SpecificToggles';\nimport ToggleBotBar from '../Config/Toggles/ToggleBotBar';\nimport ToggleDetailedTime from '../Config/Toggles/ToggleDetailedTime';\nimport ToggleGCTimer from '../Config/Toggles/ToggleGCTimer';\nimport ToggleSectionHideButtons from '../Config/Toggles/ToggleSectionHideButtons';\nimport ToggleToolWarnPos from '../Config/Toggles/ToggleToolWarnPos';\nimport ToggleUpgradeBarAndColour from '../Config/Toggles/ToggleUpgradeBarAndColour';\nimport ToggleUpgradeBarFixedPos from '../Config/Toggles/ToggleUpgradeBarFixedPos';\nimport ToggleWrinklerButtons from '../Config/Toggles/ToggleWrinklerButtons';\nimport { CMOptions } from '../Config/VariablesAndData';\nimport UpdateBuildings from '../Disp/BuildingsUpgrades/Buildings';\nimport UpdateUpgradeSectionsHeight from '../Disp/BuildingsUpgrades/UpdateUpgradeSectionsHeight';\nimport UpdateUpgrades from '../Disp/BuildingsUpgrades/Upgrades';\nimport RefreshScale from '../Disp/HelperFunctions/RefreshScale';\nimport { UpdateFavicon } from '../Disp/TabTitle/FavIcon';\nimport { SimDoSims } from '../Sim/VariablesAndData'; // eslint-disable-line no-unused-vars\nimport SettingColours from './SettingClasses/SettingColours.ts';\nimport SettingInputNumber from './SettingClasses/SettingInputNumber.ts';\nimport SettingStandard from './SettingClasses/SettingStandard.ts';\nimport SettingVolume from './SettingClasses/SettingVolume.ts';\n\n/** This includes all options of CookieMonster and their relevant data */\nconst Config = {\n  // Calculation\n  CPSMode: new SettingStandard(\n    'bool',\n    'Calculation',\n    ['Current cookies per second', 'Average cookies per second'],\n    'Calculate times using current cookies per second or average cookies per second',\n    false,\n  ),\n  AvgCPSHist: new SettingStandard(\n    'bool',\n    'Calculation',\n    [\n      'Average CPS in past 10s',\n      'Average CPS in past 15s',\n      'Average CPS in past 30s',\n      'Average CPS in past 1m',\n      'Average CPS in past 5m',\n      'Average CPS in past 10m',\n      'Average CPS in past 15m',\n      'Average CPS in past 30m',\n    ],\n    'How much time average Cookies Per Second should consider',\n    false,\n  ),\n  AvgClicksHist: new SettingStandard(\n    'bool',\n    'Calculation',\n    [\n      'Average clicks in past 1s',\n      'Average clicks in past 5s',\n      'Average clicks in past 10s',\n      'Average clicks in past 15s',\n      'Average clicks in past 30s',\n    ],\n    'How much time average Cookie Clicks should consider',\n    false,\n  ),\n  CalcWrink: new SettingStandard(\n    'bool',\n    'Calculation',\n    [\n      'Calculate with wrinklers OFF',\n      'Calculate with wrinklers ON',\n      'Calculate with single fattest wrinkler ON',\n    ],\n    'Calculate times and average Cookies Per Second with (only the single non-shiny fattest) wrinklers',\n    true,\n    () => {\n      SimDoSims = true;\n    },\n  ),\n\n  // Notation\n  Scale: new SettingStandard(\n    'bool',\n    'Notation',\n    [\n      \"Game's setting scale\",\n      'Metric',\n      'Short scale',\n      'Short scale (Abbreviated)',\n      'Scientific notation',\n      'Engineering notation',\n    ],\n    'Change how long numbers are formatted',\n    false,\n    () => {\n      RefreshScale();\n    },\n  ),\n  ScaleDecimals: new SettingStandard(\n    'bool',\n    'Notation',\n    ['1 decimals', '2 decimals', '3 decimals'],\n    `Set the number of decimals used when applicable. This only works with Cookie Monster scales and not with \"Game's Setting Scale\"`,\n    false,\n    () => {\n      RefreshScale();\n    },\n  ),\n  ScaleSeparator: new SettingStandard(\n    'bool',\n    'Notation',\n    ['. for decimals (standard)', '. for thousands'],\n    'Set the separator used for decimals and thousands',\n    false,\n    () => {\n      RefreshScale();\n    },\n  ),\n  ScaleCutoff: new SettingInputNumber(\n    'numscale',\n    'Notation',\n    'Notation cut-off point: ',\n    'The number from which Cookie Monster will start formatting numbers based on chosen scale. Standard is 999,999. Setting this above 999,999,999 might break certain notations',\n    1,\n    999999999,\n  ),\n  TimeFormat: new SettingStandard(\n    'bool',\n    'Notation',\n    ['Time XXd, XXh, XXm, XXs', 'Time XX:XX:XX:XX:XX'],\n    'Change the time format',\n    false,\n  ),\n  DetailedTime: new SettingStandard(\n    'bool',\n    'Notation',\n    ['Detailed time OFF', 'Detailed time ON'],\n    'Change how time is displayed in certain statistics and tooltips',\n    true,\n    () => {\n      ToggleDetailedTime();\n    },\n  ),\n  PPDisplayTime: new SettingStandard(\n    'bool',\n    'Notation',\n    ['PP as value (standard)', 'PP as time unit'],\n    'Display PP as calculated value or as approximate time unit. Note that PP does not translate directly into a time unit and this is therefore only an approximation.',\n    false,\n  ),\n\n  // Colours\n  BuildColour: new SettingStandard(\n    'bool',\n    'Colours',\n    ['Building colours OFF', 'Building colours ON'],\n    'Colour code buildings',\n    true,\n    () => {\n      UpdateBuildings();\n    },\n  ),\n  PPOnlyConsiderBuyable: new SettingStandard(\n    'bool',\n    'Colours',\n    [\"Don't ignore non-buyable\", 'Ignore non-buyable'],\n    \"Makes Cookie Monster label buildings and upgrades you can't buy right now red, useful in those situations where you just want to spend your full bank 'most optimally'\",\n    true,\n  ),\n  PPExcludeTop: new SettingStandard(\n    'bool',\n    'Colours',\n    [\n      \"Don't ignore any\",\n      'Ignore 1st best',\n      'Ignore 1st and 2nd best',\n      'Ignore 1st, 2nd and 3rd best',\n    ],\n    'Makes Cookie Monster ignore the 1st, 2nd or 3rd best buildings in labeling and colouring PP values',\n    true,\n  ),\n  PPRigidelMode: new SettingStandard(\n    'bool',\n    'Colours',\n    ['Rigidel mode OFF', 'Rigidel mode ON'],\n    'Makes Cookie Monster ignore all \"buy 1\" options when colouring PP in order to stay at a total building count ending in 10 for pantheon god Rigidel',\n    true,\n  ),\n  PPSecondsLowerLimit: new SettingInputNumber(\n    'numscale',\n    'Colours',\n    'Lower limit for PP (in seconds): ',\n    'If a building or upgrade costs less than the specified seconds of CPS it will also be considered optimal and label it as such (\"PP is less than xx seconds of CPS\"); setting to 0 ignores this option',\n    0,\n    Infinity,\n  ),\n  ColourBlue: new SettingColours(\n    'colour',\n    'Colours',\n    'Standard colour is blue. Used to show upgrades better than best PP building, for Click Frenzy bar, and for various labels',\n  ),\n  ColourGreen: new SettingColours(\n    'colour',\n    'Colours',\n    'Standard colour is green. Used to show best PP building, for Blood Frenzy bar, and for various labels',\n  ),\n  ColourYellow: new SettingColours(\n    'colour',\n    'Colours',\n    'Standard colour is yellow. Used to show buildings within the top 10 of PP, for Frenzy bar, and for various labels',\n  ),\n  ColourOrange: new SettingColours(\n    'colour',\n    'Colours',\n    'Standard colour is orange. Used to show buildings within the top 20 of PP, for Next Reindeer bar, and for various labels',\n  ),\n  ColourRed: new SettingColours(\n    'colour',\n    'Colours',\n    'Standard colour is Red. Used to show buildings within the top 30 of PP, for Clot bar, and for various labels',\n  ),\n  ColourPurple: new SettingColours(\n    'colour',\n    'Colours',\n    'Standard colour is purple. Used to show buildings outside of the top 30 of PP, for Next Cookie bar, and for various labels',\n  ),\n  ColourGray: new SettingColours(\n    'colour',\n    'Colours',\n    'Standard colour is gray. Used to show negative or infinity PP, and for Next Cookie/Next Reindeer bar',\n  ),\n  ColourPink: new SettingColours(\n    'colour',\n    'Colours',\n    'Standard colour is pink. Used for Dragonflight bar',\n  ),\n  ColourBrown: new SettingColours(\n    'colour',\n    'Colours',\n    'Standard colour is brown. Used for Dragon Harvest bar',\n  ),\n\n  // BarsDisplay\n  BotBar: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Bottom bar OFF', 'Bottom bar ON'],\n    'Building information',\n    true,\n    () => {\n      ToggleBotBar();\n    },\n  ),\n  TimerBar: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Timer bar OFF', 'Timer bar ON'],\n    'Bar with timers for golden cookie, season popup, Frenzy (Normal, Clot, Elder), Click Frenzy',\n    true,\n    () => {\n      ToggleTimerBar();\n    },\n  ),\n  TimerBarPos: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Timer bar position (top left)', 'Timer bar position (bottom)'],\n    'Placement of the timer bar',\n    false,\n    () => {\n      ToggleTimerBarPos();\n    },\n  ),\n  TimerBarOverlay: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Timer bar overlay OFF', 'Timer bar overlay only seconds', 'Timer bar overlay full'],\n    'Overlay on timers displaying seconds and/or percentage left',\n    true,\n  ),\n  AutosaveTimerBar: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Autosave timer bar OFF', 'Autosave timer bar ON'],\n    'Show a timer counting down till next autosave in the timer bar',\n    true,\n  ),\n  UpBarColour: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Upgrade colours/bar OFF', 'Upgrade colours with bar ON', 'Upgrade colours without bar ON'],\n    'Colour code upgrades and optionally add a counter bar',\n    false,\n    () => {\n      ToggleUpgradeBarAndColour();\n    },\n  ),\n  UpgradeBarFixedPos: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Upgrade bar fixed position OFF', 'Upgrade bar fixed position ON'],\n    'Lock the upgrade bar at top of the screen to prevent it from moving ofscreen when scrolling',\n    true,\n    () => {\n      ToggleUpgradeBarFixedPos();\n    },\n  ),\n  SortBuildings: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    [\n      'Sort buildings: default',\n      'Sort buildings: PP of x1 purchase',\n      'Sort buildings: PP of selected bulk mode',\n      'Sort buildings: price until next achievement',\n    ],\n    'Sort the display of buildings in default order, by PP, or until next achievement',\n    false,\n    () => {\n      UpdateBuildings();\n    },\n  ),\n  SortUpgrades: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Sort upgrades: default', 'Sort upgrades: PP'],\n    'Sort the display of upgrades in either default order or by PP',\n    false,\n    () => {\n      UpdateUpgrades();\n    },\n  ),\n  UpgradesNeverCollapse: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Upgrades always expanded OFF', 'Upgrades always expanded ON'],\n    'Toggle to make the upgrades sections always expanded to the size needed to display all upgrades',\n    true,\n    () => {\n      UpdateUpgradeSectionsHeight();\n    },\n  ),\n  DragonAuraInfo: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Extra dragon aura info OFF', 'Extra dragon aura info ON'],\n    'Shows information about changes in CPS and costs in the dragon aura interface.',\n    true,\n  ),\n  GrimoireBar: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Grimoire magic meter timer OFF', 'Grimoire magic meter timer ON'],\n    'A timer overlay showing how long till the Grimoire magic meter is full',\n    true,\n  ),\n  GCTimer: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Golden cookie timer OFF', 'Golden cookie timer ON'],\n    'A timer on the golden cookie when it has been spawned',\n    true,\n    () => {\n      ToggleGCTimer();\n    },\n  ),\n  Favicon: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Favicon OFF', 'Favicon ON'],\n    'Update favicon with golden/wrath cookie',\n    true,\n    () => {\n      UpdateFavicon();\n    },\n  ),\n  WrinklerButtons: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Extra wrinkler buttons OFF', 'Extra wrinkler buttons ON'],\n    'Show buttons for popping wrinklers at bottom of cookie section',\n    true,\n    () => {\n      ToggleWrinklerButtons();\n    },\n  ),\n  HideSectionsButtons: new SettingStandard(\n    'bool',\n    'BarsDisplay',\n    ['Hide buildings/upgrades button OFF', 'Hide buildings/upgrades button ON'],\n    'Show buttons for hiding and showing the buildings and upgrades sections in the right column',\n    true,\n    () => {\n      ToggleSectionHideButtons();\n    },\n  ),\n\n  // Tooltip\n  TooltipBuildUpgrade: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Building/upgrade tooltip information OFF', 'Building/upgrade tooltip information ON'],\n    'Extra information in building/upgrade tooltips',\n    true,\n  ),\n  TooltipAmor: new SettingStandard(\n    'bool',\n    'Tooltip',\n    [\n      'Buildings tooltip amortization information OFF',\n      'Buildings tooltip amortization information ON',\n    ],\n    'Add amortization information to buildings tooltip',\n    true,\n  ),\n  ToolWarnLucky: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Tooltip lucky warning OFF', 'Tooltip lucky warning ON'],\n    'A warning when buying if it will put the bank under the amount needed for max \"Lucky!\" rewards',\n    true,\n  ),\n  ToolWarnLuckyFrenzy: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Tooltip lucky frenzy warning OFF', 'Tooltip lucky frenzy warning ON'],\n    'A warning when buying if it will put the bank under the amount needed for max \"Lucky!\" (Frenzy) rewards',\n    true,\n  ),\n  ToolWarnConjure: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Tooltip conjure warning OFF', 'Tooltip conjure warning ON'],\n    'A warning when buying if it will put the bank under the amount needed for max \"Conjure Baked Goods\" rewards',\n    true,\n  ),\n  ToolWarnConjureFrenzy: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Tooltip conjure frenzy warning OFF', 'Tooltip conjure frenzy warning ON'],\n    'A warning when buying if it will put the bank under the amount needed for max \"Conjure Baked Goods\" rewards with Frenzy active',\n    true,\n  ),\n  ToolWarnEdifice: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Tooltip edifice warning OFF', 'Tooltip edifice warning ON'],\n    'A warning when buying if it will put the bank under the amount needed for \"Spontaneous Edifice\" to possibly give you your most expensive building',\n    true,\n  ),\n  ToolWarnUser: new SettingInputNumber(\n    'numscale',\n    'Tooltip',\n    'Tooltip warning at x times CPS: ',\n    'Use this to show a customized warning if buying it will put the bank under the amount equal to value times cps; setting to 0 disables the function altogether',\n    0,\n    Infinity,\n  ),\n  ToolWarnBon: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Calculate tooltip warning with bonus CPS OFF', 'Calculate tooltip warning with bonus CPS ON'],\n    'Calculate the warning with or without the bonus CPS you get from buying',\n    true,\n  ),\n  ToolWarnPos: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Tooltip warning position (left)', 'Tooltip warning position (bottom)'],\n    'Placement of the warning boxes',\n    false,\n    () => {\n      ToggleToolWarnPos();\n    },\n  ),\n  TooltipGrim: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Grimoire tooltip information OFF', 'Grimoire tooltip information ON'],\n    'Extra information in tooltip for grimoire',\n    true,\n  ),\n  TooltipWrink: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Wrinkler tooltip OFF', 'Wrinkler tooltip ON'],\n    'Shows the amount of cookies a wrinkler will give when popping it',\n    true,\n  ),\n  TooltipLump: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Sugar lump tooltip OFF', 'Sugar lump tooltip ON'],\n    'Shows the current Sugar Lump type in Sugar lump tooltip.',\n    true,\n  ),\n  TooltipPlots: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Garden plots tooltip OFF', 'Garden plots tooltip ON'],\n    'Shows a tooltip for plants that have a cookie reward.',\n    true,\n  ),\n  TooltipPantheon: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Pantheon tooltip OFF', 'Pantheon tooltip ON'],\n    'Shows additional info in the pantheon tooltip',\n    true,\n  ),\n  TooltipAscendButton: new SettingStandard(\n    'bool',\n    'Tooltip',\n    ['Show Extra Info Ascend Tooltip OFF', 'Show Extra Info Ascend Tooltip ON'],\n    'Shows additional info in the ascend tooltip',\n    true,\n  ),\n\n  // Statistics\n  Stats: new SettingStandard(\n    'bool',\n    'Statistics',\n    ['Statistics OFF', 'Statistics ON'],\n    'Extra Cookie Monster statistics!',\n    true,\n  ),\n  MissingUpgrades: new SettingStandard(\n    'bool',\n    'Statistics',\n    ['Missing upgrades OFF', 'Missing upgrades ON'],\n    'Shows missing upgrades in statistics menu',\n    true,\n  ),\n  MissingAchievements: new SettingStandard(\n    'bool',\n    'Statistics',\n    ['Missing Achievements OFF', 'Missing Normal Achievements ON'],\n    'Shows missing normal achievements in statistics menu.',\n    true,\n  ),\n  UpStats: new SettingStandard(\n    'bool',\n    'Statistics',\n    ['Statistics update rate (default)', 'Statistics update rate (1s)'],\n    'Default rate is once every 5 seconds',\n    false,\n  ),\n  HeavenlyChipsTarget: new SettingInputNumber(\n    'numscale',\n    'Statistics',\n    'Heavenly chips target: ',\n    'Use this to set a heavenly chips target that will be counted towards in the \"prestige\" statsistics sections',\n    1,\n    Infinity,\n  ),\n  ShowMissedGC: new SettingStandard(\n    'bool',\n    'Statistics',\n    ['Missed GC OFF', 'Missed GC ON'],\n    'Show a stat in the statistics screen that counts how many golden cookies you have missed',\n    true,\n  ),\n\n  // Notification\n  Title: new SettingStandard(\n    'bool',\n    'NotificationGeneral',\n    ['Title OFF', 'Title ON', 'Title pinned tab highlight'],\n    'Update title with colden cookie/season popup timers; pinned tab highlight only changes the title when a golden cookie/season popup spawns; \"!\" means that golden cookie/reindeer can spawn',\n    true,\n  ),\n  GeneralSound: new SettingStandard(\n    'bool',\n    'NotificationGeneral',\n    ['Consider game volume setting OFF', 'Consider game volume setting ON'],\n    'Turning this toggle to \"off\" makes Cookie Monster no longer consider the volume setting of the base game, allowing mod notifications to play with base game volume turned down',\n    true,\n  ),\n  GCNotification: new SettingStandard(\n    'bool',\n    'NotificationGC',\n    ['Notification OFF', 'Notification ON'],\n    'Create a notification when golden cookie spawns',\n    true,\n    () => {\n      CheckNotificationPermissions(CMOptions.GCNotification);\n    },\n  ),\n  GCFlash: new SettingStandard(\n    'bool',\n    'NotificationGC',\n    ['Flash OFF', 'Flash ON'],\n    'Flash screen on golden cookie',\n    true,\n  ),\n  ColourGCFlash: new SettingColours(\n    'colour',\n    'NotificationGC',\n    'The colour of the GC flash, standard colour is white',\n  ),\n  GCSound: new SettingStandard(\n    'bool',\n    'NotificationGC',\n    ['Sound OFF', 'Sound ON'],\n    'Play a sound on golden cookie',\n    true,\n  ),\n  GCVolume: new SettingVolume('vol', 'NotificationGC', [], 'Volume'),\n  GCSoundURL: new SettingStandard(\n    'url',\n    'NotificationGC',\n    'Sound URL:',\n    'URL of the sound to be played when a golden cookie spawns',\n  ),\n  FortuneNotification: new SettingStandard(\n    'bool',\n    'NotificationFC',\n    ['Notification OFF', 'Notification ON'],\n    'Create a notification when fortune cookie is on the ticker',\n    true,\n    () => {\n      CheckNotificationPermissions(CMOptions.FortuneNotification);\n    },\n  ),\n  FortuneFlash: new SettingStandard(\n    'bool',\n    'NotificationFC',\n    ['Flash OFF', 'Flash ON'],\n    'Flash screen on fortune cookie spawn',\n    true,\n  ),\n  ColourFortuneFlash: new SettingColours(\n    'colour',\n    'NotificationFC',\n    'The colour of the fortune flash, standard colour is white',\n  ),\n  FortuneSound: new SettingStandard(\n    'bool',\n    'NotificationFC',\n    ['Sound OFF', 'Sound ON'],\n    'Play a sound on fortune cookie spawn',\n    true,\n  ),\n  FortuneVolume: new SettingVolume('vol', 'NotificationFC', [], 'Volume'),\n  FortuneSoundURL: new SettingStandard(\n    'url',\n    'NotificationFC',\n    'Sound URL:',\n    'URL of the sound to be played when the ticker has a fortune cookie',\n  ),\n  SeaNotification: new SettingStandard(\n    'bool',\n    'NotificationSea',\n    ['Notification OFF', 'Notification ON'],\n    'Create a notification on season popup',\n    true,\n    () => {\n      CheckNotificationPermissions(CMOptions.SeaNotification);\n    },\n  ),\n  SeaFlash: new SettingStandard(\n    'bool',\n    'NotificationSea',\n    ['Flash OFF', 'Flash ON'],\n    'Flash screen on season popup',\n    true,\n  ),\n  ColourSeaFlash: new SettingColours(\n    'colour',\n    'NotificationSea',\n    'The colour of the season popup flash, standard colour is white',\n  ),\n  SeaSound: new SettingStandard(\n    'bool',\n    'NotificationSea',\n    ['Sound OFF', 'Sound ON'],\n    'Play a sound on season popup',\n    true,\n  ),\n  SeaVolume: new SettingVolume('vol', 'NotificationSea', [], 'Volume'),\n  SeaSoundURL: new SettingStandard(\n    'url',\n    'NotificationSea',\n    'Sound URL:',\n    'URL of the sound to be played when on season popup spawns',\n  ),\n  GardFlash: new SettingStandard(\n    'bool',\n    'NotificationGard',\n    ['Garden Tick Flash OFF', 'Flash ON'],\n    'Flash screen on garden tick',\n    true,\n  ),\n  ColourGardFlash: new SettingColours(\n    'colour',\n    'NotificationGard',\n    'The colour of the garden flash, standard colour is white',\n  ),\n  GardSound: new SettingStandard(\n    'bool',\n    'NotificationGard',\n    ['Sound OFF', 'Sound ON'],\n    'Play a sound on garden tick',\n    true,\n  ),\n  GardVolume: new SettingVolume('vol', 'NotificationGard', [], 'Volume'),\n  GardSoundURL: new SettingStandard(\n    'url',\n    'NotificationGard',\n    'Garden Tick Sound URL:',\n    'URL of the sound to be played when the garden ticks',\n  ),\n  MagicNotification: new SettingStandard(\n    'bool',\n    'NotificationMagi',\n    ['Notification OFF', 'Notification ON'],\n    'Create a notification when magic reaches maximum',\n    true,\n    () => {\n      CheckNotificationPermissions(CMOptions.MagicNotification);\n    },\n  ),\n  MagicFlash: new SettingStandard(\n    'bool',\n    'NotificationMagi',\n    ['Flash OFF', 'Flash ON'],\n    'Flash screen when magic reaches maximum',\n    true,\n  ),\n  ColourMagicFlash: new SettingColours(\n    'colour',\n    'NotificationMagi',\n    'The colour of the magic flash, standard colour is white',\n  ),\n  MagicSound: new SettingStandard(\n    'bool',\n    'NotificationMagi',\n    ['Sound OFF', 'Sound ON'],\n    'Play a sound when magic reaches maximum',\n    true,\n  ),\n  MagicVolume: new SettingVolume('vol', 'NotificationMagi', [], 'Volume'),\n  MagicSoundURL: new SettingStandard(\n    'url',\n    'NotificationMagi',\n    'Sound URL:',\n    'URL of the sound to be played when magic reaches maxium',\n  ),\n  WrinklerNotification: new SettingStandard(\n    'bool',\n    'NotificationWrink',\n    ['Notification OFF', 'Notification ON'],\n    'Create a notification when a wrinkler appears',\n    true,\n    () => {\n      CheckNotificationPermissions(CMOptions.WrinklerNotification);\n    },\n  ),\n  WrinklerFlash: new SettingStandard(\n    'bool',\n    'NotificationWrink',\n    ['Flash OFF', 'Flash ON'],\n    'Flash screen when a wrinkler appears',\n    true,\n  ),\n  ColourWrinklerFlash: new SettingColours(\n    'colour',\n    'NotificationWrink',\n    'The colour of the wrinkler flash, standard colour is white',\n  ),\n  WrinklerSound: new SettingStandard(\n    'bool',\n    'NotificationWrink',\n    ['Sound OFF', 'Sound ON'],\n    'Play a sound when a wrinkler appears',\n    true,\n  ),\n  WrinklerVolume: new SettingVolume('vol', 'NotificationWrink', [], 'Volume'),\n  WrinklerSoundURL: new SettingStandard(\n    'url',\n    'NotificationWrink',\n    'Sound URL:',\n    'URL of the sound to be played when a wrinkler appears',\n  ),\n  WrinklerMaxNotification: new SettingStandard(\n    'bool',\n    'NotificationWrinkMax',\n    ['Notification OFF', 'Notification ON'],\n    'Create a notification when the maximum amount of wrinklers has appeared',\n    true,\n    () => {\n      CheckNotificationPermissions(CMOptions.WrinklerMaxNotification);\n    },\n  ),\n  WrinklerMaxFlash: new SettingStandard(\n    'bool',\n    'NotificationWrinkMax',\n    ['Flash OFF', 'Flash ON'],\n    'Flash screen when the maximum amount of Wrinklers has appeared',\n    true,\n  ),\n  ColourWrinklerMaxFlash: new SettingColours(\n    'colour',\n    'NotificationWrinkMax',\n    'The colour of the maximum wrinkler flash, standard colour is white',\n  ),\n  WrinklerMaxSound: new SettingStandard(\n    'bool',\n    'NotificationWrinkMax',\n    ['Sound OFF', 'Sound ON'],\n    'Play a sound when the maximum amount of wrinklers has appeared',\n    true,\n  ),\n  WrinklerMaxVolume: new SettingVolume('vol', 'NotificationWrinkMax', [], 'Volume'),\n  WrinklerMaxSoundURL: new SettingStandard(\n    'url',\n    'NotificationWrinkMax',\n    'Sound URL:',\n    'URL of the sound to be played when the maximum amount of wrinklers has appeared',\n  ),\n\n  // Miscellaneous\n  BulkBuyBlock: new SettingStandard(\n    'bool',\n    'Miscellaneous',\n    ['Block bulk buying OFF', 'Block bulk buying ON'],\n    \"Block clicking bulk buying when you can't buy all. This prevents buying 7 of a building when you are in buy-10 or buy-100 mode.\",\n    true,\n  ),\n  FavouriteSettings: new SettingStandard(\n    'bool',\n    'Miscellaneous',\n    [\n      'Favourite settings section OFF',\n      'Favourite settings section ON',\n      'Favourite settings section ON (Locked)',\n    ],\n    \"Show stars before each setting which allows selecting it for a 'favourites' section at the top of the Cookie Monster settings. Setting this to Locked removes the stars but shows the 'favourites' section\",\n    true,\n    () => {\n      Game.UpdateMenu();\n    },\n  ),\n};\n\nexport default Config;\n","import { CMSayTime } from '../../Disp/VariablesAndData';\nimport { BackupFunctions } from '../../Main/VariablesAndData';\nimport { CMOptions } from '../VariablesAndData';\n\n/**\n * This function changes some of the time-displays in the game to be more detailed\n * It is called by a change in CM.Options.DetailedTime\n */\nexport default function ToggleDetailedTime() {\n  if (CMOptions.DetailedTime === 1) Game.sayTime = CMSayTime;\n  else Game.sayTime = BackupFunctions.sayTime;\n}\n","import UpdateUpgrades from '../../Disp/BuildingsUpgrades/Upgrades';\nimport { CMOptions } from '../VariablesAndData';\n\n/**\n * This function toggles the upgrade bar and the colours of upgrades\n * It is called by a change in CM.Options.UpBarColor\n */\nexport default function ToggleUpgradeBarAndColor() {\n  if (CMOptions.UpBarColor === 1) {\n    // Colours and bar on\n    l('CMUpgradeBar').style.display = '';\n    UpdateUpgrades();\n  } else if (CMOptions.UpBarColor === 2) {\n    // Colours on and bar off\n    l('CMUpgradeBar').style.display = 'none';\n    UpdateUpgrades();\n  } else {\n    // Colours and bar off\n    l('CMUpgradeBar').style.display = 'none';\n    Game.RebuildUpgrades();\n  }\n}\n","import { CMOptions } from '../VariablesAndData';\n\n/**\n * This function toggles the position of the upgrade bar from fixed or non-fixed mode\n * It is called by a change in CM.Options.UpgradeBarFixedPos\n */\nexport default function ToggleUpgradeBarFixedPos() {\n  if (CMOptions.UpgradeBarFixedPos === 1) {\n    // Fix to top of screen when scrolling\n    l('CMUpgradeBar').style.position = 'sticky';\n    l('CMUpgradeBar').style.top = '0px';\n  } else {\n    l('CMUpgradeBar').style.position = ''; // Possible to scroll offscreen\n  }\n}\n","import { CacheGoldenShimmersByID } from '../../Cache/VariablesAndData';\nimport { GCTimers } from '../../Disp/VariablesAndData';\nimport { CMOptions } from '../VariablesAndData';\n\n/**\n * This function toggles GC Timers are visible\n * It is called by a change in CM.Options.GCTimer\n */\nexport default function ToggleGCTimer() {\n  if (CMOptions.GCTimer === 1) {\n    Object.keys(GCTimers).forEach((i) => {\n      GCTimers[i].style.display = 'block';\n      GCTimers[i].style.left = CacheGoldenShimmersByID[i].l.style.left;\n      GCTimers[i].style.top = CacheGoldenShimmersByID[i].l.style.top;\n    });\n  } else {\n    // eslint-disable-next-line no-return-assign\n    Object.keys(GCTimers).forEach((i) => (GCTimers[i].style.display = 'none'));\n  }\n}\n","import { CMOptions } from '../VariablesAndData';\n\n/**\n * This function updates the display setting of the two objects created by CM.Disp.CreateWrinklerButtons()\n * It is called by changes in CM.Options.WrinklerButtons\n */\nexport default function ToggleSectionHideButtons() {\n  if (CMOptions.HideSectionsButtons) {\n    l('CMSectionHidButtons').style.display = '';\n  } else {\n    l('CMSectionHidButtons').style.display = 'none';\n  }\n}\n","import { CMOptions } from '../Config/VariablesAndData';\nimport { VersionMajor, VersionMinor } from '../Data/Moddata.ts';\nimport { FavouriteSettings } from '../Disp/VariablesAndData';\n\n/**\n * This creates a save function to the CM object. Per Game code/comments:\n * \"use this to store persistent data associated with your mod\n * return 'a string to be saved';\"\n */\nexport default function save() {\n  return JSON.stringify({\n    favouriteSettings: FavouriteSettings,\n    settings: CMOptions,\n    version: `${VersionMajor}.${VersionMinor}`,\n  });\n}\n","/** Functions related to the Dragon */\n\nimport Beautify from '../../Disp/BeautifyAndFormatting/Beautify';\nimport CopyData from '../../Sim/SimulationData/CopyData';\nimport { SimDoSims, SimObjects } from '../../Sim/VariablesAndData';\nimport { CacheCostDragonUpgrade, CacheLastDragonLevel } from '../VariablesAndData'; // eslint-disable-line no-unused-vars\n\n/**\n * This functions caches the current cost of upgrading the dragon level so it can be displayed in the tooltip\n */\nexport default function CacheDragonCost() {\n  if (CacheLastDragonLevel !== Game.dragonLevel || SimDoSims) {\n    if (\n      Game.dragonLevel < 25 &&\n      Game.dragonLevels[Game.dragonLevel].buy.toString().includes('sacrifice')\n    ) {\n      let target = Game.dragonLevels[Game.dragonLevel].buy.toString().match(/Objects\\[(.*)\\]/)[1];\n      const amount = Game.dragonLevels[Game.dragonLevel].buy\n        .toString()\n        .match(/sacrifice\\((.*?)\\)/)[1];\n      if (target !== 'i') {\n        target = target.replaceAll(\"'\", '');\n        if (Game.Objects[target].amount < amount) {\n          CacheCostDragonUpgrade = 'Not enough buildings to sell';\n        } else {\n          let cost = 0;\n          CopyData();\n          for (let i = 0; i < amount; i++) {\n            let price =\n              SimObjects[target].basePrice *\n              Game.priceIncrease **\n                Math.max(0, SimObjects[target].amount - 1 - SimObjects[target].free);\n            price = Game.modifyBuildingPrice(SimObjects[target], price);\n            price = Math.ceil(price);\n            cost += price;\n            SimObjects[target].amount -= 1;\n          }\n          CacheCostDragonUpgrade = `Cost to rebuy: ${Beautify(cost)}`;\n        }\n      } else {\n        let cost = 0;\n        CopyData();\n        Object.keys(Game.Objects).forEach((j) => {\n          target = j;\n          if (Game.Objects[target].amount < amount) {\n            CacheCostDragonUpgrade = 'Not enough buildings to sell';\n            return;\n          }\n          for (let i = 0; i < amount; i++) {\n            let price =\n              SimObjects[target].basePrice *\n              Game.priceIncrease **\n                Math.max(0, SimObjects[target].amount - 1 - SimObjects[target].free);\n            price = Game.modifyBuildingPrice(SimObjects[target], price);\n            price = Math.ceil(price);\n            cost += price;\n            SimObjects[target].amount -= 1;\n          }\n          CacheCostDragonUpgrade = `Cost to rebuy: ${Beautify(cost)}`;\n        });\n      }\n    }\n    CacheLastDragonLevel = Game.dragonLevel;\n  }\n}\n","import CalculateGains from '../Calculations/CalculateGains';\nimport CheckOtherAchiev from '../Calculations/CheckOtherAchiev';\nimport CopyData from '../SimulationData/CopyData';\nimport { SimAchievementsOwned, SimCookiesPs, SimGod1, SimGod2, SimGod3 } from '../VariablesAndData'; // eslint-disable-line no-unused-vars\n\n/**\n * This functions calculates the cps and cost of changing a Dragon Aura\n * It is called by CM.Disp.AddAuraInfo()\n * @param\t{number}\tgod\t\tThe number of the slot to be swapped in\n * @param\t{number     slot\tThe slot the god will go to\n * @returns {number} \tCM.Sim.cookiesPs - Game.cookiesPs   The bonus cps and the price of the change\n */\nexport default function CalculateChangeGod(god, slot) {\n  if (!Game.Objects.Temple.minigameLoaded) return 0;\n  CopyData();\n  const { minigame } = Game.Objects.Temple;\n  const CurrentSlot = minigame.godsById[god].slot;\n  if (CurrentSlot === '0') SimGod1 = minigame.slot[slot];\n  else if (CurrentSlot === '1') SimGod2 = minigame.slot[slot];\n  else if (CurrentSlot === '2') SimGod3 = minigame.slot[slot];\n  /* eslint-disable no-unused-vars */\n  if (slot === 0) SimGod1 = god;\n  else if (slot === 1) SimGod2 = god;\n  else if (slot === 2) SimGod3 = god;\n  /* eslint-enable no-unused-vars */\n\n  const lastAchievementsOwned = SimAchievementsOwned;\n  CalculateGains();\n\n  CheckOtherAchiev();\n  if (lastAchievementsOwned !== SimAchievementsOwned) {\n    CalculateGains();\n  }\n  return SimCookiesPs - Game.cookiesPs;\n}\n","/** Functions used to create static objects of Buildings, Upgrades and Achievements */\n\nimport CopyData from '../SimulationData/CopyData';\nimport { SimAchievements, SimObjects, SimUpgrades } from '../VariablesAndData';\nimport InitAchievement from './InitAchievement';\nimport InitialBuildingData from './InitialBuildingData';\nimport InitUpgrade from './InitUpgrade';\n\n/**\n * This function creates static objects for Buildings, Upgrades and Achievements\n */\nexport default function InitData() {\n  // Buildings\n  SimObjects = [];\n  Object.keys(Game.Objects).forEach((i) => {\n    SimObjects[i] = InitialBuildingData(i);\n  });\n\n  // Upgrades\n  SimUpgrades = [];\n  Object.keys(Game.Upgrades).forEach((i) => {\n    SimUpgrades[i] = InitUpgrade(i);\n  });\n\n  // Achievements\n  SimAchievements = [];\n  Object.keys(Game.Achievements).forEach((i) => {\n    SimAchievements[i] = InitAchievement(i);\n  });\n  CopyData();\n}\n","/** Variable that shows if Cookie Moonster is initzializing */\nexport let isInitializing = false; // eslint-disable-line prefer-const\nexport let test;\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport { isInitializing } from '../../InitSaveLoad/Variables';\n\n/**\n * This function creates a flash depending on configs. It is called by all functions\n * that check game-events and which have settings for Flashes (e.g., Golden Cookies appearing, Magic meter being full)\n * @param\t{number}\tmode\tSets the intensity of the flash, used to recursively dim flash\n * \t\t\t\t\t\t\t\tAll calls of function have use mode === 3\n * @param\t{string}\tconfig\tThe setting in CM.Options that is checked before creating the flash\n * @param\t{bool}    forced\t\tWhether the sound should play regardless of settings, used to test the sound\n */\nexport default function Flash(mode, config, forced) {\n  // The arguments check makes the sound not play upon initialization of the mod\n  if (\n    ((CMOptions[config] === 1 || forced) && mode === 3 && isInitializing === false) ||\n    mode === 1\n  ) {\n    l('CMFlashScreen').style.backgroundColor = CMOptions[`Colour${config}`];\n    l('CMFlashScreen').style.opacity = '0.5';\n    if (mode === 3) {\n      l('CMFlashScreen').style.display = 'inline';\n      setTimeout(() => {\n        Flash(2, config, true);\n      }, 1000 / Game.fps);\n    } else {\n      setTimeout(() => {\n        Flash(0, config, true);\n      }, 1000 / Game.fps);\n    }\n  } else if (mode === 2) {\n    l('CMFlashScreen').style.opacity = '1';\n    setTimeout(() => {\n      Flash(1, config, true);\n    }, 1000 / Game.fps);\n  } else if (mode === 0) l('CMFlashScreen').style.display = 'none';\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport { isInitializing } from '../../InitSaveLoad/Variables';\n\n/**\n * This function plays a sound depending on configs. It is called by all functions\n * that check game-events and which have settings for sound (e.g., Golden Cookies appearing, Magic meter being full)\n * @param\t{variable}\turl\t\t\tA variable that gives the url for the sound (e.g., CM.Options.GCSoundURL)\n * @param\t{string}\tsndConfig\tThe setting in CM.Options that is checked before creating the sound\n * @param\t{string}\tvolConfig\tThe setting in CM.Options that is checked to determine volume\n * @param\t{bool}    forced\t\tWhether the sound should play regardless of settings, used to test the sound\n */\nexport default function PlaySound(url, sndConfig, volConfig, forced) {\n  // The arguments check makes the sound not play upon initialization of the mod\n  if ((CMOptions[sndConfig] === 1 || forced) && isInitializing === false) {\n    // eslint-disable-next-line new-cap\n    const sound = new Audio(url);\n    if (CMOptions.GeneralSound) sound.volume = (CMOptions[volConfig] / 100) * (Game.volume / 100);\n    else sound.volume = CMOptions[volConfig] / 100;\n    sound.play();\n  }\n}\n","/** Functions related to the flashes/sound/notifications */\n\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport { isInitializing } from '../../InitSaveLoad/Variables';\n\n/**\n * This function creates a notifcation depending on configs. It is called by all functions\n * that check game-events and which have settings for notifications (e.g., Golden Cookies appearing, Magic meter being full)\n * @param\t{string}\tnotifyConfig\tThe setting in CM.Options that is checked before creating the notification\n * @param\t{string}\ttitle\t\t\tThe title of the to-be created notifications\n * @param\t{string}\tmessage\t\t\tThe text of the to-be created notifications\n */\nexport default function CreateNotification(notifyConfig, title, message) {\n  // The arguments check makes the sound not play upon initialization of the mod\n  if (\n    CMOptions[notifyConfig] === 1 &&\n    document.visibilityState === 'hidden' &&\n    isInitializing === false\n  ) {\n    const CookieIcon = 'https://orteil.dashnet.org/cookieclicker/favicon.ico';\n    // eslint-disable-next-line no-new\n    new Notification(title, { body: message, badge: CookieIcon });\n  }\n}\n","import InitCache from '../Cache/CacheInit';\nimport LoopCache from '../Cache/CacheLoop';\nimport CacheNoGoldSwitchCPS from '../Cache/CPS/NoGoldSwitchCPS';\nimport CacheSellAllForChoEgg from '../Cache/CPS/SellChoEgg';\nimport CacheDragonCost from '../Cache/Dragon/Dragon';\nimport CachePantheonGods from '../Cache/PantheonGods/CacheGods';\nimport { CacheBuildingsPrices, CacheIncome } from '../Cache/PriceAndIncome/PriceAndIncome';\nimport { CacheChain } from '../Cache/Stats/ChainCookies';\nimport CacheAllMissingUpgrades from '../Cache/Stats/MissingUpgrades';\nimport CacheSeasonSpec from '../Cache/Stats/Reindeer';\nimport { CacheGoldenAndWrathCookiesMults, CacheStatsCookies } from '../Cache/Stats/Stats';\nimport AllAmountTillNextAchievement from '../Cache/TillNextAchievement/AllAmountTillNextAchievement';\nimport { CacheDoRemakeBuildPrices, CacheHadBuildAura } from '../Cache/VariablesAndData';\nimport UpdateAscendState from '../Disp/HelperFunctions/UpdateAscendState';\nimport { LastAscendState } from '../Disp/VariablesAndData';\nimport InitData from '../Sim/InitializeData/InitData';\nimport { SimDoSims } from '../Sim/VariablesAndData';\nimport CheckGardenTick from './CheckStates/Garden';\nimport CheckGoldenCookie from './CheckStates/GoldenCookie';\nimport CheckMagicMeter from './CheckStates/Grimoire';\nimport CheckSeasonPopup from './CheckStates/Season';\nimport CheckTickerFortune from './CheckStates/Ticker';\nimport CheckWrinklerCount from './CheckStates/Wrinkler';\nimport { LastModCount } from './VariablesAndData';\n\n/**\n * Main loop of Cookie Monster\n * CM.init registers it to the \"logic\" hook provided by the modding api\n */\nexport default function CMLoopHook() {\n  if (LastAscendState !== Game.OnAscend) {\n    LastAscendState = Game.OnAscend;\n    UpdateAscendState();\n  }\n  if (!Game.OnAscend && Game.AscendTimer === 0) {\n    // Check if any other mods have been loaded\n    if (LastModCount !== Object.keys(Game.mods).length) {\n      InitData();\n      InitCache();\n      LastModCount = Object.keys(Game.mods).length;\n    }\n\n    // CM.Sim.DoSims is set whenever CPS has changed\n    if (SimDoSims) {\n      AllAmountTillNextAchievement(true);\n      CacheIncome();\n\n      CacheNoGoldSwitchCPS(); // Needed first\n      CacheGoldenAndWrathCookiesMults();\n      CacheStatsCookies();\n      CacheAllMissingUpgrades();\n      CacheChain();\n      CacheDragonCost();\n      CachePantheonGods();\n\n      CacheSeasonSpec();\n      CacheSellAllForChoEgg();\n\n      SimDoSims = 0;\n    }\n\n    // Check for aura change to recalculate buildings prices\n    const hasBuildAura = Game.auraMult('Fierce Hoarder') > 0;\n    if (!CacheHadBuildAura && hasBuildAura) {\n      CacheHadBuildAura = true;\n      CacheDoRemakeBuildPrices = 1;\n    } else if (CacheHadBuildAura && !hasBuildAura) {\n      CacheHadBuildAura = false;\n      CacheDoRemakeBuildPrices = 1;\n    }\n\n    if (CacheDoRemakeBuildPrices) {\n      CacheBuildingsPrices();\n      CacheDoRemakeBuildPrices = 0;\n    }\n\n    LoopCache();\n\n    // Check all changing minigames and game-states\n    CheckTickerFortune();\n    CheckSeasonPopup();\n    CheckGardenTick();\n    CheckMagicMeter();\n    CheckWrinklerCount();\n  }\n  // To remove Timers when ascending\n  CheckGoldenCookie();\n}\n","import { ToggleTimerBar } from '../../Config/SpecificToggles';\nimport ToggleBotBar from '../../Config/Toggles/ToggleBotBar';\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport UpdateBackground from './UpdateBackground';\n\n/**\n * This function disables and shows the bars created by CookieMonster when the game is \"ascending\"\n * It is called by CM.Disp.Draw()\n */\nexport default function UpdateAscendState() {\n  if (Game.OnAscend) {\n    l('game').style.bottom = '0px';\n    if (CMOptions.BotBar === 1) l('CMBotBar').style.display = 'none';\n    if (CMOptions.TimerBar === 1) l('CMTimerBar').style.display = 'none';\n  } else {\n    ToggleBotBar();\n    ToggleTimerBar();\n  }\n  UpdateBackground();\n}\n","import CalcNoGoldSwitchCPS from '../../Sim/Calculations/NoGoldenSwitchCalc';\nimport { CacheNoGoldSwitchCookiesPS } from '../VariablesAndData'; // eslint-disable-line no-unused-vars\n\n/**\n * This function calculates CPS without the Golden Switch as it might be needed in other functions\n * If so it CM.Sim.Win()'s them and the caller function will know to recall CM.Sim.CalculateGains()\n * It is called at the end of any functions that simulates certain behaviour\n */\nexport default function CacheNoGoldSwitchCPS() {\n  if (Game.Has('Golden switch [off]')) {\n    CacheNoGoldSwitchCookiesPS = CalcNoGoldSwitchCPS();\n  } else CacheNoGoldSwitchCookiesPS = Game.cookiesPs;\n}\n","import CopyData from '../SimulationData/CopyData';\nimport { SimCookiesPs, SimUpgrades } from '../VariablesAndData';\nimport CalculateGains from './CalculateGains';\n\n/**\n * This function calculates CPS without the Golden Switch\n * It is called by CM.Cache.NoGoldSwitchCPS()\n */\nexport default function CalcNoGoldSwitchCPS() {\n  CopyData();\n  SimUpgrades['Golden switch [off]'].bought = 0;\n  CalculateGains();\n  return SimCookiesPs;\n}\n","import CalculateChangeGod from '../../Sim/SimulationEvents/GodChange';\nimport { CacheGods } from '../VariablesAndData';\n\n/**\n * This functions caches the cps effect of each God in slot 1, 2 or 3\n */\nexport default function CachePantheonGods() {\n  for (let god = 0; god < 11; god += 1) {\n    for (let slot = 0; slot < 3; slot += 1) {\n      CacheGods[god][slot] = CalculateChangeGod(god, slot);\n    }\n  }\n}\n","import SellBuildingsForChoEgg from '../../Sim/SimulationEvents/SellBuildingForChoEgg';\nimport { CacheSellForChoEgg } from '../VariablesAndData'; // eslint-disable-line no-unused-vars\n\n/**\n * This functions caches the reward for selling the Chocolate egg\n * It is called by CM.Main.Loop()\n * @global\t{number}\tCM.Cache.SellForChoEgg\tTotal cookies to be gained from selling Chocolate egg\n */\nexport default function CacheSellAllForChoEgg() {\n  let sellTotal = 0;\n  // Compute cookies earned by selling stock market goods\n  if (Game.Objects.Bank.minigameLoaded) {\n    const marketGoods = Game.Objects.Bank.minigame.goods;\n    let goodsVal = 0;\n    Object.keys(marketGoods).forEach((i) => {\n      const marketGood = marketGoods[i];\n      goodsVal += marketGood.stock * marketGood.val;\n    });\n    sellTotal += goodsVal * Game.cookiesPsRawHighest;\n  }\n  // Compute cookies earned by selling all buildings with optimal auras (ES + RB)\n  sellTotal += SellBuildingsForChoEgg();\n  CacheSellForChoEgg = sellTotal;\n}\n","import CopyData from '../SimulationData/CopyData';\nimport { SimBuildingsOwned, SimDragonAura, SimDragonAura2, SimObjects } from '../VariablesAndData'; // eslint-disable-line no-unused-vars\nimport BuildingSell from './SellBuilding';\n\n/**\n * This function calculates the maximum cookies obtained from selling buildings just before purchasing the chocolate egg\n * It is called by CM.Cache.CacheSellForChoEgg()\n * @returns\t{number}\tsellTotal\tThe maximum cookies to be earned\n */\nexport default function SellBuildingsForChoEgg() {\n  let sellTotal = 0;\n\n  CopyData();\n\n  // Change auras to Earth Shatterer + Reality bending to optimize money made by selling\n  let buildingsToSacrifice = 2;\n  if (SimDragonAura === 5 || SimDragonAura === 18) {\n    buildingsToSacrifice -= 1;\n  }\n  if (SimDragonAura2 === 5 || SimDragonAura2 === 18) {\n    buildingsToSacrifice -= 1;\n  }\n  SimDragonAura = 5;\n  SimDragonAura2 = 18;\n\n  // Sacrifice highest buildings for the aura switch\n  for (let i = 0; i < buildingsToSacrifice; ++i) {\n    let highestBuilding = 'Cursor';\n    Object.keys(SimObjects).forEach((j) => {\n      if (SimObjects[j].amount > 0) {\n        highestBuilding = j;\n      }\n    });\n    SimObjects[highestBuilding].amount -= 1;\n    SimBuildingsOwned -= 1;\n  }\n\n  // Get money made by selling all remaining buildings\n  Object.keys(SimObjects).forEach((i) => {\n    const me = SimObjects[i];\n    sellTotal += BuildingSell(\n      Game.Objects[me.name],\n      Game.Objects[i].basePrice,\n      me.amount,\n      Game.Objects[i].free,\n      me.amount,\n    );\n  });\n\n  return sellTotal;\n}\n","import FormatTime from '../Disp/BeautifyAndFormatting/FormatTime';\nimport GetCPS from '../Disp/HelperFunctions/GetCPS';\nimport CacheAvgCPS from './CPS/CPS';\nimport CacheCurrWrinklerCPS from './CPS/CurrWrinklerCPS';\nimport CachePP from './PP/PP';\nimport CacheHeavenlyChipsPS from './Stats/HeavenlyChips';\nimport AllAmountTillNextAchievement from './TillNextAchievement/AllAmountTillNextAchievement';\nimport { CacheTimeTillNextPrestige } from './VariablesAndData'; // eslint-disable-line no-unused-vars\nimport CacheWrinklers from './Wrinklers/Wrinklers';\n\n/**\n * This functions caches variables that are needed every loop\n * @global\t{string}\tCM.Cache.TimeTillNextPrestige\tTime requried till next prestige level\n */\nexport default function LoopCache() {\n  // Update Wrinkler Bank\n  CacheWrinklers();\n\n  CachePP();\n  AllAmountTillNextAchievement(false);\n  CacheCurrWrinklerCPS();\n  CacheAvgCPS();\n  CacheHeavenlyChipsPS();\n\n  const cookiesToNext =\n    Game.HowManyCookiesReset(\n      Math.floor(Game.HowMuchPrestige(Game.cookiesReset + Game.cookiesEarned)) + 1,\n    ) -\n    (Game.cookiesEarned + Game.cookiesReset);\n  CacheTimeTillNextPrestige = FormatTime(cookiesToNext / GetCPS());\n}\n","import { SimObjects } from '../../Sim/VariablesAndData';\nimport { CacheCurrWrinklerCount, CacheCurrWrinklerCPSMult } from '../VariablesAndData'; // eslint-disable-line no-unused-vars\n\n/**\n * This functions caches the current Wrinkler CPS multiplier\n * @global\t{number}\tCM.Cache.CurrWrinklerCount\t\tCurrent number of wrinklers\n * @global\t{number}\tCM.Cache.CurrWrinklerCPSMult\tCurrent multiplier of CPS because of wrinklers (excluding their negative sucking effect)\n */\nexport default function CacheCurrWrinklerCPS() {\n  CacheCurrWrinklerCPSMult = 0;\n  let count = 0;\n  Object.keys(Game.wrinklers).forEach((i) => {\n    if (Game.wrinklers[i].phase === 2) count += 1;\n  });\n  let godMult = 1;\n  if (SimObjects.Temple.minigameLoaded) {\n    const godLvl = Game.hasGod('scorn');\n    if (godLvl === 1) godMult *= 1.15;\n    else if (godLvl === 2) godMult *= 1.1;\n    else if (godLvl === 3) godMult *= 1.05;\n  }\n  CacheCurrWrinklerCount = count;\n  CacheCurrWrinklerCPSMult =\n    count *\n    (count * 0.05 * 1.1) *\n    (Game.Has('Sacrilegious corruption') * 0.05 + 1) *\n    (Game.Has('Wrinklerspawn') * 0.05 + 1) *\n    godMult;\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport Flash from '../../Disp/Notifications/Flash';\nimport CreateNotification from '../../Disp/Notifications/Notification';\nimport PlaySound from '../../Disp/Notifications/Sound';\nimport { LastTickerFortuneState } from '../VariablesAndData';\n\n/**\n * This function checks if there is a fortune cookie on the ticker\n * It is called by CM.Main.Loop\n */\nexport default function CheckTickerFortune() {\n  if (LastTickerFortuneState !== (Game.TickerEffect && Game.TickerEffect.type === 'fortune')) {\n    LastTickerFortuneState = Game.TickerEffect && Game.TickerEffect.type === 'fortune';\n    if (LastTickerFortuneState) {\n      Flash(3, 'FortuneFlash', false);\n      PlaySound(CMOptions.FortuneSoundURL, 'FortuneSound', 'FortuneVolume', false);\n      CreateNotification(\n        'FortuneNotification',\n        'Fortune Cookie found',\n        'A Fortune Cookie has appeared on the Ticker.',\n      );\n    }\n  }\n}\n","import { CacheSeasonPopShimmer } from '../../Cache/VariablesAndData'; // eslint-disable-line no-unused-vars\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport Flash from '../../Disp/Notifications/Flash';\nimport CreateNotification from '../../Disp/Notifications/Notification';\nimport PlaySound from '../../Disp/Notifications/Sound';\nimport { LastSeasonPopupState } from '../VariablesAndData';\n\n/**\n * This function checks if there is reindeer that has spawned\n * It is called by CM.Main.Loop\n */\nexport default function CheckSeasonPopup() {\n  if (LastSeasonPopupState !== Game.shimmerTypes.reindeer.spawned) {\n    LastSeasonPopupState = Game.shimmerTypes.reindeer.spawned;\n    Object.keys(Game.shimmers).forEach((i) => {\n      if (Game.shimmers[i].spawnLead && Game.shimmers[i].type === 'reindeer') {\n        CacheSeasonPopShimmer = Game.shimmers[i];\n      }\n    });\n    Flash(3, 'SeaFlash', false);\n    PlaySound(CMOptions.SeaSoundURL, 'SeaSound', 'SeaVolume', false);\n    CreateNotification(\n      'SeaNotification',\n      'Reindeer sighted!',\n      'A Reindeer has spawned. Click it now!',\n    );\n  }\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport Flash from '../../Disp/Notifications/Flash';\nimport PlaySound from '../../Disp/Notifications/Sound';\nimport { LastGardenNextStep } from '../VariablesAndData';\n\n/**\n * This function checks if a garden tick has happened\n */\nexport default function CheckGardenTick() {\n  if (\n    Game.Objects.Farm.minigameLoaded &&\n    LastGardenNextStep !== Game.Objects.Farm.minigame.nextStep\n  ) {\n    if (LastGardenNextStep !== 0 && LastGardenNextStep < Date.now()) {\n      Flash(3, 'GardFlash', false);\n      PlaySound(CMOptions.GardSoundURL, 'GardSound', 'GardVolume', false);\n    }\n    LastGardenNextStep = Game.Objects.Farm.minigame.nextStep;\n  }\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport Flash from '../../Disp/Notifications/Flash';\nimport CreateNotification from '../../Disp/Notifications/Notification';\nimport PlaySound from '../../Disp/Notifications/Sound';\nimport { LastMagicBarFull } from '../VariablesAndData';\n\n/**\n * This function checks if the magic meter is full\n * It is called by CM.Main.Loop\n */\nexport default function CheckMagicMeter() {\n  if (Game.Objects['Wizard tower'].minigameLoaded && CMOptions.GrimoireBar === 1) {\n    const { minigame } = Game.Objects['Wizard tower'];\n    if (minigame.magic < minigame.magicM) LastMagicBarFull = false;\n    else if (!LastMagicBarFull) {\n      LastMagicBarFull = true;\n      Flash(3, 'MagicFlash', false);\n      PlaySound(CMOptions.MagicSoundURL, 'MagicSound', 'MagicVolume', false);\n      CreateNotification(\n        'MagicNotification',\n        'Magic Meter full',\n        'Your Magic Meter is full. Cast a spell!',\n      );\n    }\n  }\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport Flash from '../../Disp/Notifications/Flash';\nimport CreateNotification from '../../Disp/Notifications/Notification';\nimport PlaySound from '../../Disp/Notifications/Sound';\nimport { LastWrinklerCount } from '../VariablesAndData';\n\n/**\n * This function checks if any new Wrinklers have popped up\n * It is called by CM.Main.Loop\n */\nexport default function CheckWrinklerCount() {\n  if (Game.elderWrath > 0) {\n    let CurrentWrinklers = 0;\n    Object.keys(Game.wrinklers).forEach((i) => {\n      if (Game.wrinklers[i].phase === 2) CurrentWrinklers += 1;\n    });\n    if (CurrentWrinklers > LastWrinklerCount) {\n      LastWrinklerCount = CurrentWrinklers;\n      if (CurrentWrinklers === Game.getWrinklersMax() && CMOptions.WrinklerMaxFlash) {\n        Flash(3, 'WrinklerMaxFlash', false);\n      } else {\n        Flash(3, 'WrinklerFlash', false);\n      }\n      if (CurrentWrinklers === Game.getWrinklersMax() && CMOptions.WrinklerMaxSound) {\n        PlaySound(CMOptions.WrinklerMaxSoundURL, 'WrinklerMaxSound', 'WrinklerMaxVolume', false);\n      } else {\n        PlaySound(CMOptions.WrinklerSoundURL, 'WrinklerSound', 'WrinklerVolume', false);\n      }\n      if (CurrentWrinklers === Game.getWrinklersMax() && CMOptions.WrinklerMaxNotification) {\n        CreateNotification(\n          'WrinklerMaxNotification',\n          'Maximum Wrinklers Reached',\n          'You have reached your maximum ammount of wrinklers',\n        );\n      } else {\n        CreateNotification(\n          'WrinklerNotification',\n          'A Wrinkler appeared',\n          'A new wrinkler has appeared',\n        );\n      }\n    } else {\n      LastWrinklerCount = CurrentWrinklers;\n    }\n  }\n}\n","import { CacheSpawnedGoldenShimmer, CacheGoldenShimmersByID } from '../../Cache/VariablesAndData'; // eslint-disable-line no-unused-vars\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport CreateGCTimer from '../../Disp/GoldenCookieTimers/GoldenCookieTimers';\nimport Flash from '../../Disp/Notifications/Flash';\nimport CreateNotification from '../../Disp/Notifications/Notification';\nimport PlaySound from '../../Disp/Notifications/Sound';\nimport { UpdateFavicon } from '../../Disp/TabTitle/FavIcon';\nimport { GCTimers } from '../../Disp/VariablesAndData';\nimport {\n  CurrSpawnedGoldenCookieState,\n  LastGoldenCookieState,\n  LastSpawnedGoldenCookieState,\n} from '../VariablesAndData';\n\n/**\n * Auxilirary function that finds all currently spawned shimmers.\n * CM.Cache.spawnedGoldenShimmer stores the non-user spawned cookie to later determine data for the favicon and tab-title\n * It is called by CM.CM.Main.CheckGoldenCookie\n */\nfunction FindShimmer() {\n  CurrSpawnedGoldenCookieState = 0;\n  CacheGoldenShimmersByID = {};\n  Object.keys(Game.shimmers).forEach((i) => {\n    CacheGoldenShimmersByID[Game.shimmers[i].id] = Game.shimmers[i];\n    if (Game.shimmers[i].spawnLead && Game.shimmers[i].type === 'golden') {\n      CacheSpawnedGoldenShimmer = Game.shimmers[i];\n      CurrSpawnedGoldenCookieState += 1;\n    }\n  });\n}\n\n/**\n * This function checks for changes in the amount of Golden Cookies\n * It is called by CM.Main.Loop\n */\nexport default function CheckGoldenCookie() {\n  FindShimmer();\n  Object.keys(GCTimers).forEach((i) => {\n    if (typeof CacheGoldenShimmersByID[i] === 'undefined') {\n      GCTimers[i].parentNode.removeChild(GCTimers[i]);\n      delete GCTimers[i];\n    }\n  });\n  if (LastGoldenCookieState !== Game.shimmerTypes.golden.n) {\n    LastGoldenCookieState = Game.shimmerTypes.golden.n;\n    if (LastGoldenCookieState) {\n      if (LastSpawnedGoldenCookieState < CurrSpawnedGoldenCookieState) {\n        Flash(3, 'GCFlash', false);\n        PlaySound(CMOptions.GCSoundURL, 'GCSound', 'GCVolume', false);\n        CreateNotification(\n          'GCNotification',\n          'Golden Cookie Spawned',\n          'A Golden Cookie has spawned. Click it now!',\n        );\n      }\n\n      Object.keys(Game.shimmers).forEach((i) => {\n        if (typeof GCTimers[Game.shimmers[i].id] === 'undefined') {\n          CreateGCTimer(Game.shimmers[i]);\n        }\n      });\n    }\n    UpdateFavicon();\n    LastSpawnedGoldenCookieState = CurrSpawnedGoldenCookieState;\n    if (CurrSpawnedGoldenCookieState === 0) CacheSpawnedGoldenShimmer = 0;\n  } else if (CMOptions.GCTimer === 1 && LastGoldenCookieState) {\n    Object.keys(GCTimers).forEach((i) => {\n      GCTimers[i].style.opacity = CacheGoldenShimmersByID[i].l.style.opacity;\n      GCTimers[i].style.transform = CacheGoldenShimmersByID[i].l.style.transform;\n      GCTimers[i].textContent = Math.ceil(CacheGoldenShimmersByID[i].life / Game.fps);\n    });\n  }\n}\n","/** Section: Functions related to the Golden Cookie Timers */\n\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport { GCTimers } from '../VariablesAndData';\n\n/**\n * This function creates a new Golden Cookie Timer and appends it CM.Disp.GCTimers based on the id of the cookie\n * @param\t{object}\tcookie\tA Golden Cookie object\n */\nexport default function CreateGCTimer(cookie) {\n  const GCTimer = document.createElement('div');\n  GCTimer.id = `GCTimer${cookie.id}`;\n  GCTimer.style.width = '96px';\n  GCTimer.style.height = '96px';\n  GCTimer.style.position = 'absolute';\n  GCTimer.style.zIndex = '10000000001';\n  GCTimer.style.textAlign = 'center';\n  GCTimer.style.lineHeight = '96px';\n  GCTimer.style.fontFamily = '\"Kavoon\", Georgia, serif';\n  GCTimer.style.fontSize = '35px';\n  GCTimer.style.cursor = 'pointer';\n  GCTimer.style.display = 'block';\n  GCTimer.style.pointerEvents = 'none';\n  if (CMOptions.GCTimer === 0) GCTimer.style.display = 'none';\n  GCTimer.style.left = cookie.l.style.left;\n  GCTimer.style.top = cookie.l.style.top;\n  GCTimer.onclick = function () {\n    cookie.pop();\n  };\n  GCTimer.onmouseover = function () {\n    cookie.l.style.filter = 'brightness(125%) drop-shadow(0px 0px 3px rgba(255,255,255,1))'; // eslint-disable-line no-param-reassign\n    cookie.l.style.webkitFilter = 'brightness(125%) drop-shadow(0px 0px 3px rgba(255,255,255,1))'; // eslint-disable-line no-param-reassign\n  };\n  GCTimer.onmouseout = function () {\n    cookie.l.style.filter = ''; // eslint-disable-line no-param-reassign\n    cookie.l.style.webkitFilter = ''; // eslint-disable-line no-param-reassign\n  };\n\n  GCTimers[cookie.id] = GCTimer;\n  l('shimmers').appendChild(GCTimer);\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport UpdateBuildings from '../BuildingsUpgrades/Buildings';\nimport {\n  ColourBackPre,\n  ColourBorderPre,\n  ColoursOrdering,\n  ColourTextPre,\n} from '../VariablesAndData';\n\n/**\n * This function changes/refreshes colours if the user has set new standard colours\n * The function is therefore called by a change in CM.Options.Colours\n */\nexport default function UpdateColours() {\n  let str = '';\n  for (let i = 0; i < ColoursOrdering.length; i++) {\n    str += `.${ColourTextPre}${ColoursOrdering[i]} { color: ${\n      CMOptions[`Colour${ColoursOrdering[i]}`]\n    }; }\\n`;\n  }\n  for (let i = 0; i < ColoursOrdering.length; i++) {\n    str += `.${ColourBackPre}${ColoursOrdering[i]} { background-color: ${\n      CMOptions[`Colour${ColoursOrdering[i]}`]\n    }; }\\n`;\n  }\n  for (let i = 0; i < ColoursOrdering.length; i++) {\n    str += `.${ColourBorderPre}${ColoursOrdering[i]} { border: 1px solid ${\n      CMOptions[`Colour${ColoursOrdering[i]}`]\n    }; }\\n`;\n  }\n  l('CMCSS').textContent = str;\n  UpdateBuildings(); // Class has been already set\n}\n","import ConfigDefault from '../../Data/SettingsDefault.ts';\nimport ConfigData from '../../Data/SettingsData';\nimport { CMOptions } from '../VariablesAndData';\nimport save from '../../InitSaveLoad/save';\nimport CMLoopHook from '../../Main/LoopHook';\nimport UpdateColours from '../../Disp/HelperFunctions/UpdateColours';\n\n/** Functions related to saving, loading and restoring all settings */\n\n/**\n * This function saves the config of CookieMonster without saving any of the other save-data\n * This allows saving in between the autosave intervals\n * It is called by CM.Config.LoadConfig(), CM.Config.RestoreDefault(), CM.Config.ToggleConfig(),\n * CM.ToggleConfigVolume() and changes in options with type \"url\", \"color\" or \"numscale\"\n */\nexport function SaveConfig() {\n  const saveString = b64_to_utf8(\n    unescape(localStorage.getItem('CookieClickerGame')).split('!END!')[0],\n  );\n  const CookieMonsterSave = saveString.match(/CookieMonster.*(;|$)/);\n  if (CookieMonsterSave !== null) {\n    const newSaveString = saveString.replace(CookieMonsterSave[0], `CookieMonster:${save()}`);\n    localStorage.setItem('CookieClickerGame', escape(`${utf8_to_b64(newSaveString)}!END!`));\n  }\n}\n\n/**\n * This function loads the config of CookieMonster saved in localStorage and loads it into CMOptions\n * It is called by CM.Main.DelayInit() and CM.Config.RestoreDefault()\n */\nexport function LoadConfig(settings) {\n  // This removes cookies left from earlier versions of CookieMonster\n  if (typeof localStorage.CMConfig !== 'undefined') {\n    delete localStorage.CMConfig;\n  }\n  if (settings !== undefined) {\n    CMOptions = settings;\n\n    if (typeof CMOptions.Colors !== 'undefined') {\n      delete CMOptions.Colors;\n    }\n    if (typeof CMOptions.Colours !== 'undefined') {\n      delete CMOptions.Colours;\n    }\n\n    // Check values\n    let mod = false;\n    Object.keys(ConfigDefault).forEach((i) => {\n      if (typeof CMOptions[i] === 'undefined') {\n        mod = true;\n        CMOptions[i] = ConfigDefault[i];\n      } else if (i === 'Header') {\n        Object.keys(ConfigDefault.Header).forEach((j) => {\n          if (\n            typeof CMOptions[i][j] === 'undefined' ||\n            !(CMOptions[i][j] > -1 && CMOptions[i][j] < 2)\n          ) {\n            mod = true;\n            CMOptions[i][j] = ConfigDefault[i][j];\n          }\n        });\n      }\n    });\n    if (mod) SaveConfig();\n    CMLoopHook(); // Do loop once\n    Object.keys(ConfigDefault).forEach((i) => {\n      if (i !== 'Header' && typeof ConfigData[i].func !== 'undefined') {\n        ConfigData[i].func();\n      }\n    });\n  } else {\n    // Default values\n    LoadConfig(ConfigDefault);\n  }\n  Game.UpdateMenu();\n  UpdateColours();\n}\n","/**\n * This function pops all normal wrinklers\n * It is called by a click of the 'pop all' button created by CM.Disp.AddMenuStats()\n */\nexport default function PopAllNormalWrinklers() {\n  Object.keys(Game.wrinklers).forEach((i) => {\n    if (Game.wrinklers[i].sucked > 0 && Game.wrinklers[i].type === 0) {\n      Game.wrinklers[i].hp = 0;\n    }\n  });\n}\n","import UpdateTooltips from './UpdateTooltips';\nimport { SimpleTooltipElements, TooltipName, TooltipType } from '../VariablesAndData'; // eslint-disable-line no-unused-vars\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport BuildingGetPrice from '../../Sim/SimulationEvents/BuyBuilding';\nimport GetTimeColour from '../BeautifyAndFormatting/GetTimeColour';\nimport Beautify from '../BeautifyAndFormatting/Beautify';\n\n/** All general functions related to creating and updating tooltips */\n\n/**\n * This function creates some very basic tooltips, (e.g., the tooltips in the stats page)\n * The tooltips are created with CM.Disp[placeholder].appendChild(desc)\n * @param\t{string}\tplaceholder\tThe name used to later refer and spawn the tooltip\n * @param\t{string}\ttext\t\tThe text of the tooltip\n * @param\t{string}\tminWidth\tThe minimum width of the tooltip\n */\nexport function CreateSimpleTooltip(placeholder, text, minWidth) {\n  const Tooltip = document.createElement('div');\n  Tooltip.id = placeholder;\n  const desc = document.createElement('div');\n  desc.style.minWidth = minWidth;\n  desc.style.marginBottom = '4px';\n  const div = document.createElement('div');\n  div.style.textAlign = 'left';\n  div.textContent = text;\n  desc.appendChild(div);\n  Tooltip.appendChild(desc);\n  SimpleTooltipElements[placeholder] = Tooltip;\n}\n\n/**\n * This function enhance the standard tooltips by creating and changing l('tooltip')\n * The function is called by .onmouseover events that have replaced original code to use CM.Disp.Tooltip()\n * @param\t{string}\ttype\t\t\t\t\tType of tooltip (b, u, s or g)\n * @param\t{string}\tname\t\t\t\t\tName of the object/item the tooltip relates to\n * @returns {string}\tl('tooltip').innerHTML\tThe HTML of the l('tooltip')-object\n */\nexport function CreateTooltip(type, name) {\n  if (type === 'b') {\n    // Buildings\n    l('tooltip').innerHTML = Game.Objects[name].tooltip();\n    // Adds amortization info to the list of info per building\n    if (CMOptions.TooltipAmor === 1) {\n      const buildPrice = BuildingGetPrice(\n        Game.Objects[name],\n        Game.Objects[name].basePrice,\n        0,\n        Game.Objects[name].free,\n        Game.Objects[name].amount,\n      );\n      const amortizeAmount = buildPrice - Game.Objects[name].totalCookies;\n      if (amortizeAmount > 0) {\n        l('tooltip').innerHTML = l('tooltip')\n          .innerHTML.split('so far</div>')\n          .join(\n            `so far<br/>&bull; <b>${Beautify(amortizeAmount)}</b> ${\n              Math.floor(amortizeAmount) === 1 ? 'cookie' : 'cookies'\n            } left to amortize (${\n              GetTimeColour(\n                (buildPrice - Game.Objects[name].totalCookies) /\n                  (Game.Objects[name].storedTotalCps * Game.globalCpsMult),\n              ).text\n            })</div>`,\n          );\n      }\n    }\n    if (Game.buyMode === -1) {\n      /*\n       * Fix sell price displayed in the object tooltip.\n       *\n       * The buildings sell price displayed by the game itself (without any mod) is incorrect.\n       * The following line of code fixes this issue, and can be safely removed when the game gets fixed.\n       *\n       * This issue is extensively detailed here: https://github.com/Aktanusa/CookieMonster/issues/359#issuecomment-735658262\n       */\n      l('tooltip').innerHTML = l('tooltip')\n        .innerHTML.split(Beautify(Game.Objects[name].bulkPrice))\n        .join(\n          Beautify(\n            (Game.Objects[name],\n            Game.Objects[name].basePrice,\n            Game.Objects[name].amount,\n            Game.Objects[name].free,\n            Game.buyBulk,\n            1),\n          ),\n        );\n    }\n  } else if (type === 'u') {\n    // Upgrades\n    if (!Game.UpgradesInStore[name]) return '';\n    l('tooltip').innerHTML = Game.crateTooltip(Game.UpgradesInStore[name], 'store');\n  } else if (type === 's') l('tooltip').innerHTML = Game.lumpTooltip();\n  // Sugar Lumps\n  else if (type === 'g')\n    l('tooltip').innerHTML = Game.Objects['Wizard tower'].minigame.spellTooltip(name)();\n  // Grimoire\n  else if (type === 'p')\n    l('tooltip').innerHTML = Game.ObjectsById[2].minigame.tileTooltip(name[0], name[1])();\n  // Harvest all button in garden\n  else if (type === 'ha') l('tooltip').innerHTML = Game.ObjectsById[2].minigame.toolTooltip(1)();\n  else if (type === 'wb') l('tooltip').innerHTML = '';\n  else if (type === 'pag') l('tooltip').innerHTML = Game.Objects.Temple.minigame.godTooltip(name)();\n  else if (type === 'pas')\n    l('tooltip').innerHTML = Game.Objects.Temple.minigame.slotTooltip(name[0])();\n\n  // Adds area for extra tooltip-sections\n  if (\n    (type === 'b' && Game.buyMode === 1) ||\n    type === 'u' ||\n    type === 's' ||\n    type === 'g' ||\n    (type === 'p' && !Game.keys[16]) ||\n    type === 'ha' ||\n    type === 'wb' ||\n    type === 'pag' ||\n    (type === 'pas' && name[1] !== -1)\n  ) {\n    const area = document.createElement('div');\n    area.id = 'CMTooltipArea';\n    l('tooltip').appendChild(area);\n  }\n\n  // Sets global variables used by CM.Disp.UpdateTooltip()\n  TooltipType = type;\n  TooltipName = name;\n\n  UpdateTooltips();\n\n  return l('tooltip').innerHTML;\n}\n","import { CreateTooltip } from '../../Disp/Tooltips/Tooltip';\nimport { TooltipGrimoireBackup } from '../VariablesAndData';\n\n/**\n * This function replaces the original .onmouseover functions of the Grimoire minigame\n */\nexport default function ReplaceTooltipGrimoire() {\n  if (Game.Objects['Wizard tower'].minigameLoaded) {\n    Object.keys(Game.Objects['Wizard tower'].minigame.spellsById).forEach((i) => {\n      if (l(`grimoireSpell${i}`).onmouseover !== null) {\n        TooltipGrimoireBackup[i] = l(`grimoireSpell${i}`).onmouseover;\n        l(`grimoireSpell${i}`).onmouseover = function () {\n          Game.tooltip.dynamic = 1;\n          Game.tooltip.draw(this, () => CreateTooltip('g', `${i}`), 'this');\n          Game.tooltip.wobble();\n        };\n      }\n    });\n  }\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport FormatTime from '../../Disp/BeautifyAndFormatting/FormatTime';\nimport CalculateGrimoireRefillTime from '../../Disp/HelperFunctions/CalculateGrimoireRefillTime';\nimport {\n  BackupGrimoireDraw,\n  BackupGrimoireLaunch, // eslint-disable-line no-unused-vars\n  BackupGrimoireLaunchMod,\n  HasReplaceNativeGrimoireDraw,\n  HasReplaceNativeGrimoireLaunch,\n} from '../VariablesAndData';\nimport ReplaceTooltipGrimoire from './TooltipGrimoire';\n\n/**\n * This function fixes replaces the .draw function of the Grimoire\n */\nfunction ReplaceNativeGrimoireDraw() {\n  if (!HasReplaceNativeGrimoireDraw && Game.Objects['Wizard tower'].minigameLoaded) {\n    const { minigame } = Game.Objects['Wizard tower'];\n    BackupGrimoireDraw = minigame.draw;\n    Game.Objects['Wizard tower'].minigame.draw = function () {\n      BackupGrimoireDraw();\n      if (CMOptions.GrimoireBar === 1 && minigame.magic < minigame.magicM) {\n        minigame.magicBarTextL.innerHTML += ` (${FormatTime(\n          CalculateGrimoireRefillTime(minigame.magic, minigame.magicM, minigame.magicM),\n        )})`;\n      }\n    };\n    HasReplaceNativeGrimoireDraw = true;\n  }\n}\n\n/**\n * This function fixes replaces the .launch function of the Grimoire\n */\nfunction ReplaceNativeGrimoireLaunch() {\n  if (!HasReplaceNativeGrimoireLaunch && Game.Objects['Wizard tower'].minigameLoaded) {\n    const { minigame } = Game.Objects['Wizard tower'];\n    BackupGrimoireLaunch = minigame.launch;\n    BackupGrimoireLaunchMod = new Function( // eslint-disable-line no-new-func\n      `return ${minigame.launch\n        .toString()\n        .split('=this')\n        .join(\"= Game.Objects['Wizard tower'].minigame\")}`,\n    );\n    Game.Objects['Wizard tower'].minigame.launch = function () {\n      BackupGrimoireLaunchMod();\n      ReplaceTooltipGrimoire();\n      HasReplaceNativeGrimoireDraw = false;\n      ReplaceNativeGrimoireDraw();\n\n      HasReplaceNativeGrimoireLaunch = true;\n    };\n  }\n}\n\n/**\n * This function fixes replaces the Launch and Draw functions of the Grimoire\n */\nexport default function ReplaceNativeGrimoire() {\n  ReplaceNativeGrimoireLaunch();\n  ReplaceNativeGrimoireDraw();\n}\n","import ConfigData from '../Data/SettingsData';\nimport { SaveConfig } from './SaveLoadReload/SaveLoadReloadSettings';\nimport { CMOptions } from './VariablesAndData';\n\n/** Functions related to toggling or changing an individual setting */\n\n/** Used to name certain DOM or outside facing elements and refer to them */\nexport const ConfigPrefix = 'CMConfig';\n\n/**\n * This function toggles options by incrementing them with 1 and handling changes\n * It is called by the onclick event of options of the \"bool\" type\n * @param \t{string}\tconfig\tThe name of the option\n */\nexport function ToggleConfig(config) {\n  CMOptions[config] += 1;\n\n  if (CMOptions[config] === ConfigData[config].label.length) {\n    CMOptions[config] = 0;\n    if (ConfigData[config].toggle) l(ConfigPrefix + config).className = 'option off';\n  } else l(ConfigPrefix + config).className = 'option';\n\n  if (typeof ConfigData[config].func !== 'undefined') {\n    ConfigData[config].func();\n  }\n\n  SaveConfig();\n}\n\n/**\n * This function sets the value of the specified volume-option and updates the display in the options menu\n * It is called by the oninput and onchange event of \"vol\" type options\n * @param \t{string}\tconfig\tThe name of the option\n */\nexport function ToggleConfigVolume(config) {\n  if (l(`slider${config}`) !== null) {\n    l(`slider${config}right`).innerHTML = `${l(`slider${config}`).value}%`;\n    CMOptions[config] = Math.round(l(`slider${config}`).value);\n  }\n  SaveConfig();\n}\n\n/**\n * This function toggles header options by incrementing them with 1 and handling changes\n * It is called by the onclick event of the +/- next to headers\n * @param \t{string}\tconfig\tThe name of the header\n */\nexport function ToggleHeader(config) {\n  CMOptions.Header[config] += 1;\n  if (CMOptions.Header[config] > 1) CMOptions.Header[config] = 0;\n  SaveConfig();\n}\n","/** Section: Functions related to the creation of basic DOM elements page */\n\nimport { ToggleHeader } from '../../../Config/ToggleSetting';\nimport { CMOptions } from '../../../Config/VariablesAndData';\nimport { SimpleTooltipElements } from '../../VariablesAndData';\n\n/**\n * This function creates a header-object for the stats page\n * It is called by CM.Disp.AddMenuStats()\n * @param \t{string}\t\tconfig\tThe name of the Config-group\n * @param \t{string}\t\ttext\tThe to-be displayed name of the header\n * @returns\t{object}\t\tdiv\t\tThe header object\n */\nexport function StatsHeader(text, config) {\n  const div = document.createElement('div');\n  div.className = 'title';\n  div.style.padding = '0px 16px';\n  div.style.opacity = '0.7';\n  div.style.fontSize = '17px';\n  div.style.fontFamily = '\"Kavoon\", Georgia, serif';\n  div.appendChild(document.createTextNode(`${text} `));\n  const span = document.createElement('span');\n  span.style.cursor = 'pointer';\n  span.style.display = 'inline-block';\n  span.style.height = '14px';\n  span.style.width = '14px';\n  span.style.borderRadius = '7px';\n  span.style.textAlign = 'center';\n  span.style.backgroundColor = '#C0C0C0';\n  span.style.color = 'black';\n  span.style.fontSize = '13px';\n  span.style.verticalAlign = 'middle';\n  span.textContent = CMOptions.Header[config] ? '-' : '+';\n  span.onclick = function () {\n    ToggleHeader(config);\n    Game.UpdateMenu();\n  };\n  div.appendChild(span);\n  return div;\n}\n\n/**\n * This function creates an stats-listing-object for the stats page\n * It is called by CM.Disp.AddMenuStats()\n * @param \t{string}\t\ttype\t\tThe type fo the listing\n * @param \t{string}\t\tname\t\tThe name of the option\n * @param \t{object}\t\ttext\t\tThe text-object of the option\n * @param \t{string}\t\tplaceholder\tThe id of the to-be displayed tooltip if applicable\n * @returns\t{object}\t\tdiv\t\t\tThe option object\n */\nexport function StatsListing(type, name, text, placeholder) {\n  const div = document.createElement('div');\n  div.className = 'listing';\n\n  const listingName = document.createElement('b');\n  listingName.textContent = name;\n  div.appendChild(listingName);\n  if (type === 'withTooltip') {\n    div.className = 'listing';\n    div.appendChild(document.createTextNode(' '));\n\n    const tooltip = document.createElement('span');\n    tooltip.onmouseout = function () {\n      Game.tooltip.hide();\n    };\n    tooltip.onmouseover = function () {\n      Game.tooltip.draw(this, escape(SimpleTooltipElements[placeholder].innerHTML));\n    };\n    tooltip.style.cursor = 'default';\n    tooltip.style.display = 'inline-block';\n    tooltip.style.height = '10px';\n    tooltip.style.width = '10px';\n    tooltip.style.borderRadius = '5px';\n    tooltip.style.textAlign = 'center';\n    tooltip.style.backgroundColor = '#C0C0C0';\n    tooltip.style.color = 'black';\n    tooltip.style.fontSize = '9px';\n    tooltip.style.verticalAlign = 'bottom';\n    tooltip.textContent = '?';\n    div.appendChild(tooltip);\n  }\n  div.appendChild(document.createTextNode(': '));\n  div.appendChild(text);\n  return div;\n}\n\n/**\n * This function creates an stats-listing-object for the stats page for missing items displays\n * It is called by CM.Disp.AddMenuStats()\n * @param \t{string}\t\ttype\t\tThe type fo the listing\n * @param \t{string}\t\tname\t\tThe name of the option\n * @param \t{object}\t\ttext\t\tThe text-object of the option\n * @param \t{bool}\t\t  current Whether the season of the item is the current season\n * @returns\t{object}\t\tdiv\t\t\tThe option object\n */\nexport function StatsMissDispListing(type, name, text, current) {\n  const div = document.createElement('div');\n  div.className = 'listing';\n\n  const listingName = document.createElement('b');\n  listingName.textContent = name;\n  if (current === true) listingName.style.color = CMOptions.ColourGreen;\n  div.appendChild(listingName);\n  div.appendChild(document.createTextNode(': '));\n  div.appendChild(text);\n  return div;\n}\n\n/**\n * This function creates a tooltip containing all missing holiday items contained in the list theMissDisp\n * @param \t{list}\t\t\ttheMissDisp\t\tA list of the missing holiday items\n * @returns\t{object}\t\tfrag\t\t\tThe tooltip object\n */\nexport function StatsMissDisp(theMissDisp) {\n  const frag = document.createDocumentFragment();\n  frag.appendChild(document.createTextNode(`${theMissDisp.length} `));\n  const span = document.createElement('span');\n  span.onmouseout = function () {\n    Game.tooltip.hide();\n  };\n  const placeholder = document.createElement('div');\n  const missing = document.createElement('div');\n  missing.style.minWidth = '140px';\n  missing.style.marginBottom = '4px';\n  const title = document.createElement('div');\n  title.className = 'name';\n  title.style.marginBottom = '4px';\n  title.style.textAlign = 'center';\n  title.textContent = 'Missing';\n  missing.appendChild(title);\n  Object.keys(theMissDisp).forEach((i) => {\n    const div = document.createElement('div');\n    div.style.textAlign = 'center';\n    div.appendChild(document.createTextNode(theMissDisp[i]));\n    missing.appendChild(div);\n  });\n  placeholder.appendChild(missing);\n  span.onmouseover = function () {\n    Game.tooltip.draw(this, escape(placeholder.innerHTML));\n  };\n  span.style.cursor = 'default';\n  span.style.display = 'inline-block';\n  span.style.height = '10px';\n  span.style.width = '10px';\n  span.style.borderRadius = '5px';\n  span.style.textAlign = 'center';\n  span.style.backgroundColor = '#C0C0C0';\n  span.style.color = 'black';\n  span.style.fontSize = '9px';\n  span.style.verticalAlign = 'bottom';\n  span.textContent = '?';\n  frag.appendChild(span);\n  return frag;\n}\n","/** Main function to create the sections of Cookie Monster on the Statistics page */\n\nimport { AddMissingUpgrades } from './CreateMissingUpgrades';\nimport * as CreateSections from './CreateStatsSections';\nimport * as CreateElements from './CreateDOMElements';\nimport * as GameData from '../../../Data/Gamedata.ts';\nimport { CMOptions } from '../../../Config/VariablesAndData';\n\nimport {\n  CacheAverageClicks,\n  CacheAverageCookiesFromClicks,\n  CacheObjectsNextAchievement,\n  CacheWrinklersFattest,\n  CacheWrinklersNormal,\n  CacheWrinklersTotal,\n} from '../../../Cache/VariablesAndData';\nimport PopAllNormalWrinklers from '../../HelperFunctions/PopWrinklers';\nimport { ClickTimes, CookieTimes } from '../../VariablesAndData';\nimport GetCPS from '../../HelperFunctions/GetCPS';\nimport Beautify from '../../BeautifyAndFormatting/Beautify';\nimport AddMissingAchievements from './CreateMissingAchievements';\n\n/**\n * This function adds stats created by CookieMonster to the stats page\n * It is called by CM.Disp.AddMenu\n * @param {object} title\tOn object that includes the title of the menu\n */\nexport default function AddMenuStats(title) {\n  const stats = document.createElement('div');\n  stats.className = 'subsection';\n  stats.appendChild(title);\n\n  stats.appendChild(CreateElements.StatsHeader('Lucky Cookies', 'Lucky'));\n  if (CMOptions.Header.Lucky) {\n    stats.appendChild(CreateSections.LuckySection());\n  }\n\n  stats.appendChild(CreateElements.StatsHeader('Chain Cookies', 'Chain'));\n  if (CMOptions.Header.Chain) {\n    stats.appendChild(CreateSections.ChainSection());\n  }\n\n  if (Game.Objects['Wizard tower'].minigameLoaded) {\n    stats.appendChild(CreateElements.StatsHeader('Spells', 'Spells'));\n    if (CMOptions.Header.Spells) {\n      stats.appendChild(CreateSections.SpellsSection());\n    }\n  }\n\n  if (Game.Objects.Farm.minigameLoaded) {\n    stats.appendChild(CreateElements.StatsHeader('Garden', 'Garden'));\n    if (CMOptions.Header.Garden) {\n      stats.appendChild(CreateSections.GardenSection());\n    }\n  }\n\n  stats.appendChild(CreateElements.StatsHeader('Prestige', 'Prestige'));\n  if (CMOptions.Header.Prestige) {\n    stats.appendChild(CreateSections.PrestigeSection());\n  }\n\n  if (Game.cpsSucked > 0) {\n    stats.appendChild(CreateElements.StatsHeader('Wrinklers', 'Wrink'));\n    if (CMOptions.Header.Wrink) {\n      const popAllFrag = document.createDocumentFragment();\n      popAllFrag.appendChild(\n        document.createTextNode(\n          `${Beautify(CacheWrinklersTotal)} / ${Beautify(CacheWrinklersNormal)} `,\n        ),\n      );\n      const popAllA = document.createElement('a');\n      popAllA.textContent = 'Pop All Normal';\n      popAllA.className = 'option';\n      popAllA.onclick = function () {\n        PopAllNormalWrinklers();\n      };\n      popAllFrag.appendChild(popAllA);\n      stats.appendChild(\n        CreateElements.StatsListing('basic', 'Rewards of Popping (All/Normal)', popAllFrag),\n      );\n      const popFattestFrag = document.createDocumentFragment();\n      popFattestFrag.appendChild(document.createTextNode(`${Beautify(CacheWrinklersFattest[0])} `));\n      const popFattestA = document.createElement('a');\n      popFattestA.textContent = 'Pop Single Fattest';\n      popFattestA.className = 'option';\n      popFattestA.onclick = function () {\n        if (CacheWrinklersFattest[1] !== null) Game.wrinklers[CacheWrinklersFattest[1]].hp = 0;\n      };\n      popFattestFrag.appendChild(popFattestA);\n      stats.appendChild(\n        CreateElements.StatsListing(\n          'basic',\n          `Rewards of Popping Single Fattest Non-Shiny Wrinkler (id: ${\n            CacheWrinklersFattest[1] !== null ? CacheWrinklersFattest[1] : 'None'\n          })`,\n          popFattestFrag,\n        ),\n      );\n    }\n  }\n\n  stats.appendChild(CreateSections.SeasonSection());\n\n  stats.appendChild(CreateElements.StatsHeader('Achievements', 'Achievs'));\n  if (CMOptions.Header.Achievs) {\n    Object.keys(Game.Objects).forEach((i) => {\n      const ObjectsTillNext = CacheObjectsNextAchievement[i];\n      stats.appendChild(\n        CreateElements.StatsListing(\n          'basic',\n          i,\n          ObjectsTillNext.AmountNeeded < 101\n            ? document.createTextNode(`Next achievement in ${ObjectsTillNext.AmountNeeded}, price: ${Beautify(ObjectsTillNext.price)}`)\n            : document.createTextNode('No new achievement for next 100 buildings'),\n        ),\n      );\n    });\n  }\n\n  stats.appendChild(CreateElements.StatsHeader('Miscellaneous', 'Misc'));\n  if (CMOptions.Header.Misc) {\n    stats.appendChild(\n      CreateElements.StatsListing(\n        'basic',\n        `Average cookies per second (past ${\n          CookieTimes[CMOptions.AvgCPSHist] < 60\n            ? `${CookieTimes[CMOptions.AvgCPSHist]} seconds`\n            : CookieTimes[CMOptions.AvgCPSHist] / 60 +\n              (CMOptions.AvgCPSHist === 3 ? ' minute' : ' minutes')\n        })`,\n        document.createTextNode(Beautify(GetCPS(), 3)),\n      ),\n    );\n    stats.appendChild(\n      CreateElements.StatsListing(\n        'basic',\n        `Average cookie clicks per second (past ${ClickTimes[CMOptions.AvgClicksHist]}${\n          CMOptions.AvgClicksHist === 0 ? ' second' : ' seconds'\n        })`,\n        document.createTextNode(Beautify(CacheAverageClicks, 1)),\n      ),\n    );\n    stats.appendChild(\n      CreateElements.StatsListing(\n        'basic',\n        `Cookies from clicking (past ${ClickTimes[CMOptions.AvgClicksHist]}${\n          CMOptions.AvgClicksHist === 0 ? ' second' : ' seconds'\n        })`,\n        document.createTextNode(\n          Beautify(\n            CacheAverageCookiesFromClicks.calcSum(\n              CacheAverageClicks * ClickTimes[CMOptions.AvgClicksHist],\n            ),\n          ),\n        ),\n      ),\n    );\n    if (Game.Has('Fortune cookies')) {\n      const fortunes = [];\n      Object.keys(GameData.Fortunes).forEach((i) => {\n        if (!Game.Has(GameData.Fortunes[i])) {\n          fortunes.push(GameData.Fortunes[i]);\n        }\n      });\n      if (fortunes.length !== 0)\n        stats.appendChild(\n          CreateElements.StatsListing(\n            'basic',\n            'Fortune Upgrades Left to Buy',\n            CreateElements.StatsMissDisp(fortunes),\n          ),\n        );\n    }\n    if (CMOptions.ShowMissedGC) {\n      stats.appendChild(\n        CreateElements.StatsListing(\n          'basic',\n          'Missed golden cookies',\n          document.createTextNode(Beautify(Game.missedGoldenClicks)),\n        ),\n      );\n    }\n    if (Game.prefs.autosave) {\n      const timer = document.createElement('span');\n      timer.id = 'CMStatsAutosaveTimer';\n      timer.innerText = Game.sayTime(\n        Game.fps * 60 - (Game.OnAscend ? 0 : Game.T % (Game.fps * 60)),\n        4,\n      );\n      stats.appendChild(CreateElements.StatsListing('basic', 'Time till autosave', timer));\n    }\n  }\n\n  l('menu').insertBefore(stats, l('menu').childNodes[2]);\n\n  if (CMOptions.MissingUpgrades) {\n    AddMissingUpgrades();\n  }\n  if (CMOptions.MissingAchievements) {\n    AddMissingAchievements();\n  }\n}\n","/** Functions to create the individual sections of the Statistics page */\n\nimport * as GameData from '../../../Data/Gamedata.ts';\nimport { MaxChainCookieReward } from '../../../Cache/Stats/ChainCookies';\nimport {\n  CacheAvgCPSWithChoEgg,\n  CacheCentEgg,\n  CacheChainFrenzyMaxReward,\n  CacheChainFrenzyRequired,\n  CacheChainFrenzyRequiredNext,\n  CacheChainFrenzyWrathRequired,\n  CacheChainFrenzyWrathRequiredNext,\n  CacheChainMaxReward,\n  CacheChainRequired,\n  CacheChainRequiredNext,\n  CacheChainWrathMaxReward,\n  CacheChainWrathRequired,\n  CacheChainWrathRequiredNext,\n  CacheConjure,\n  CacheConjureReward,\n  CacheDragonsFortuneMultAdjustment,\n  CacheEdifice,\n  CacheEdificeBuilding,\n  CacheGoldenCookiesMult,\n  CacheHCPerSecond,\n  CacheLastChoEgg,\n  CacheLucky,\n  CacheLuckyFrenzy,\n  CacheLuckyReward,\n  CacheLuckyRewardFrenzy,\n  CacheLuckyWrathReward,\n  CacheLuckyWrathRewardFrenzy,\n  CacheNoGoldSwitchCookiesPS,\n  CacheRealCookiesEarned,\n  CacheSeaSpec,\n  CacheWrathCookiesMult,\n  CacheWrinklersTotal,\n} from '../../../Cache/VariablesAndData';\nimport { CMOptions } from '../../../Config/VariablesAndData';\nimport ResetBonus from '../../../Sim/SimulationEvents/ResetAscension';\nimport GetCPS from '../../HelperFunctions/GetCPS';\nimport GetWrinkConfigBank from '../../HelperFunctions/GetWrinkConfigBank';\nimport { ColourGreen, ColourRed, ColourTextPre } from '../../VariablesAndData';\nimport {\n  StatsListing,\n  StatsHeader,\n  StatsMissDisp,\n  StatsMissDispListing,\n} from './CreateDOMElements';\nimport Beautify from '../../BeautifyAndFormatting/Beautify';\nimport FormatTime from '../../BeautifyAndFormatting/FormatTime';\n\n/**\n * This function creates the \"Lucky\" section of the stats page\n * @returns\t{object}\tsection\t\tThe object contating the Lucky section\n */\nexport function LuckySection() {\n  // This sets which tooltip to display for certain stats\n  const goldCookTooltip = Game.auraMult(\"Dragon's Fortune\")\n    ? 'GoldCookDragonsFortuneTooltipPlaceholder'\n    : 'GoldCookTooltipPlaceholder';\n\n  const section = document.createElement('div');\n  section.className = 'CMStatsLuckySection';\n\n  const luckyColour = Game.cookies + GetWrinkConfigBank() < CacheLucky ? ColourRed : ColourGreen;\n  const luckyTime =\n    Game.cookies + GetWrinkConfigBank() < CacheLucky\n      ? FormatTime((CacheLucky - (Game.cookies + GetWrinkConfigBank())) / GetCPS())\n      : '';\n  const luckyReqFrag = document.createDocumentFragment();\n  const luckyReqSpan = document.createElement('span');\n  luckyReqSpan.style.fontWeight = 'bold';\n  luckyReqSpan.className = ColourTextPre + luckyColour;\n  luckyReqSpan.textContent = Beautify(CacheLucky);\n  luckyReqFrag.appendChild(luckyReqSpan);\n  if (luckyTime !== '') {\n    const luckyReqSmall = document.createElement('small');\n    luckyReqSmall.textContent = ` (${luckyTime})`;\n    luckyReqFrag.appendChild(luckyReqSmall);\n  }\n  section.appendChild(\n    StatsListing('withTooltip', '\"Lucky!\" cookies required', luckyReqFrag, goldCookTooltip),\n  );\n\n  const luckyColourFrenzy =\n    Game.cookies + GetWrinkConfigBank() < CacheLuckyFrenzy ? ColourRed : ColourGreen;\n  const luckyTimeFrenzy =\n    Game.cookies + GetWrinkConfigBank() < CacheLuckyFrenzy\n      ? FormatTime((CacheLuckyFrenzy - (Game.cookies + GetWrinkConfigBank())) / GetCPS())\n      : '';\n  const luckyReqFrenFrag = document.createDocumentFragment();\n  const luckyReqFrenSpan = document.createElement('span');\n  luckyReqFrenSpan.style.fontWeight = 'bold';\n  luckyReqFrenSpan.className = ColourTextPre + luckyColourFrenzy;\n  luckyReqFrenSpan.textContent = Beautify(CacheLuckyFrenzy);\n  luckyReqFrenFrag.appendChild(luckyReqFrenSpan);\n  if (luckyTimeFrenzy !== '') {\n    const luckyReqFrenSmall = document.createElement('small');\n    luckyReqFrenSmall.textContent = ` (${luckyTimeFrenzy})`;\n    luckyReqFrenFrag.appendChild(luckyReqFrenSmall);\n  }\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      '\"Lucky!\" cookies required (frenzy)',\n      luckyReqFrenFrag,\n      goldCookTooltip,\n    ),\n  );\n\n  const luckySplit = CacheLuckyReward !== CacheLuckyWrathReward;\n\n  const luckyRewardMaxSpan = document.createElement('span');\n  luckyRewardMaxSpan.style.fontWeight = 'bold';\n  luckyRewardMaxSpan.className = ColourTextPre + CacheLuckyReward;\n  luckyRewardMaxSpan.textContent =\n    Beautify(CacheLuckyReward) + (luckySplit ? ` / ${Beautify(CacheLuckyWrathReward)}` : '');\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      `\"Lucky!\" reward (max)${luckySplit ? ' (golden / wrath)' : ''}`,\n      luckyRewardMaxSpan,\n      goldCookTooltip,\n    ),\n  );\n\n  const luckyRewardFrenzyMaxSpan = document.createElement('span');\n  luckyRewardFrenzyMaxSpan.style.fontWeight = 'bold';\n  luckyRewardFrenzyMaxSpan.className = ColourTextPre + luckyRewardFrenzyMaxSpan;\n  luckyRewardFrenzyMaxSpan.textContent =\n    Beautify(CacheLuckyRewardFrenzy) +\n    (luckySplit ? ` / ${Beautify(CacheLuckyWrathRewardFrenzy)}` : '');\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      `\"Lucky!\" reward (max) (frenzy)${luckySplit ? ' (golden / wrath)' : ''}`,\n      luckyRewardFrenzyMaxSpan,\n      goldCookTooltip,\n    ),\n  );\n\n  const luckyCurBase =\n    Math.min(\n      (Game.cookies + GetWrinkConfigBank()) * 0.15,\n      CacheNoGoldSwitchCookiesPS * CacheDragonsFortuneMultAdjustment * 60 * 15,\n    ) + 13;\n  const luckyCurSpan = document.createElement('span');\n  luckyCurSpan.style.fontWeight = 'bold';\n  luckyCurSpan.className = ColourTextPre + luckyCurSpan;\n  luckyCurSpan.textContent =\n    Beautify(CacheGoldenCookiesMult * luckyCurBase) +\n    (luckySplit ? ` / ${Beautify(CacheWrathCookiesMult * luckyCurBase)}` : '');\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      `\"Lucky!\" reward (cur)${luckySplit ? ' (golden / wrath)' : ''}`,\n      luckyCurSpan,\n      goldCookTooltip,\n    ),\n  );\n  return section;\n}\n\n/**\n * This function creates the \"Chain\" section of the stats page\n * @returns\t{object}\tsection\t\tThe object contating the Chain section\n */\nexport function ChainSection() {\n  // This sets which tooltip to display for certain stats\n  const goldCookTooltip = Game.auraMult(\"Dragon's Fortune\")\n    ? 'GoldCookDragonsFortuneTooltipPlaceholder'\n    : 'GoldCookTooltipPlaceholder';\n\n  const section = document.createElement('div');\n  section.className = 'CMStatsChainSection';\n\n  const chainColour =\n    Game.cookies + GetWrinkConfigBank() < CacheChainRequired ? ColourRed : ColourGreen;\n  const chainTime =\n    Game.cookies + GetWrinkConfigBank() < CacheChainRequired\n      ? FormatTime((CacheChainRequired - (Game.cookies + GetWrinkConfigBank())) / GetCPS())\n      : '';\n  const chainReqFrag = document.createDocumentFragment();\n  const chainReqSpan = document.createElement('span');\n  chainReqSpan.style.fontWeight = 'bold';\n  chainReqSpan.className = ColourTextPre + chainColour;\n  chainReqSpan.textContent = Beautify(CacheChainRequired);\n  chainReqFrag.appendChild(chainReqSpan);\n  if (chainTime !== '') {\n    const chainReqSmall = document.createElement('small');\n    chainReqSmall.textContent = ` (${chainTime})`;\n    chainReqFrag.appendChild(chainReqSmall);\n  }\n  section.appendChild(\n    StatsListing('withTooltip', '\"Chain\" cookies required', chainReqFrag, goldCookTooltip),\n  );\n\n  const chainWrathColour =\n    Game.cookies + GetWrinkConfigBank() < CacheChainWrathRequired ? ColourRed : ColourGreen;\n  const chainWrathTime =\n    Game.cookies + GetWrinkConfigBank() < CacheChainWrathRequired\n      ? FormatTime((CacheChainWrathRequired - (Game.cookies + GetWrinkConfigBank())) / GetCPS())\n      : '';\n  const chainWrathReqFrag = document.createDocumentFragment();\n  const chainWrathReqSpan = document.createElement('span');\n  chainWrathReqSpan.style.fontWeight = 'bold';\n  chainWrathReqSpan.className = ColourTextPre + chainWrathColour;\n  chainWrathReqSpan.textContent = Beautify(CacheChainWrathRequired);\n  chainWrathReqFrag.appendChild(chainWrathReqSpan);\n  if (chainWrathTime !== '') {\n    const chainWrathReqSmall = document.createElement('small');\n    chainWrathReqSmall.textContent = ` (${chainWrathTime})`;\n    chainWrathReqFrag.appendChild(chainWrathReqSmall);\n  }\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      '\"Chain\" cookies required (Wrath)',\n      chainWrathReqFrag,\n      goldCookTooltip,\n    ),\n  );\n\n  const chainColourFrenzy =\n    Game.cookies + GetWrinkConfigBank() < CacheChainFrenzyRequired ? ColourRed : ColourGreen;\n  const chainTimeFrenzy =\n    Game.cookies + GetWrinkConfigBank() < CacheChainFrenzyRequired\n      ? FormatTime((CacheChainFrenzyRequired - (Game.cookies + GetWrinkConfigBank())) / GetCPS())\n      : '';\n  const chainReqFrenFrag = document.createDocumentFragment();\n  const chainReqFrenSpan = document.createElement('span');\n  chainReqFrenSpan.style.fontWeight = 'bold';\n  chainReqFrenSpan.className = ColourTextPre + chainColourFrenzy;\n  chainReqFrenSpan.textContent = Beautify(CacheChainFrenzyRequired);\n  chainReqFrenFrag.appendChild(chainReqFrenSpan);\n  if (chainTimeFrenzy !== '') {\n    const chainReqFrenSmall = document.createElement('small');\n    chainReqFrenSmall.textContent = ` (${chainTimeFrenzy})`;\n    chainReqFrenFrag.appendChild(chainReqFrenSmall);\n  }\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      '\"Chain\" cookies required (Frenzy)',\n      chainReqFrenFrag,\n      goldCookTooltip,\n    ),\n  );\n\n  const chainWrathColourFrenzy =\n    Game.cookies + GetWrinkConfigBank() < CacheChainFrenzyWrathRequired ? ColourRed : ColourGreen;\n  const chainWrathTimeFrenzy =\n    Game.cookies + GetWrinkConfigBank() < CacheChainFrenzyWrathRequired\n      ? FormatTime(\n          (CacheChainFrenzyWrathRequired - (Game.cookies + GetWrinkConfigBank())) / GetCPS(),\n        )\n      : '';\n  const chainWrathReqFrenFrag = document.createDocumentFragment();\n  const chainWrathReqFrenSpan = document.createElement('span');\n  chainWrathReqFrenSpan.style.fontWeight = 'bold';\n  chainWrathReqFrenSpan.className = ColourTextPre + chainWrathColourFrenzy;\n  chainWrathReqFrenSpan.textContent = Beautify(CacheChainFrenzyWrathRequired);\n  chainWrathReqFrenFrag.appendChild(chainWrathReqFrenSpan);\n  if (chainWrathTimeFrenzy !== '') {\n    const chainWrathReqFrenSmall = document.createElement('small');\n    chainWrathReqFrenSmall.textContent = ` (${chainWrathTimeFrenzy})`;\n    chainWrathReqFrenFrag.appendChild(chainWrathReqFrenSmall);\n  }\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      '\"Chain\" cookies required (frenzy) (Wrath)',\n      chainWrathReqFrenFrag,\n      goldCookTooltip,\n    ),\n  );\n\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      '\"Chain\" reward (max) (golden / wrath)',\n      document.createTextNode(\n        `${Beautify(CacheChainMaxReward[0])} / ${Beautify(CacheChainWrathMaxReward[0])}`,\n      ),\n      goldCookTooltip,\n    ),\n  );\n\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      '\"Chain\" reward (max) (frenzy) (golden / wrath)',\n      document.createTextNode(\n        `${Beautify(CacheChainFrenzyMaxReward[0])} / ${Beautify(CacheChainFrenzyMaxReward[0])}`,\n      ),\n      goldCookTooltip,\n    ),\n  );\n\n  const chainCurMax = Math.min(\n    Game.cookiesPs * 60 * 60 * 6 * CacheDragonsFortuneMultAdjustment,\n    Game.cookies * 0.5,\n  );\n  const chainCur = MaxChainCookieReward(7, chainCurMax, CacheGoldenCookiesMult)[0];\n  const chainCurWrath = MaxChainCookieReward(6, chainCurMax, CacheWrathCookiesMult)[0];\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      '\"Chain\" reward (cur) (golden / wrath)',\n      document.createTextNode(`${Beautify(chainCur)} / ${Beautify(chainCurWrath)}`),\n      goldCookTooltip,\n    ),\n  );\n\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      'CPS needed for next level (g / w)',\n      document.createTextNode(\n        `${Beautify(CacheChainRequiredNext)} / ${Beautify(CacheChainWrathRequiredNext)}`,\n      ),\n      'ChainNextLevelPlaceholder',\n    ),\n  );\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      'CPS needed for next level (frenzy) (g / w)',\n      document.createTextNode(\n        `${Beautify(CacheChainFrenzyRequiredNext)} / ${Beautify(\n          CacheChainFrenzyWrathRequiredNext,\n        )}`,\n      ),\n      'ChainNextLevelPlaceholder',\n    ),\n  );\n  return section;\n}\n\n/**\n * This function creates the \"Spells\" section of the stats page\n * @returns\t{object}\tsection\t\tThe object contating the Spells section\n */\nexport function SpellsSection() {\n  const section = document.createElement('div');\n  section.className = 'CMStatsSpellsSection';\n\n  const conjureColour =\n    Game.cookies + GetWrinkConfigBank() < CacheConjure ? ColourRed : ColourGreen;\n  const conjureTime =\n    Game.cookies + GetWrinkConfigBank() < CacheConjure\n      ? FormatTime((CacheConjure - (Game.cookies + GetWrinkConfigBank())) / GetCPS())\n      : '';\n\n  const conjureReqFrag = document.createDocumentFragment();\n  const conjureReqSpan = document.createElement('span');\n  conjureReqSpan.style.fontWeight = 'bold';\n  conjureReqSpan.className = ColourTextPre + conjureColour;\n  conjureReqSpan.textContent = Beautify(CacheConjure);\n  conjureReqFrag.appendChild(conjureReqSpan);\n  if (conjureTime !== '') {\n    const conjureReqSmall = document.createElement('small');\n    conjureReqSmall.textContent = ` (${conjureTime})`;\n    conjureReqFrag.appendChild(conjureReqSmall);\n  }\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      '\"Conjure Baked Goods\" cookies required',\n      conjureReqFrag,\n      'GoldCookTooltipPlaceholder',\n    ),\n  );\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      '\"Conjure Baked Goods\" reward (max)',\n      document.createTextNode(Beautify(CacheConjureReward)),\n      'GoldCookTooltipPlaceholder',\n    ),\n  );\n\n  const conjureFrenzyColour =\n    Game.cookies + GetWrinkConfigBank() < CacheConjure * 7 ? ColourRed : ColourGreen;\n  const conjureFrenzyCur = Math.min(\n    (Game.cookies + GetWrinkConfigBank()) * 0.15,\n    CacheNoGoldSwitchCookiesPS * 60 * 30,\n  );\n  const conjureFrenzyTime =\n    Game.cookies + GetWrinkConfigBank() < CacheConjure * 7\n      ? FormatTime((CacheConjure * 7 - (Game.cookies + GetWrinkConfigBank())) / GetCPS())\n      : '';\n\n  const conjureFrenzyReqFrag = document.createDocumentFragment();\n  const conjureFrenzyReqSpan = document.createElement('span');\n  conjureFrenzyReqSpan.style.fontWeight = 'bold';\n  conjureFrenzyReqSpan.className = ColourTextPre + conjureFrenzyColour;\n  conjureFrenzyReqSpan.textContent = Beautify(CacheConjure * 7);\n  conjureFrenzyReqFrag.appendChild(conjureFrenzyReqSpan);\n  if (conjureFrenzyTime !== '') {\n    const conjureFrenzyReqSmall = document.createElement('small');\n    conjureFrenzyReqSmall.textContent = ` (${conjureFrenzyTime})`;\n    conjureFrenzyReqFrag.appendChild(conjureFrenzyReqSmall);\n  }\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      '\"Conjure Baked Goods\" cookies required (frenzy)',\n      conjureFrenzyReqFrag,\n      'GoldCookTooltipPlaceholder',\n    ),\n  );\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      '\"Conjure Baked Goods\" reward (max) (frenzy)',\n      document.createTextNode(Beautify(CacheConjureReward * 7)),\n      'GoldCookTooltipPlaceholder',\n    ),\n  );\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      '\"Conjure Baked Goods\" reward (cur)',\n      document.createTextNode(Beautify(conjureFrenzyCur)),\n      'GoldCookTooltipPlaceholder',\n    ),\n  );\n  if (CacheEdifice) {\n    section.appendChild(\n      StatsListing(\n        'withTooltip',\n        '\"Spontaneous Edifice\" cookies required (most expensive building)',\n        document.createTextNode(`${Beautify(CacheEdifice)} (${CacheEdificeBuilding})`),\n        'GoldCookTooltipPlaceholder',\n      ),\n    );\n  }\n  return section;\n}\n\n/**\n * This function creates the \"Garden\" section of the stats page\n * @returns\t{object}\tsection\t\tThe object contating the Spells section\n */\nexport function GardenSection() {\n  const section = document.createElement('div');\n  section.className = 'CMStatsGardenSection';\n\n  const bakeberryColour = Game.cookies < Game.cookiesPs * 60 * 10 * 100 ? ColourRed : ColourGreen;\n  const bakeberryFrag = document.createElement('span');\n  bakeberryFrag.style.fontWeight = 'bold';\n  bakeberryFrag.className = ColourTextPre + bakeberryColour;\n  bakeberryFrag.textContent = Beautify(Game.cookiesPs * 60 * 10 * 100);\n  section.appendChild(\n    StatsListing('basic', 'Cookies required for max reward of Bakeberry: ', bakeberryFrag),\n  );\n\n  const chocorootColour = Game.cookies < Game.cookiesPs * 60 * 100 ? ColourRed : ColourGreen;\n  const chocorootFrag = document.createElement('span');\n  chocorootFrag.style.fontWeight = 'bold';\n  chocorootFrag.className = ColourTextPre + chocorootColour;\n  chocorootFrag.textContent = Beautify(Game.cookiesPs * 60 * 100);\n  section.appendChild(\n    StatsListing('basic', 'Cookies required for max reward of Chocoroot: ', chocorootFrag),\n  );\n\n  const queenbeetColour = Game.cookies < Game.cookiesPs * 60 * 60 * 25 ? ColourRed : ColourGreen;\n  const queenbeetFrag = document.createElement('span');\n  queenbeetFrag.style.fontWeight = 'bold';\n  queenbeetFrag.className = ColourTextPre + queenbeetColour;\n  queenbeetFrag.textContent = Beautify(Game.cookiesPs * 60 * 60 * 25);\n  section.appendChild(\n    StatsListing('basic', 'Cookies required for max reward of Queenbeet: ', queenbeetFrag),\n  );\n\n  const duketaterColour = Game.cookies < Game.cookiesPs * 60 * 15 * 100 ? ColourRed : ColourGreen;\n  const duketaterFrag = document.createElement('span');\n  duketaterFrag.style.fontWeight = 'bold';\n  duketaterFrag.className = ColourTextPre + duketaterColour;\n  duketaterFrag.textContent = Beautify(Game.cookiesPs * 60 * 15 * 100);\n  section.appendChild(\n    StatsListing('basic', 'Cookies required for max reward of Duketater: ', duketaterFrag),\n  );\n  const missingPlantDrops = [];\n  Object.keys(GameData.PlantDrops).forEach((i) => {\n    if (!Game.HasUnlocked(GameData.PlantDrops[i])) {\n      missingPlantDrops.push(GameData.PlantDrops[i]);\n    }\n  });\n  if (missingPlantDrops.length !== 0) {\n    section.appendChild(\n      StatsListing('basic', 'Rare plant drops left to unlock', StatsMissDisp(missingPlantDrops)),\n    );\n  }\n  return section;\n}\n\n/**\n * This function creates the \"Prestige\" section of the stats page\n * @returns\t{object}\tsection\t\tThe object contating the Prestige section\n */\nexport function PrestigeSection() {\n  const section = document.createElement('div');\n  section.className = 'CMStatsPrestigeSection';\n\n  const possiblePresMax = Math.floor(\n    Game.HowMuchPrestige(\n      CacheRealCookiesEarned +\n        Game.cookiesReset +\n        CacheWrinklersTotal +\n        (Game.HasUnlocked('Chocolate egg') && !Game.Has('Chocolate egg') ? CacheLastChoEgg : 0),\n    ),\n  );\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      'Prestige level (cur / max)',\n      document.createTextNode(`${Beautify(Game.prestige)} / ${Beautify(possiblePresMax)}`),\n      'PrestMaxTooltipPlaceholder',\n    ),\n  );\n\n  const neededCook = Math.max(\n    0,\n    Game.HowManyCookiesReset(possiblePresMax + 1) -\n      (CacheRealCookiesEarned +\n        Game.cookiesReset +\n        CacheWrinklersTotal +\n        ((Game.HasUnlocked('Chocolate egg') && !Game.Has('Chocolate egg') ? CacheLastChoEgg : 0)\n          ? CacheLastChoEgg\n          : 0)),\n  );\n  const cookiesNextFrag = document.createDocumentFragment();\n  cookiesNextFrag.appendChild(document.createTextNode(Beautify(neededCook)));\n  const cookiesNextSmall = document.createElement('small');\n  cookiesNextSmall.textContent = ` (${FormatTime(neededCook / CacheAvgCPSWithChoEgg, 1)})`;\n  cookiesNextFrag.appendChild(cookiesNextSmall);\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      'Cookies to next level',\n      cookiesNextFrag,\n      'NextPrestTooltipPlaceholder',\n    ),\n  );\n\n  section.appendChild(\n    StatsListing(\n      'withTooltip',\n      'Heavenly chips (cur / max)',\n      document.createTextNode(\n        `${Beautify(Game.heavenlyChips)} / ${Beautify(\n          possiblePresMax - Game.prestige + Game.heavenlyChips,\n        )}`,\n      ),\n      'HeavenChipMaxTooltipPlaceholder',\n    ),\n  );\n\n  section.appendChild(\n    StatsListing(\n      'basic',\n      'Heavenly chips per second (last 5 seconds)',\n      document.createTextNode(Beautify(CacheHCPerSecond, 2)),\n    ),\n  );\n\n  const HCTarget = Number(CMOptions.HeavenlyChipsTarget);\n  if (!Number.isNaN(HCTarget)) {\n    const CookiesTillTarget =\n      HCTarget - Math.floor(Game.HowMuchPrestige(Game.cookiesReset + Game.cookiesEarned));\n    if (CookiesTillTarget > 0) {\n      section.appendChild(\n        StatsListing(\n          'basic',\n          'Heavenly chips to target set in settings (cur)',\n          document.createTextNode(Beautify(CookiesTillTarget)),\n        ),\n      );\n      section.appendChild(\n        StatsListing(\n          'basic',\n          'Time till target (cur, current 5 second average)',\n          document.createTextNode(FormatTime(CookiesTillTarget / CacheHCPerSecond)),\n        ),\n      );\n    }\n  }\n\n  const resetBonus = ResetBonus(possiblePresMax);\n  const resetFrag = document.createDocumentFragment();\n  resetFrag.appendChild(document.createTextNode(Beautify(resetBonus)));\n  const increase = Math.round((resetBonus / Game.cookiesPs) * 10000);\n  if (Number.isFinite(increase) && increase !== 0) {\n    const resetSmall = document.createElement('small');\n    resetSmall.textContent = ` (${increase / 100}% of income)`;\n    resetFrag.appendChild(resetSmall);\n  }\n  section.appendChild(\n    StatsListing('withTooltip', 'Reset bonus income', resetFrag, 'ResetTooltipPlaceholder'),\n  );\n\n  const currentPrestige = Math.floor(Game.HowMuchPrestige(Game.cookiesReset));\n  const willHave = Math.floor(Game.HowMuchPrestige(Game.cookiesReset + Game.cookiesEarned));\n  const willGet = willHave - currentPrestige;\n  if (!Game.Has('Lucky digit')) {\n    let delta7 = 7 - (willHave % 10);\n    if (delta7 < 0) delta7 += 10;\n    const next7Reset = willGet + delta7;\n    const next7Total = willHave + delta7;\n    const frag7 = document.createDocumentFragment();\n    frag7.appendChild(\n      document.createTextNode(\n        `${next7Total.toLocaleString()} / ${next7Reset.toLocaleString()} (+${delta7})`,\n      ),\n    );\n    section.appendChild(StatsListing('basic', 'Next \"Lucky Digit\" (total / reset)', frag7));\n  }\n\n  if (!Game.Has('Lucky number')) {\n    let delta777 = 777 - (willHave % 1000);\n    if (delta777 < 0) delta777 += 1000;\n    const next777Reset = willGet + delta777;\n    const next777Total = willHave + delta777;\n    const frag777 = document.createDocumentFragment();\n    frag777.appendChild(\n      document.createTextNode(\n        `${next777Total.toLocaleString()} / ${next777Reset.toLocaleString()} (+${delta777})`,\n      ),\n    );\n    section.appendChild(StatsListing('basic', 'Next \"Lucky Number\" (total / reset)', frag777));\n  }\n\n  if (!Game.Has('Lucky payout')) {\n    let delta777777 = 777777 - (willHave % 1000000);\n    if (delta777777 < 0) delta777777 += 1000000;\n    const next777777Reset = willGet + delta777777;\n    const next777777Total = willHave + delta777777;\n    const frag777777 = document.createDocumentFragment();\n    frag777777.appendChild(\n      document.createTextNode(\n        `${next777777Total.toLocaleString()} / ${next777777Reset.toLocaleString()} (+${delta777777})`,\n      ),\n    );\n    section.appendChild(StatsListing('basic', 'Next \"Lucky Payout\" (total / reset)', frag777777));\n  }\n\n  return section;\n}\n\n/**\n * This function creates the \"Season Specials\" section of the stats page\n * @returns\t{object}\tsection\t\tThe object contating the Season Specials section\n */\nexport function SeasonSection() {\n  const section = document.createElement('div');\n  section.className = 'CMStatsSeasonSection';\n\n  let specDisp = false;\n  const missingHalloweenCookies = [];\n  Object.keys(GameData.HalloCookies).forEach((i) => {\n    if (!Game.Has(GameData.HalloCookies[i])) {\n      missingHalloweenCookies.push(GameData.HalloCookies[i]);\n      specDisp = true;\n    }\n  });\n  const missingChristmasCookies = [];\n  Object.keys(GameData.ChristCookies).forEach((i) => {\n    if (!Game.Has(GameData.ChristCookies[i])) {\n      missingChristmasCookies.push(GameData.ChristCookies[i]);\n      specDisp = true;\n    }\n  });\n  const missingValentineCookies = [];\n  Object.keys(GameData.ValCookies).forEach((i) => {\n    if (!Game.Has(GameData.ValCookies[i])) {\n      missingValentineCookies.push(GameData.ValCookies[i]);\n      specDisp = true;\n    }\n  });\n  const missingNormalEggs = [];\n  Object.keys(Game.eggDrops).forEach((i) => {\n    if (!Game.HasUnlocked(Game.eggDrops[i])) {\n      missingNormalEggs.push(Game.eggDrops[i]);\n      specDisp = true;\n    }\n  });\n  const missingRareEggs = [];\n  Object.keys(Game.rareEggDrops).forEach((i) => {\n    if (!Game.HasUnlocked(Game.rareEggDrops[i])) {\n      missingRareEggs.push(Game.rareEggDrops[i]);\n      specDisp = true;\n    }\n  });\n  const choEgg = Game.HasUnlocked('Chocolate egg') && !Game.Has('Chocolate egg');\n  const centEgg = Game.Has('Century egg');\n\n  if (Game.season === 'christmas' || specDisp || choEgg || centEgg) {\n    section.appendChild(StatsHeader('Season Specials', 'Sea'));\n    if (CMOptions.Header.Sea) {\n      if (missingHalloweenCookies.length !== 0) {\n        section.appendChild(\n          StatsMissDispListing(\n            'basic',\n            'Halloween cookies left to buy',\n            StatsMissDisp(missingHalloweenCookies),\n            Game.season === 'halloween',\n          ),\n        );\n        let failRateHalloween = 0.95;\n        if (Game.HasAchiev('Spooky cookies')) failRateHalloween = 0.8;\n        if (Game.Has('Starterror')) failRateHalloween *= 0.9;\n        failRateHalloween *= 1 / Game.dropRateMult();\n        if (Game.hasGod) {\n          const godLvl = Game.hasGod('seasons');\n          if (godLvl === 1) failRateHalloween *= 0.9;\n          else if (godLvl === 2) failRateHalloween *= 0.95;\n          else if (godLvl === 3) failRateHalloween *= 0.97;\n        }\n        const obtainedCookiesChance = missingHalloweenCookies.length / 7;\n        section.appendChild(\n          StatsMissDispListing(\n            'basic',\n            'Chance of receiving a cookie from wrinkler/shiny wrinkler',\n            document.createTextNode(\n              `${Beautify((1 - failRateHalloween) * obtainedCookiesChance * 100)}% / ${Beautify(\n                (1 - failRateHalloween * 0.9) * obtainedCookiesChance * 100,\n              )}%`,\n            ),\n            Game.season === 'halloween',\n          ),\n        );\n      }\n      if (missingChristmasCookies.length !== 0) {\n        section.appendChild(\n          StatsMissDispListing(\n            'basic',\n            'Christmas cookies left to buy',\n            StatsMissDisp(missingChristmasCookies),\n            Game.season === 'christmas',\n          ),\n        );\n        let failRateChristmas = 0.8;\n        if (Game.HasAchiev('Let it snow')) failRateChristmas = 0.6;\n        failRateChristmas *= 1 / Game.dropRateMult();\n        if (Game.Has('Starsnow')) failRateChristmas *= 0.95;\n        if (Game.hasGod) {\n          const godLvl = Game.hasGod('seasons');\n          if (godLvl === 1) failRateChristmas *= 0.9;\n          else if (godLvl === 2) failRateChristmas *= 0.95;\n          else if (godLvl === 3) failRateChristmas *= 0.97;\n        }\n        const obtainedCookiesChance = missingChristmasCookies.length / 7;\n        section.appendChild(\n          StatsMissDispListing(\n            'basic',\n            'Chance of receiving a cookie from reindeer',\n            document.createTextNode(\n              `${Beautify((1 - failRateChristmas) * obtainedCookiesChance * 100)}%`,\n            ),\n            Game.season === 'christmas',\n          ),\n        );\n      }\n      if (missingValentineCookies.length !== 0) {\n        section.appendChild(\n          StatsMissDispListing(\n            'basic',\n            'Valentine cookies left to buy',\n            StatsMissDisp(missingValentineCookies),\n            Game.season === 'valentines',\n          ),\n        );\n      }\n      const dropRateEgg = function (StartingFailRate) {\n        let failRateEgg = StartingFailRate * (1 / Game.dropRateMult());\n        if (Game.HasAchiev('Hide & seek champion')) failRateEgg *= 0.7;\n        if (Game.Has('Omelette')) failRateEgg *= 0.9;\n        if (Game.Has('Starspawn')) failRateEgg *= 0.9;\n        if (Game.hasGod) {\n          const godLvl = Game.hasGod('seasons');\n          if (godLvl === 1) failRateEgg *= 0.9;\n          else if (godLvl === 2) failRateEgg *= 0.95;\n          else if (godLvl === 3) failRateEgg *= 0.97;\n        }\n        // Calculations courtesy of @svschouw, at https://github.com/Aktanusa/CookieMonster/issues/25\n        const succesRateEgg = 1 - failRateEgg;\n        const obtainedEggs = Game.eggDrops.length - missingNormalEggs.length;\n        const obtainedRareEggs = Game.rareEggDrops.length - missingRareEggs.length;\n        const pNormal1 = succesRateEgg * 0.9 * (1 - obtainedEggs / Game.eggDrops.length);\n        const pRare1 = succesRateEgg * 0.1 * (1 - obtainedRareEggs / Game.rareEggDrops.length);\n        const pRedropNormal = succesRateEgg * 0.9 * (obtainedEggs / Game.eggDrops.length);\n        const pRedropRare = succesRateEgg * 0.1 * (obtainedRareEggs / Game.rareEggDrops.length);\n        const pRedrop = pRedropNormal + pRedropRare;\n        const pNormal2 = pRedrop * 0.9 * (1 - obtainedEggs / Game.eggDrops.length);\n        const pRare2 = pRedrop * 0.1 * (1 - obtainedRareEggs / Game.rareEggDrops.length);\n        return [pNormal1 + pNormal2, pRare1 + pRare2];\n      };\n      if (missingNormalEggs.length !== 0) {\n        section.appendChild(\n          StatsMissDispListing(\n            'basic',\n            'Normal easter eggs left to unlock',\n            StatsMissDisp(missingNormalEggs),\n            Game.season === 'easter',\n          ),\n        );\n        section.appendChild(\n          StatsMissDispListing(\n            'basic',\n            'Chance of receiving an egg from wrinkler/golden cookie',\n            document.createTextNode(\n              `${Beautify(dropRateEgg(0.98)[0] * 100)}% / ${Beautify(dropRateEgg(0.9)[0] * 100)}%`,\n            ),\n            Game.season === 'easter',\n          ),\n        );\n      }\n      if (missingRareEggs.length !== 0) {\n        section.appendChild(\n          StatsMissDispListing(\n            'basic',\n            'Rare easter eggs left to unlock',\n            StatsMissDisp(missingRareEggs),\n            Game.season === 'easter',\n          ),\n        );\n        section.appendChild(\n          StatsMissDispListing(\n            'basic',\n            'Chance of receiving a rare egg from wrinkler/golden cookie',\n            document.createTextNode(\n              `${Beautify(dropRateEgg(0.98)[1] * 100)}% / ${Beautify(dropRateEgg(0.9)[1] * 100)}%`,\n            ),\n            Game.season === 'easter',\n          ),\n        );\n      }\n\n      if (Game.season === 'christmas')\n        section.appendChild(\n          StatsMissDispListing(\n            'basic',\n            'Reindeer reward',\n            document.createTextNode(Beautify(CacheSeaSpec)),\n            true,\n          ),\n        );\n      if (choEgg) {\n        section.appendChild(\n          StatsListing(\n            'withTooltip',\n            'Chocolate egg cookies',\n            document.createTextNode(Beautify(CacheLastChoEgg)),\n            'ChoEggTooltipPlaceholder',\n          ),\n        );\n      }\n      if (centEgg) {\n        section.appendChild(\n          StatsListing(\n            'basic',\n            'Century egg multiplier',\n            document.createTextNode(`${Math.round((CacheCentEgg - 1) * 10000) / 100}%`),\n          ),\n        );\n      }\n    }\n  }\n  return section;\n}\n","import { CacheRealCookiesEarned } from '../../Cache/VariablesAndData';\nimport CalculateGains from '../Calculations/CalculateGains';\nimport CheckOtherAchiev from '../Calculations/CheckOtherAchiev';\nimport CopyData from '../SimulationData/CopyData';\nimport SimWin from '../SimulationData/SimWin';\nimport { SimAchievementsOwned, SimCookiesPs, SimPrestige, SimUpgrades } from '../VariablesAndData'; // eslint-disable-line no-unused-vars\n\n/**\n * This function calculates the cookies per click difference betwene current and after a ascension\n * It is called by CM.Disp.CreateStatsPrestigeSection()\n * @param\t{number}\tnewHeavenlyChips\tThe total heavenly chips after ascension\n * @returns\t{number}\tResetCPS\t\t\tThe CPS difference after reset\n */\nexport default function ResetBonus(newHeavenlyChips) {\n  // Calculate CPS with all Heavenly upgrades\n  let curCPS = Game.cookiesPs;\n\n  CopyData();\n\n  if (SimUpgrades['Heavenly key'].bought === 0) {\n    SimUpgrades['Heavenly chip secret'].bought = 1;\n    SimUpgrades['Heavenly cookie stand'].bought = 1;\n    SimUpgrades['Heavenly bakery'].bought = 1;\n    SimUpgrades['Heavenly confectionery'].bought = 1;\n    SimUpgrades['Heavenly key'].bought = 1;\n\n    CalculateGains();\n\n    curCPS = SimCookiesPs;\n\n    CopyData();\n  }\n\n  if (CacheRealCookiesEarned >= 1000000) SimWin('Sacrifice');\n  if (CacheRealCookiesEarned >= 1000000000) SimWin('Oblivion');\n  if (CacheRealCookiesEarned >= 1000000000000) SimWin('From scratch');\n  if (CacheRealCookiesEarned >= 1000000000000000) SimWin('Nihilism');\n  if (CacheRealCookiesEarned >= 1000000000000000000) SimWin('Dematerialize');\n  if (CacheRealCookiesEarned >= 1000000000000000000000) SimWin('Nil zero zilch');\n  if (CacheRealCookiesEarned >= 1000000000000000000000000) SimWin('Transcendence');\n  if (CacheRealCookiesEarned >= 1000000000000000000000000000) SimWin('Obliterate');\n  if (CacheRealCookiesEarned >= 1000000000000000000000000000000) SimWin('Negative void');\n  if (CacheRealCookiesEarned >= 1000000000000000000000000000000000) SimWin('To crumbs, you say?');\n  if (CacheRealCookiesEarned >= 1000000000000000000000000000000000000) SimWin('You get nothing');\n  if (CacheRealCookiesEarned >= 1000000000000000000000000000000000000000)\n    SimWin('Humble rebeginnings');\n  if (CacheRealCookiesEarned >= 1000000000000000000000000000000000000000000)\n    SimWin('The end of the world');\n  if (CacheRealCookiesEarned >= 1000000000000000000000000000000000000000000000)\n    SimWin(\"Oh, you're back\");\n  if (CacheRealCookiesEarned >= 1000000000000000000000000000000000000000000000000)\n    SimWin('Lazarus');\n  if (CacheRealCookiesEarned >= 1000000000000000000000000000000000000000000000000000)\n    SimWin('Smurf account');\n  if (CacheRealCookiesEarned >= 1000000000000000000000000000000000000000000000000000000)\n    SimWin(\"If at first you don't succeed\");\n\n  SimUpgrades['Heavenly chip secret'].bought = 1;\n  SimUpgrades['Heavenly cookie stand'].bought = 1;\n  SimUpgrades['Heavenly bakery'].bought = 1;\n  SimUpgrades['Heavenly confectionery'].bought = 1;\n  SimUpgrades['Heavenly key'].bought = 1;\n\n  SimPrestige = newHeavenlyChips;\n\n  const lastAchievementsOwned = SimAchievementsOwned;\n\n  CalculateGains();\n\n  CheckOtherAchiev();\n\n  if (lastAchievementsOwned !== SimAchievementsOwned) {\n    CalculateGains();\n  }\n\n  const ResetCPS = SimCookiesPs - curCPS;\n\n  // Reset Pretige level after calculation as it is used in CM.Sim.CalculateGains() so can't be local\n  SimPrestige = Game.prestige;\n\n  return ResetCPS;\n}\n","import { CMOptions } from '../../../Config/VariablesAndData';\n\nfunction CrateTooltipLockedAchievements(me) {\n  const tags = [];\n  if (me.pool === 'shadow') tags.push('Shadow Achievement', '#9700cf');\n  else tags.push('Achievement', 0);\n  tags.push('Locked', 0);\n\n  let neuromancy = 0;\n  if (Game.Has('Neuromancy') || (Game.sesame && me.pool === 'debug')) neuromancy = 1;\n  if (neuromancy && me.won === 0) tags.push('Click to win!', '#00c462');\n  else if (neuromancy && me.won > 0) tags.push('Click to lose!', '#00c462');\n\n  let { icon } = me;\n  if (me.iconFunction) icon = me.iconFunction();\n\n  let { desc } = me;\n  if (me.descFunc) desc = me.descFunc('stats');\n\n  let tagsStr = '';\n  for (let i = 0; i < tags.length; i += 2) {\n    if (i % 2 === 0)\n      tagsStr += ` <div class=\"tag\" style=\"color:${tags[i + 1] === 0 ? '#fff' : tags[i + 1]};\">[${\n        tags[i]\n      }]</div>`;\n  }\n  tagsStr = tagsStr.substring(1);\n\n  return `<div style=\"padding:8px 4px;min-width:350px;opacity:0.5\">\n  <div class=\"icon\" style=\"float:left;margin-left:-8px;margin-top:-8px;background-position:${\n    -icon[0] * 48\n  }px ${-icon[1] * 48}px;\"></div>\n  <div class=\"name\">${me.name}</div>\n  ${tagsStr}<div class=\"line\"></div><div class=\"description\">${desc}</div></div>\n  ${\n    Game.sesame\n      ? `<div style=\"font-size:9px;\">Id : ${me.id} | Order : ${Math.floor(me.order)}${\n          me.tier ? ` | Tier : ${me.tier}` : ''\n        }</div>`\n      : ''\n  }`;\n}\n\n/**\n * This function overwrites the crates of missing achievements\n */\nexport default function AddMissingAchievements() {\n  let achievs;\n  Object.values(document.querySelectorAll('div.title')).forEach((i) => {\n    if (i.textContent.includes('Achievements')) {\n      achievs = i.parentElement.querySelectorAll('div.listing.crateBox')[0];\n    }\n  });\n  if (CMOptions.MissingAchievements) {\n    Object.values(achievs.children).forEach((achievsCrate) => {\n      if (!achievsCrate.className.includes('enabled')) {\n        const id = achievsCrate.onclick.toString().split(/\\[(.*)\\]/gi)[1];\n        const { icon } = Game.AchievementsById[id];\n        // eslint-disable-next-line no-param-reassign\n        achievsCrate.style.backgroundPosition = `${-icon[0] * 48}px ${-icon[1] * 48}px`;\n        // eslint-disable-next-line no-param-reassign\n        achievsCrate.onmouseover = function () {\n          if (!Game.mouseDown) {\n            Game.setOnCrate(this);\n            Game.tooltip.dynamic = 1;\n            Game.tooltip.draw(\n              this,\n              () =>\n                (function () {\n                  return CrateTooltipLockedAchievements(Game.AchievementsById[id]);\n                })(),\n              'top',\n            );\n            Game.tooltip.wobble();\n          }\n        };\n      }\n    });\n  }\n}\n","/** Data related to the display titles of certain sections in menu screens */\n\n/** Display titles of the headers of the Cookie Monster settings section */\nexport const ConfigGroups: { [index: string]: string } = {\n  Favourite: 'Favourite Settings',\n  Calculation: 'Calculation',\n  Notation: 'Notation',\n  Colours: 'Colours and colour coding',\n  BarsDisplay: 'Infobars and visual settings',\n  Tooltip: 'Tooltips',\n  Statistics: 'Statistics',\n  Notification: 'Notifications',\n  Miscellaneous: 'Miscellaneous',\n};\n\n/** Display titles of the headers of the notification section of the Cookie Monster settings */\nexport const ConfigGroupsNotification: { [index: string]: string } = {\n  NotificationGeneral: 'General Notifications',\n  NotificationGC: 'Golden Cookie',\n  NotificationFC: 'Fortune Cookie',\n  NotificationSea: 'Season Special',\n  NotificationGard: 'Garden Tick',\n  NotificationMagi: 'Full Magic Bar',\n  NotificationWrink: 'Wrinkler',\n  NotificationWrinkMax: 'Maximum Wrinklers',\n};\n","import { ToggleHeader } from '../../../Config/ToggleSetting';\nimport { CMOptions } from '../../../Config/VariablesAndData';\n\n/**\n * This function creates a header-object for the options page\n * @param \t{string}\t\tconfig\tThe name of the Config-group\n * @param \t{string}\t\ttext\tThe to-be displayed name of the header\n * @returns\t{object}\t\tdiv\t\tThe header object\n */\nexport default function CreatePrefHeader(config, text) {\n  const div = document.createElement('div');\n  div.className = 'title';\n\n  div.style.opacity = '0.7';\n  div.style.fontSize = '17px';\n  div.appendChild(document.createTextNode(`${text} `));\n  const span = document.createElement('span'); // Creates the +/- button\n  span.style.cursor = 'pointer';\n  span.style.display = 'inline-block';\n  span.style.height = '14px';\n  span.style.width = '14px';\n  span.style.borderRadius = '7px';\n  span.style.textAlign = 'center';\n  span.style.backgroundColor = '#C0C0C0';\n  span.style.color = 'black';\n  span.style.fontSize = '13px';\n  span.style.verticalAlign = 'middle';\n  span.textContent = CMOptions.Header[config] ? '-' : '+';\n  span.onclick = function () {\n    ToggleHeader(config);\n    Game.UpdateMenu();\n  };\n  div.appendChild(span);\n  return div;\n}\n","import jscolor, * as JsColor from '@eastdesire/jscolor';\nimport ToggleFavouriteSetting from '../../../Config/Toggles/ToggleFavourites';\nimport { SaveConfig } from '../../../Config/SaveLoadReload/SaveLoadReloadSettings';\nimport { ConfigPrefix, ToggleConfig, ToggleConfigVolume } from '../../../Config/ToggleSetting';\nimport { CMOptions } from '../../../Config/VariablesAndData';\nimport {} from '../../../Data/Sectionheaders.ts';\nimport Config from '../../../Data/SettingsData';\nimport RefreshScale from '../../HelperFunctions/RefreshScale';\nimport UpdateColours from '../../HelperFunctions/UpdateColours';\nimport Flash from '../../Notifications/Flash';\nimport PlaySound from '../../Notifications/Sound';\nimport { FavouriteSettings, SimpleTooltipElements } from '../../VariablesAndData';\nimport CookieMonsterPrompt from '../Prompt';\n\n/**\n * This function creates the favourite setting star object\n * @param \t{string}\t\tconfig\tThe name of the option\n * @returns\t{object}\t\tdiv\t\tThe option object\n */\nfunction CreateFavouriteStar(config) {\n  const FavStar = document.createElement('a');\n  if (FavouriteSettings.includes(config)) {\n    FavStar.innerText = '★';\n    FavStar.style.color = 'yellow';\n  } else FavStar.innerText = '☆';\n  FavStar.className = 'option';\n  FavStar.onclick = function () {\n    ToggleFavouriteSetting(config);\n    SaveConfig();\n    Game.UpdateMenu();\n  };\n  FavStar.onmouseover = function () {\n    Game.tooltip.draw(this, escape(SimpleTooltipElements.FavouriteSettingPlaceholder.innerHTML));\n  };\n  FavStar.onmouseout = function () {\n    Game.tooltip.hide();\n  };\n  FavStar.appendChild(document.createTextNode(' '));\n  return FavStar;\n}\n\n/**\n * This function creates an option-object for the options page\n * @param \t{string}\t\tconfig\tThe name of the option\n * @returns\t{object}\t\tdiv\t\tThe option object\n */\nexport default function CreatePrefOption(config) {\n  const div = document.createElement('div');\n  div.className = 'listing';\n  if (CMOptions.FavouriteSettings === 1) {\n    div.appendChild(CreateFavouriteStar(config));\n  }\n  if (Config[config].type === 'bool') {\n    const a = document.createElement('a');\n    if (Config[config].toggle && CMOptions[config] === 0) {\n      a.className = 'option off';\n    } else {\n      a.className = 'option';\n    }\n    a.id = ConfigPrefix + config;\n    a.onclick = function () {\n      ToggleConfig(config);\n      Game.UpdateMenu();\n    };\n    a.textContent = Config[config].label[CMOptions[config]];\n    div.appendChild(a);\n    const label = document.createElement('label');\n    label.textContent = Config[config].desc;\n    label.style.lineHeight = '1.6';\n    div.appendChild(label);\n    return div;\n  }\n  if (Config[config].type === 'vol') {\n    const volume = document.createElement('div');\n    volume.className = 'sliderBox';\n    const title = document.createElement('div');\n    title.style.float = 'left';\n    title.innerHTML = Config[config].desc;\n    volume.appendChild(title);\n    const percent = document.createElement('div');\n    percent.id = `slider${config}right`;\n    percent.style.float = 'right';\n    percent.innerHTML = `${CMOptions[config]}%`;\n    volume.appendChild(percent);\n    const slider = document.createElement('input');\n    slider.className = 'slider';\n    slider.id = `slider${config}`;\n    slider.style.clear = 'both';\n    slider.type = 'range';\n    slider.min = '0';\n    slider.max = '100';\n    slider.step = '1';\n    slider.value = CMOptions[config];\n    slider.oninput = function () {\n      ToggleConfigVolume(config);\n      Game.UpdateMenu();\n    };\n    slider.onchange = function () {\n      ToggleConfigVolume(config);\n      Game.UpdateMenu();\n    };\n    volume.appendChild(slider);\n    div.appendChild(volume);\n    const a = document.createElement('a');\n    a.className = 'option';\n    a.onclick = function () {\n      PlaySound(\n        CMOptions[config.replace('Volume', 'SoundURL')],\n        config.replace('Volume', 'Sound'),\n        config,\n        true,\n      );\n    };\n    a.textContent = 'Test sound';\n    div.appendChild(a);\n    return div;\n  }\n  if (Config[config].type === 'url') {\n    const span = document.createElement('span');\n    span.className = 'option';\n    span.textContent = `${Config[config].label} `;\n    span.style.lineHeight = '1.6';\n    div.appendChild(span);\n    const input = document.createElement('input');\n    input.id = ConfigPrefix + config;\n    input.className = 'option';\n    input.type = 'text';\n    input.readOnly = true;\n    input.setAttribute('value', CMOptions[config]);\n    input.style.width = '300px';\n    div.appendChild(input);\n    div.appendChild(document.createTextNode(' '));\n    const inputPrompt = document.createElement('input');\n    inputPrompt.id = `${ConfigPrefix + config}Prompt`;\n    inputPrompt.className = 'option';\n    inputPrompt.type = 'text';\n    inputPrompt.setAttribute('value', CMOptions[config]);\n    const a = document.createElement('a');\n    a.className = 'option';\n    a.onclick = function () {\n      CookieMonsterPrompt(inputPrompt.outerHTML, [\n        [\n          'Save',\n          function () {\n            CMOptions[config] = l(`${ConfigPrefix}${config}Prompt`).value;\n            SaveConfig();\n            Game.ClosePrompt();\n            Game.UpdateMenu();\n          },\n        ],\n        [\n          'Cancel',\n          function () {\n            Game.ClosePrompt();\n          },\n        ],\n      ]);\n    };\n    a.textContent = 'Edit';\n    div.appendChild(a);\n    const label = document.createElement('label');\n    label.textContent = Config[config].desc;\n    label.style.lineHeight = '1.6';\n    div.appendChild(label);\n    return div;\n  }\n  if (Config[config].type === 'colour') {\n    const innerSpan = document.createElement('span');\n    innerSpan.className = 'option';\n    const input = document.createElement('input');\n    input.id = config;\n    input.style.width = '65px';\n    input.setAttribute('value', CMOptions[config]);\n    innerSpan.appendChild(input);\n    const change = function () {\n      CMOptions[this.targetElement.id] = this.toHEXString();\n      UpdateColours();\n      SaveConfig();\n      Game.UpdateMenu();\n    };\n    // eslint-disable-next-line no-new\n    new JsColor(input, { hash: true, position: 'right', onInput: change });\n    const label = document.createElement('label');\n    label.textContent = Config[config].desc;\n    label.style.lineHeight = '1.6';\n    innerSpan.appendChild(label);\n    if (config.includes('Flash')) {\n      const a = document.createElement('a');\n      a.className = 'option';\n      a.onclick = function () {\n        Flash(3, config.replace('Colour', ''), true);\n      };\n      a.textContent = 'Test flash';\n      innerSpan.appendChild(a);\n    }\n    div.appendChild(innerSpan);\n    jscolor.init();\n    return div;\n  }\n  if (Config[config].type === 'numscale') {\n    const span = document.createElement('span');\n    span.className = 'option';\n    span.textContent = `${Config[config].label} `;\n    span.style.lineHeight = '1.6';\n    div.appendChild(span);\n    const input = document.createElement('input');\n    input.id = ConfigPrefix + config;\n    input.className = 'option';\n    input.type = 'number';\n    input.value = CMOptions[config];\n    input.min = Config[config].min;\n    input.max = Config[config].max;\n    input.oninput = function () {\n      CMOptions[config] = this.value;\n      SaveConfig();\n      RefreshScale();\n      Game.UpdateMenu();\n    };\n    div.appendChild(input);\n    div.appendChild(document.createTextNode(' '));\n    const label = document.createElement('label');\n    label.textContent = Config[config].desc;\n    label.style.lineHeight = '1.6';\n    div.appendChild(label);\n    return div;\n  }\n  return div;\n}\n","import { FavouriteSettings } from '../../Disp/VariablesAndData';\n\n/**\n * This function toggles whether a setting is part of the favourites section in setting or not\n * @param {string} config\tThe name of the toggleable config option\n */\nexport default function ToggleFavouriteSetting(config) {\n  if (FavouriteSettings.includes(config))\n    FavouriteSettings = FavouriteSettings.filter((ele) => ele !== config);\n  else FavouriteSettings.push(config);\n}\n","/** Creates a Prompt similar to the base game without some of the stuff breaking them */\nexport default function CookieMonsterPrompt(content, options) {\n  Game.promptWrapL.className = 'framed';\n  const str = content;\n  Game.promptL.innerHTML = `${str}<div class=\"optionBox\"></div>`;\n  Object.keys(options).forEach((i) => {\n    const option = document.createElement('a');\n    option.id = `promptOption${i}`;\n    option.className = 'option';\n    option.onclick = function () {\n      PlaySound('snd/tick.mp3');\n      options[i][1]();\n    };\n    option.textContent = options[i][0];\n    Game.promptL.children[1].appendChild(option);\n  });\n  Game.promptAnchorL.style.display = 'block';\n  Game.darkenL.style.display = 'block';\n  Game.promptL.focus();\n  Game.promptOn = 1;\n  Game.UpdatePrompt();\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\n\n/**\n * This function fixes Game.mouseY as a result of bars that are added by CookieMonster\n * It is called by Game.UpdateWrinklers(), Game.UpdateSpecial() and the .onmousover of the BigCookie\n * before execution of their actual function\n */\nexport default function FixMouseY(target) {\n  if (CMOptions.TimerBar === 1 && CMOptions.TimerBarPos === 0) {\n    const timerBarHeight = parseInt(l('CMTimerBar').style.height, 10);\n    Game.mouseY -= timerBarHeight;\n    target();\n    Game.mouseY += timerBarHeight;\n  } else {\n    target();\n  }\n}\n","import jscolor from '@eastdesire/jscolor';\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport CMBeautify from '../../Disp/BeautifyAndFormatting/Beautify';\nimport FormatTime from '../../Disp/BeautifyAndFormatting/FormatTime';\nimport { AddAuraInfo, AddDragonLevelUpTooltip } from '../../Disp/Dragon/Dragon';\nimport AddMenu from '../../Disp/MenuSections/AddMenus';\nimport UpdateTitle from '../../Disp/TabTitle/TabTitle';\nimport ReplaceAscendTooltip from '../../Disp/Tooltips/AscendButton';\nimport UpdateTooltipLocation from '../../Disp/Tooltips/PositionLocation';\nimport { CMSayTime, Title } from '../../Disp/VariablesAndData'; // eslint-disable-line no-unused-vars\nimport { SimDoSims } from '../../Sim/VariablesAndData'; // eslint-disable-line no-unused-vars\nimport ReplaceTooltipUpgrade from '../ReplaceGameElements/TooltipUpgrades';\nimport {\n  BackupFunctions,\n  CenturyDateAtBeginLoop, // eslint-disable-line no-unused-vars\n  CycliusDateAtBeginLoop, // eslint-disable-line no-unused-vars\n} from '../VariablesAndData';\nimport FixMouseY from './FixMouse';\n\n/**\n * This function replaces certain native (from the base-game) functions\n */\nexport default function ReplaceNative() {\n  // eslint-disable-next-line no-undef\n  BackupFunctions.Beautify = Beautify;\n  // eslint-disable-next-line no-undef\n  Beautify = CMBeautify;\n\n  BackupFunctions.CalculateGains = Game.CalculateGains;\n  Game.CalculateGains = function () {\n    BackupFunctions.CalculateGains();\n    SimDoSims = 1;\n    CycliusDateAtBeginLoop = Date.now();\n    CenturyDateAtBeginLoop = Date.now();\n  };\n\n  BackupFunctions.tooltip = {};\n  BackupFunctions.tooltip.draw = Game.tooltip.draw;\n  BackupFunctions.tooltip.drawMod = new Function( // eslint-disable-line no-new-func\n    `return ${Game.tooltip.draw.toString().split('this').join('Game.tooltip')}`,\n  )();\n  Game.tooltip.draw = function (from, text, origin) {\n    BackupFunctions.tooltip.drawMod(from, text, origin);\n  };\n\n  BackupFunctions.tooltip.update = Game.tooltip.update;\n  BackupFunctions.tooltip.updateMod = new Function( // eslint-disable-line no-new-func\n    `return ${Game.tooltip.update.toString().split('this.').join('Game.tooltip.')}`,\n  )();\n  Game.tooltip.update = function () {\n    BackupFunctions.tooltip.updateMod();\n    UpdateTooltipLocation();\n  };\n\n  BackupFunctions.UpdateWrinklers = Game.UpdateWrinklers;\n  Game.UpdateWrinklers = function () {\n    FixMouseY(BackupFunctions.UpdateWrinklers);\n  };\n\n  BackupFunctions.UpdateSpecial = Game.UpdateSpecial;\n  Game.UpdateSpecial = function () {\n    FixMouseY(BackupFunctions.UpdateSpecial);\n  };\n\n  // Assumes newer browsers\n  l('bigCookie').removeEventListener('click', Game.ClickCookie, false);\n  l('bigCookie').addEventListener(\n    'click',\n    () => {\n      FixMouseY(Game.ClickCookie);\n    },\n    false,\n  );\n\n  BackupFunctions.RebuildUpgrades = Game.RebuildUpgrades;\n  Game.RebuildUpgrades = function () {\n    BackupFunctions.RebuildUpgrades();\n    ReplaceTooltipUpgrade();\n    Game.CalculateGains();\n  };\n\n  BackupFunctions.ClickProduct = Game.ClickProduct;\n  /**\n   * This function adds a check to the purchase of a building to allow BulkBuyBlock to work.\n   * If the options is 1 (on) bulkPrice is under cookies you can't buy the building.\n   */\n  Game.ClickProduct = function (what) {\n    if (\n      !CMOptions.BulkBuyBlock ||\n      Game.ObjectsById[what].bulkPrice < Game.cookies ||\n      Game.buyMode === -1\n    ) {\n      BackupFunctions.ClickProduct(what);\n    }\n  };\n\n  BackupFunctions.DescribeDragonAura = Game.DescribeDragonAura;\n  /**\n   * This function adds the function CM.Disp.AddAuraInfo() to Game.DescribeDragonAura()\n   * This adds information about CPS differences and costs to the aura choosing interface\n   * @param\t{number}\taura\tThe number of the aura currently selected by the mouse/user\n   */\n  Game.DescribeDragonAura = function (aura) {\n    BackupFunctions.DescribeDragonAura(aura);\n    AddAuraInfo(aura);\n  };\n\n  BackupFunctions.ToggleSpecialMenu = Game.ToggleSpecialMenu;\n  /**\n   * This function adds the code to display the tooltips for the levelUp button of the dragon\n   */\n  Game.ToggleSpecialMenu = function (on) {\n    BackupFunctions.ToggleSpecialMenu(on);\n    AddDragonLevelUpTooltip();\n  };\n\n  BackupFunctions.UpdateMenu = Game.UpdateMenu;\n  Game.UpdateMenu = function () {\n    if (typeof jscolor.picker === 'undefined' || typeof jscolor.picker.owner === 'undefined') {\n      BackupFunctions.UpdateMenu();\n      AddMenu();\n    }\n  };\n\n  BackupFunctions.sayTime = Game.sayTime;\n  // eslint-disable-next-line no-unused-vars\n  CMSayTime = function (time, detail) {\n    if (Number.isNaN(time) || time <= 0) return BackupFunctions.sayTime(time, detail);\n    return FormatTime(time / Game.fps, 1);\n  };\n\n  BackupFunctions.Logic = Game.Logic;\n  Game.Logic = function () {\n    BackupFunctions.Logic();\n\n    // Update tab title\n    let title = 'Cookie Clicker';\n    if (Game.season === 'fools') title = 'Cookie Baker';\n    // eslint-disable-next-line no-unused-vars\n    Title = `${Game.OnAscend ? 'Ascending! ' : ''}${CMBeautify(Game.cookies)} ${\n      Game.cookies === 1 ? 'cookie' : 'cookies'\n    } - ${title}`;\n    UpdateTitle();\n\n    // Since the Ascend Tooltip is not actually a tooltip we need to add our additional info here...\n    ReplaceAscendTooltip();\n  };\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\n\n/**\n * This function updates the location of the tooltip\n * It is called by Game.tooltip.update() because of CM.Main.ReplaceNative()\n */\nexport default function UpdateTooltipLocation() {\n  if (Game.tooltip.origin === 'store') {\n    let warnOffset = 0;\n    if (\n      CMOptions.ToolWarnLucky === 1 &&\n      CMOptions.ToolWarnPos === 1 &&\n      l('CMDispTooltipWarningParent') !== null\n    ) {\n      warnOffset = l('CMDispTooltipWarningParent').clientHeight - 4;\n    }\n    Game.tooltip.tta.style.top = `${Math.min(\n      parseInt(Game.tooltip.tta.style.top, 10),\n      l('game').clientHeight +\n        l('topBar').clientHeight -\n        Game.tooltip.tt.clientHeight -\n        warnOffset -\n        46,\n    )}px`;\n  }\n  // Kept for future possible use if the code changes again\n  /* else if (!Game.onCrate && !Game.OnAscend && CM.Options.TimerBar === 1 && CM.Options.TimerBarPos === 0) {\n\t\tGame.tooltip.tta.style.top = (parseInt(Game.tooltip.tta.style.top) + parseInt(CM.Disp.TimerBar.style.height)) + 'px';\n\t} */\n}\n","import { CreateTooltip } from '../../Disp/Tooltips/Tooltip';\nimport { TooltipUpgradeBackup } from '../VariablesAndData';\n\n/**\n * This function replaces the original .onmouseover functions of upgrades so that it calls CM.Disp.Tooltip()\n * CM.Disp.Tooltip() sets the tooltip type to 'u'\n * It is called by Game.RebuildUpgrades() through CM.Main.ReplaceNative() and is therefore not permanent like the other ReplaceTooltip functions\n */\nexport default function ReplaceTooltipUpgrade() {\n  TooltipUpgradeBackup = [];\n  Object.keys(Game.UpgradesInStore).forEach((i) => {\n    if (l(`upgrade${i}`).onmouseover !== null) {\n      TooltipUpgradeBackup[i] = l(`upgrade${i}`).onmouseover;\n      l(`upgrade${i}`).onmouseover = function () {\n        if (!Game.mouseDown) {\n          Game.setOnCrate(this);\n          Game.tooltip.dynamic = 1;\n          Game.tooltip.draw(this, () => CreateTooltip('u', `${i}`), 'store');\n          Game.tooltip.wobble();\n        }\n      };\n    }\n  });\n}\n","/** Functions related to the Dragon */\n\nimport CacheDragonCost from '../../Cache/Dragon/Dragon';\nimport { CacheCostDragonUpgrade } from '../../Cache/VariablesAndData';\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport CalculateChangeAura from '../../Sim/SimulationEvents/AuraChange';\nimport Beautify from '../BeautifyAndFormatting/Beautify';\nimport FormatTime from '../BeautifyAndFormatting/FormatTime';\n\n/**\n * This functions adds the two extra lines about CPS and time to recover to the aura picker infoscreen\n * @param\t{number}\taura\tThe number of the aura currently selected by the mouse/user\n */\nexport function AddAuraInfo(aura) {\n  if (CMOptions.DragonAuraInfo === 1) {\n    const [bonusCPS, priceOfChange] = CalculateChangeAura(aura);\n    const timeToRecover = FormatTime(priceOfChange / (bonusCPS + Game.cookiesPs));\n    let bonusCPSPercentage;\n    if (Game.cookiesPs === 0) bonusCPSPercentage = Beautify(Infinity);\n    else bonusCPSPercentage = Beautify((bonusCPS / Game.cookiesPs) * 100);\n\n    l('dragonAuraInfo').style.minHeight = '60px';\n    l('dragonAuraInfo').style.margin = '8px';\n    l('dragonAuraInfo').appendChild(document.createElement('div')).className = 'line';\n    const div = document.createElement('div');\n    div.style.minWidth = '200px';\n    div.style.textAlign = 'center';\n    div.textContent = `Picking this aura will change CPS by ${Beautify(\n      bonusCPS,\n    )} (${bonusCPSPercentage}% of current CPS).`;\n    l('dragonAuraInfo').appendChild(div);\n    const div2 = document.createElement('div');\n    div2.style.minWidth = '200px';\n    div2.style.textAlign = 'center';\n    div2.textContent = `It will take ${timeToRecover} to recover the cost.`;\n    l('dragonAuraInfo').appendChild(div2);\n  }\n}\n\n/**\n * This functions adds a tooltip to the level up button displaying the cost of rebuying all\n * It is called by Game.ToggleSpecialMenu() after CM.Main.ReplaceNative()\n */\nexport function AddDragonLevelUpTooltip() {\n  // Check if it is the dragon popup that is on screen\n  if (\n    (l('specialPopup').className.match(/onScreen/) &&\n      l('specialPopup').children[0].style.background.match(/dragon/)) !== null\n  ) {\n    for (let i = 0; i < l('specialPopup').childNodes.length; i++) {\n      if (l('specialPopup').childNodes[i].className === 'optionBox') {\n        l('specialPopup').children[i].onmouseover = function () {\n          CacheDragonCost();\n          Game.tooltip.dynamic = 1;\n          Game.tooltip.draw(\n            l('specialPopup'),\n            `<div style=\"min-width:200px;text-align:center;\">${CacheCostDragonUpgrade}</div>`,\n            'this',\n          );\n          Game.tooltip.wobble();\n        };\n        l('specialPopup').children[i].onmouseout = function () {\n          Game.tooltip.shouldHide = 1;\n        };\n      }\n    }\n  }\n}\n","import { CacheDragonAura, CacheDragonAura2 } from '../../Cache/VariablesAndData';\nimport CalculateGains from '../Calculations/CalculateGains';\nimport CheckOtherAchiev from '../Calculations/CheckOtherAchiev';\nimport CopyData from '../SimulationData/CopyData';\nimport {\n  SimAchievementsOwned,\n  SimBuildingsOwned, // eslint-disable-line no-unused-vars\n  SimCookiesPs,\n  SimDragonAura,\n  SimDragonAura2,\n  SimObjects,\n} from '../VariablesAndData';\n\n/**\n * This functions calculates the cps and cost of changing a Dragon Aura\n * It is called by CM.Disp.AddAuraInfo()\n * @param\t{number}\t\t\taura\t\t\t\t\t\t\t\t\t\tThe number of the aura currently selected by the mouse/user\n * @returns {[number, number]} \t[CM.Sim.cookiesPs - Game.cookiesPs, price]\tThe bonus cps and the price of the change\n */\nexport default function CalculateChangeAura(aura) {\n  CopyData();\n\n  // Check if aura being changed is first or second aura\n  const auraToBeChanged = l('promptContent').children[0].innerHTML.includes('secondary');\n  if (auraToBeChanged) SimDragonAura2 = aura;\n  else SimDragonAura = aura;\n\n  // Sell highest building but only if aura is different\n  let price = 0;\n  if (SimDragonAura !== CacheDragonAura || SimDragonAura2 !== CacheDragonAura2) {\n    for (let i = Game.ObjectsById.length - 1; i > -1; --i) {\n      if (Game.ObjectsById[i].amount > 0) {\n        const highestBuilding = SimObjects[Game.ObjectsById[i].name].name;\n        SimObjects[highestBuilding].amount -= 1;\n        SimBuildingsOwned -= 1;\n        price =\n          SimObjects[highestBuilding].basePrice *\n          Game.priceIncrease **\n            Math.max(0, SimObjects[highestBuilding].amount - 1 - SimObjects[highestBuilding].free);\n        price = Game.modifyBuildingPrice(SimObjects[highestBuilding], price);\n        price = Math.ceil(price);\n        break;\n      }\n    }\n  }\n\n  const lastAchievementsOwned = SimAchievementsOwned;\n  CalculateGains();\n\n  CheckOtherAchiev();\n  if (lastAchievementsOwned !== SimAchievementsOwned) {\n    CalculateGains();\n  }\n  return [SimCookiesPs - Game.cookiesPs, price];\n}\n","import { CMOptions } from '../../Config/VariablesAndData';\nimport AddMenuStats from './Statistics/AddStatsPage';\nimport AddMenuInfo from './Info/InfoPage';\nimport AddMenuPref from './Settings/SettingsPage';\n\n/**\n * This function adds the calll the functions to add extra info to the stats and options pages\n */\nexport default function AddMenu() {\n  const title = document.createElement('div');\n  title.className = 'title';\n\n  if (Game.onMenu === 'prefs') {\n    title.textContent = 'Cookie Monster Settings';\n    AddMenuPref(title);\n  } else if (Game.onMenu === 'stats') {\n    if (CMOptions.Stats) {\n      title.textContent = 'Cookie Monster Statistics';\n      AddMenuStats(title);\n    }\n  } else if (Game.onMenu === 'log') {\n    title.textContent = 'Cookie Monster '; // To create space between name and button\n    AddMenuInfo(title);\n  }\n}\n","import { LoadConfig } from '../../../Config/SaveLoadReload/SaveLoadReloadSettings';\nimport { CMOptions } from '../../../Config/VariablesAndData';\nimport { ConfigGroups, ConfigGroupsNotification } from '../../../Data/Sectionheaders.ts';\nimport Config from '../../../Data/SettingsData';\nimport ConfigDefault from '../../../Data/SettingsDefault.ts';\nimport { FavouriteSettings } from '../../VariablesAndData';\nimport CreatePrefHeader from './CreateHeader';\nimport CreatePrefOption from './CreateOption';\n\n/**\n * This function adds the options/settings of CookieMonster to the options page\n * It is called by CM.Disp.AddMenu\n * @param {object} title\tOn object that includes the title of the menu\n */\nexport default function AddMenuPref(title) {\n  const frag = document.createDocumentFragment();\n  frag.appendChild(title);\n\n  Object.keys(ConfigGroups).forEach((group) => {\n    if (group === 'Favourite') {\n      if (FavouriteSettings.length !== 0 && CMOptions.FavouriteSettings > 0) {\n        frag.appendChild(CreatePrefHeader(group, ConfigGroups[group])); // (group, display-name of group)\n        if (CMOptions.Header[group])\n          for (let index = 0; index < FavouriteSettings.length; index++) {\n            frag.appendChild(CreatePrefOption(FavouriteSettings[index]));\n          }\n      }\n    } else {\n      frag.appendChild(CreatePrefHeader(group, ConfigGroups[group])); // (group, display-name of group)\n      if (CMOptions.Header[group]) {\n        // 0 is show, 1 is collapsed\n        // Make sub-sections of Notification section\n        if (group === 'Notification') {\n          Object.keys(ConfigGroupsNotification).forEach((subGroup) => {\n            const subGroupObject = CreatePrefHeader(subGroup, ConfigGroupsNotification[subGroup]); // (group, display-name of group)\n            subGroupObject.style.fontSize = '15px';\n            subGroupObject.style.opacity = '0.5';\n            frag.appendChild(subGroupObject);\n            if (CMOptions.Header[subGroup]) {\n              Object.keys(Config).forEach((option) => {\n                if (Config[option].group === subGroup) frag.appendChild(CreatePrefOption(option));\n              });\n            }\n          });\n        } else {\n          Object.keys(Config).forEach((option) => {\n            if (Config[option].group === group) frag.appendChild(CreatePrefOption(option));\n          });\n        }\n      }\n    }\n  });\n\n  const resDef = document.createElement('div');\n  resDef.className = 'listing';\n  const resDefBut = document.createElement('a');\n  resDefBut.className = 'option';\n  resDefBut.onclick = function () {\n    LoadConfig(ConfigDefault);\n  };\n  resDefBut.textContent = 'Restore Default';\n  resDef.appendChild(resDefBut);\n  frag.appendChild(resDef);\n\n  l('menu').childNodes[2].insertBefore(\n    frag,\n    l('menu').childNodes[2].childNodes[l('menu').childNodes[2].childNodes.length - 1],\n  );\n}\n","/** Functions related to the Stats page */\n\nimport { ToggleHeader } from '../../../Config/ToggleSetting';\nimport { CMOptions } from '../../../Config/VariablesAndData';\nimport { LatestReleaseNotes, ModDescription } from '../../../Data/Moddata.ts';\n\n/**\n * This function adds info about by CookieMonster to the info page\n * @param {object} title\tOn object that includes the title of the menu\n */\nexport default function AddMenuInfo(title) {\n  const info = document.createElement('div');\n  info.className = 'subsection';\n\n  const span = document.createElement('span');\n  span.style.cursor = 'pointer';\n  span.style.display = 'inline-block';\n  span.style.height = '14px';\n  span.style.width = '14px';\n  span.style.borderRadius = '7px';\n  span.style.textAlign = 'center';\n  span.style.backgroundColor = '#C0C0C0';\n  span.style.color = 'black';\n  span.style.fontSize = '13px';\n  span.style.verticalAlign = 'middle';\n  span.textContent = CMOptions.Header.InfoTab ? '-' : '+';\n  span.onclick = function () {\n    ToggleHeader('InfoTab');\n    Game.UpdateMenu();\n  };\n  title.appendChild(span);\n  info.appendChild(title);\n\n  if (CMOptions.Header.InfoTab) {\n    const description = document.createElement('div');\n    description.innerHTML = ModDescription;\n    info.appendChild(description);\n    const notes = document.createElement('div');\n    notes.innerHTML = LatestReleaseNotes;\n    info.appendChild(notes);\n  }\n\n  const menu = l('menu').children[1];\n  menu.insertBefore(info, menu.children[1]);\n}\n","/** Data related directly to Cookie Monster */\n\nexport const VersionMajor = '2.031';\nexport const VersionMinor = '9';\n\n/** Information about Cookie Monster to be displayed in the info section */\nexport const ModDescription = `<div class=\"listing\">\n <a href=\"https://github.com/CookieMonsterTeam/CookieMonster\" target=\"blank\">Cookie Monster</a>\n offers a wide range of tools and statistics to enhance your game experience.\n It is not a cheat interface – although it does offer helpers for golden cookies and such, everything can be toggled off at will to only leave how much information you want.</br>\n Progess on new updates and all previous release notes can be found on the GitHub page linked above!</br>\n Please also report any bugs you may find over there!</br>\n </div>\n `;\n\n/** Latest releasenotes of Cookie Monster to be displayed in the info section */\nexport const LatestReleaseNotes = `<div class=\"listing\">\nThis update implements the following functions:</br>\n- HOTFIX: Fixed the possibility of clicking Golden Cookies multiple times with autoclickers</br>\n- For developers: we now expose some data calculated by Cookie Monster to the global scope. You can access it through the CookieMonsterData object</br>\n- The column with the most optimal building now has a green coloured indicator whenever colour coding is turned on</br>\n- The current season in the seasons statistics section is now displayed with green text for easier identification</br>\n- New option to show a timer bar that counts down till next autosave</br>\n- New option to sort buildings based on the \"cost till next achievement\"</br>\n- Added extra information about achievements in statistics page</br>\n</br>\nThis update fixes the following bugs:</br>\n- Fixed a bug where ignoring certain buildings in rare cases did not create a \"most optimal building\"</br>\n- Fixed some issues related to \"left till achievement\"</br>\n- Fixed some cases where upgrades and buildings were not correctly sorted</br>\n- Fixed the tooltip of \"Pop all normal wrinklers\" displaying an incorrect reward when Shiny's are present</br>\n</div>\n`;\n","/** Functions related to updating the tab in the browser's tab-bar */\n\nimport { CacheSeasonPopShimmer, CacheSpawnedGoldenShimmer } from '../../Cache/VariablesAndData';\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport { LastSeasonPopupState, LastTickerFortuneState } from '../../Main/VariablesAndData';\nimport { Title } from '../VariablesAndData';\n\n/**\n * This function updates the tab title\n * It is called on every loop by Game.Logic() which also sets CM.Disp.Title to Game.cookies\n */\nexport default function UpdateTitle() {\n  if (Game.OnAscend || CMOptions.Title === 0) {\n    document.title = Title;\n  } else if (CMOptions.Title === 1) {\n    let addFC = false;\n    let addSP = false;\n    let titleGC;\n    let titleFC;\n    let titleSP;\n\n    if (CacheSpawnedGoldenShimmer) {\n      if (CacheSpawnedGoldenShimmer.wrath)\n        titleGC = `[W${Math.ceil(CacheSpawnedGoldenShimmer.life / Game.fps)}]`;\n      else titleGC = `[G${Math.ceil(CacheSpawnedGoldenShimmer.life / Game.fps)}]`;\n    } else if (!Game.Has('Golden switch [off]')) {\n      titleGC = `[${Number(l('CMTimerBarGCMinBar').textContent) < 0 ? '!' : ''}${Math.ceil(\n        (Game.shimmerTypes.golden.maxTime - Game.shimmerTypes.golden.time) / Game.fps,\n      )}]`;\n    } else titleGC = '[GS]';\n\n    if (LastTickerFortuneState) {\n      addFC = true;\n      titleFC = '[F]';\n    }\n\n    if (Game.season === 'christmas') {\n      addSP = true;\n      if (LastSeasonPopupState) titleSP = `[R${Math.ceil(CacheSeasonPopShimmer.life / Game.fps)}]`;\n      else {\n        titleSP = `[${Number(l('CMTimerBarRenMinBar').textContent) < 0 ? '!' : ''}${Math.ceil(\n          (Game.shimmerTypes.reindeer.maxTime - Game.shimmerTypes.reindeer.time) / Game.fps,\n        )}]`;\n      }\n    }\n\n    // Remove previous timers and add current cookies\n    let str = Title;\n    if (str.charAt(0) === '[') {\n      str = str.substring(str.lastIndexOf(']') + 1);\n    }\n    document.title = `${titleGC + (addFC ? titleFC : '') + (addSP ? titleSP : '')} ${str}`;\n  } else if (CMOptions.Title === 2) {\n    let str = '';\n    let spawn = false;\n    if (CacheSpawnedGoldenShimmer) {\n      spawn = true;\n      if (CacheSpawnedGoldenShimmer.wrath)\n        str += `[W${Math.ceil(CacheSpawnedGoldenShimmer.life / Game.fps)}]`;\n      else str += `[G${Math.ceil(CacheSpawnedGoldenShimmer.life / Game.fps)}]`;\n    }\n    if (LastTickerFortuneState) {\n      spawn = true;\n      str += '[F]';\n    }\n    if (Game.season === 'christmas' && LastSeasonPopupState) {\n      str += `[R${Math.ceil(CacheSeasonPopShimmer.life / Game.fps)}]`;\n      spawn = true;\n    }\n    if (spawn) str += ' - ';\n    let title = 'Cookie Clicker';\n    if (Game.season === 'fools') title = 'Cookie Baker';\n    str += title;\n    document.title = str;\n  }\n}\n","import {\n  CacheHCPerSecond,\n  CacheLastHeavenlyChips,\n  CacheTimeTillNextPrestige,\n} from '../../Cache/VariablesAndData';\nimport { CMOptions } from '../../Config/VariablesAndData';\nimport Beautify from '../BeautifyAndFormatting/Beautify';\n\n/**\n * This function creates a header object for tooltips.\n * @param\t{string}\ttext\tTitle of header\n * @returns {object}\tdiv\t\tAn object containing the stylized header\n */\nexport default function ReplaceAscendTooltip() {\n  const cookiesToNext = Math.max(\n    0,\n    Game.HowManyCookiesReset(\n      Math.floor(Game.HowMuchPrestige(Game.cookiesReset + Game.cookiesEarned)) + 1,\n    ) -\n      (Game.cookiesEarned + Game.cookiesReset),\n  );\n\n  const startDate = Game.sayTime(((Date.now() - Game.startDate) / 1000) * Game.fps, -1);\n  let str = '';\n  str += `You've been on this run for <b>${\n    startDate === '' ? 'not very long' : startDate\n  }</b>.<br>`;\n  str += '<div class=\"line\"></div>';\n  if (Game.prestige > 0) {\n    str += `Your prestige level is currently <b>${Beautify(Game.prestige)}</b>.<br>(CpS +${Beautify(\n      Game.prestige,\n    )}%)`;\n    str += '<div class=\"line\"></div>';\n  }\n  if (CacheLastHeavenlyChips < 1) str += 'Ascending now would grant you no prestige.';\n  else if (CacheLastHeavenlyChips < 2)\n    str +=\n      'Ascending now would grant you<br><b>1 prestige level</b> (+1% CpS)<br>and <b>1 heavenly chip</b> to spend.';\n  else\n    str += `Ascending now would grant you<br><b>${Beautify(\n      CacheLastHeavenlyChips,\n    )} prestige levels</b> (+${Beautify(CacheLastHeavenlyChips)}% CpS)<br>and <b>${Beautify(\n      CacheLastHeavenlyChips,\n    )} heavenly chips</b> to spend.`;\n  str += '<div class=\"line\"></div>';\n  str += `You need <b>${Beautify(cookiesToNext)} more cookies</b> for the next level.<br>`;\n  str += `${\n    CMOptions.TooltipAscendButton\n      ? `<div class='line'></div>It takes ${CacheTimeTillNextPrestige} to reach the next level and you were making ${Beautify(\n          CacheHCPerSecond,\n          2,\n        )} chips on average in the last 5 seconds.<br>`\n      : ''\n  }`;\n  l('ascendTooltip').innerHTML = str;\n}\n","import InitCache from '../Cache/CacheInit';\nimport { CacheStatsCookies } from '../Cache/Stats/Stats';\nimport { LoadConfig } from '../Config/SaveLoadReload/SaveLoadReloadSettings';\nimport { VersionMajor, VersionMinor } from '../Data/Moddata.ts';\nimport CreateUpgradeBar from '../Disp/BuildingsUpgrades/UpgradeBar';\nimport { CreateBotBar } from '../Disp/InfoBars/BottomBar';\nimport { CreateTimerBar } from '../Disp/InfoBars/TimerBar';\nimport CreateSectionHideButtons from '../Disp/Initialization/CreateSectionHideButtons';\nimport CreateWrinklerButtons from '../Disp/Initialization/CreateWrinklerButton';\nimport CreateCssArea from '../Disp/Initialization/CssArea';\nimport UpdateBuildingUpgradeStyle from '../Disp/Initialization/UpdateBuildingUpgradeStyle';\nimport CreateFlashScreen from '../Disp/Initialization/FlashScreen';\nimport { CreateFavicon } from '../Disp/TabTitle/FavIcon';\nimport { CreateSimpleTooltip } from '../Disp/Tooltips/Tooltip';\nimport { CMLastAscendState, TooltipText } from '../Disp/VariablesAndData'; // eslint-disable-line no-unused-vars\nimport InitData from '../Sim/InitializeData/InitData';\nimport ReplaceNativeGrimoire from './ReplaceGameElements/NativeGrimoire';\nimport ReplaceTooltips from './ReplaceGameElements/Tooltips';\nimport ReplaceNative from './ReplaceGameFunctions/ReplaceNative';\nimport { LastModCount } from './VariablesAndData'; // eslint-disable-line no-unused-vars\nimport AddWrinklerAreaDetect from './WrinklerArea/AddDetectArea';\nimport CreateBuildingLockButtons from '../Disp/Buildings/CreateBuildingLockButtons';\n\n/**\n * Initialization loop of Cookie Monster\n */\nexport default function InitializeCookieMonster() {\n  // Create global data object\n  window.CookieMonsterData = {};\n\n  InitData();\n  CacheStatsCookies();\n  InitCache();\n\n  // Stored to check if we need to re-initiliaze data\n  LastModCount = Object.keys(Game.mods).length;\n\n  // Creating visual elements\n  CreateCssArea();\n  CreateBotBar();\n  CreateTimerBar();\n  CreateUpgradeBar();\n  CreateFlashScreen();\n  CreateSectionHideButtons();\n  CreateFavicon();\n  Object.keys(TooltipText).forEach((i) => {\n    CreateSimpleTooltip(TooltipText[i][0], TooltipText[i][1], TooltipText[i][2]);\n  });\n  CreateWrinklerButtons();\n  UpdateBuildingUpgradeStyle();\n  CreateBuildingLockButtons();\n\n  ReplaceTooltips();\n  AddWrinklerAreaDetect();\n\n  // Replace native functions\n  ReplaceNative();\n  ReplaceNativeGrimoire();\n  Game.CalculateGains();\n\n  LoadConfig();\n  CMLastAscendState = Game.OnAscend;\n\n  if (Game.prefs.popups)\n    Game.Popup(`Cookie Monster version ${VersionMajor}.${VersionMinor} loaded!`);\n  else Game.Notify(`Cookie Monster version ${VersionMajor}.${VersionMinor} loaded!`, '', '', 1, 1);\n\n  Game.Win('Third-party');\n}\n","import { DispCSS } from '../VariablesAndData';\n\n/**\n * This function creates a CSS style that stores certain standard CSS classes used by CookieMonster\n\n */\nexport default function CreateCssArea() {\n  DispCSS = document.createElement('style');\n  DispCSS.type = 'text/css';\n  DispCSS.id = 'CMCSS';\n\n  document.head.appendChild(DispCSS);\n}\n","import {\n  ColourBackPre,\n  ColourBlue,\n  ColourGray,\n  ColourGreen,\n  ColourOrange,\n  ColourPurple,\n  ColourRed,\n  ColourTextPre,\n  ColourYellow,\n} from '../VariablesAndData';\n\n/**\n * This function creates the legend for the upgrade bar\n * @returns\t{object}\tlegend\tThe legend-object to be added\n */\nfunction CreateUpgradeBarLegend() {\n  const legend = document.createElement('div');\n  legend.style.minWidth = '330px';\n  legend.style.marginBottom = '4px';\n  const title = document.createElement('div');\n  title.className = 'name';\n  title.style.marginBottom = '4px';\n  title.textContent = 'Legend';\n  legend.appendChild(title);\n\n  const legendLine = function (color, text) {\n    const div = document.createElement('div');\n    div.style.verticalAlign = 'middle';\n    const span = document.createElement('span');\n    span.className = ColourBackPre + color;\n    span.style.display = 'inline-block';\n    span.style.height = '10px';\n    span.style.width = '10px';\n    span.style.marginRight = '4px';\n    div.appendChild(span);\n    div.appendChild(document.createTextNode(text));\n    return div;\n  };\n\n  legend.appendChild(legendLine(ColourBlue, 'Better than the best PP of a building option'));\n  legend.appendChild(legendLine(ColourGreen, 'Same as the best PP building option'));\n  legend.appendChild(legendLine(ColourYellow, 'Within the top 10 of PP for buildings'));\n  legend.appendChild(legendLine(ColourOrange, 'Within the top 20 of PP for buildings'));\n  legend.appendChild(legendLine(ColourRed, 'Within the top 30 of PP for buildings'));\n  legend.appendChild(legendLine(ColourPurple, 'Outside of the top 30 of PP for buildings'));\n  legend.appendChild(legendLine(ColourGray, 'Negative or infinity PP'));\n  return legend;\n}\n\n/**\n * This function creates the upgrade bar above the upgrade-section in the right section of the screen\n */\nexport default function CreateUpgradeBar() {\n  const UpgradeBar = document.createElement('div');\n  UpgradeBar.id = 'CMUpgradeBar';\n  UpgradeBar.style.width = '100%';\n  UpgradeBar.style.backgroundColor = 'black';\n  UpgradeBar.style.textAlign = 'center';\n  UpgradeBar.style.fontWeight = 'bold';\n  UpgradeBar.style.display = 'none';\n  UpgradeBar.style.zIndex = '21';\n  UpgradeBar.onmouseout = function () {\n    Game.tooltip.hide();\n  };\n\n  const placeholder = document.createElement('div');\n  placeholder.appendChild(CreateUpgradeBarLegend());\n  UpgradeBar.onmouseover = function () {\n    Game.tooltip.draw(this, escape(placeholder.innerHTML), 'store');\n  };\n\n  const upgradeNumber = function (id, color) {\n    const span = document.createElement('span');\n    span.id = id;\n    span.className = ColourTextPre + color;\n    span.style.width = '14.28571428571429%';\n    span.style.display = 'inline-block';\n    span.textContent = '0';\n    return span;\n  };\n  UpgradeBar.appendChild(upgradeNumber('CMUpgradeBarBlue', ColourBlue));\n  UpgradeBar.appendChild(upgradeNumber('CMUpgradeBarGreen', ColourGreen));\n  UpgradeBar.appendChild(upgradeNumber('CMUpgradeBarYellow', ColourYellow));\n  UpgradeBar.appendChild(upgradeNumber('CMUpgradeBarOrange', ColourOrange));\n  UpgradeBar.appendChild(upgradeNumber('CMUpgradeBarRed', ColourRed));\n  UpgradeBar.appendChild(upgradeNumber('CMUpgradeBarPurple', ColourPurple));\n  UpgradeBar.appendChild(upgradeNumber('CMUpgradeBarGray', ColourGray));\n\n  l('upgrades').parentNode.insertBefore(UpgradeBar, l('upgrades').parentNode.childNodes[3]);\n}\n","/**\n * This function creates a white square over the full screen and appends it to l('wrapper')\n */\nexport default function CreateFlashScreen() {\n  const WhiteScreen = document.createElement('div');\n  WhiteScreen.id = 'CMFlashScreen';\n  WhiteScreen.style.width = '100%';\n  WhiteScreen.style.height = '100%';\n  WhiteScreen.style.backgroundColor = 'white';\n  WhiteScreen.style.display = 'none';\n  WhiteScreen.style.zIndex = '9999999999';\n  WhiteScreen.style.position = 'absolute';\n  l('wrapper').appendChild(WhiteScreen);\n}\n","/**\n * This function creates two objects at the top of the right column that allowing hiding the upgrade and building section\n */\nexport default function CreateSectionHideButtons() {\n  const div = document.createElement('div');\n  div.id = 'CMSectionHidButtons';\n  div.style.textAlign = 'center';\n  const a = document.createElement('a');\n  a.className = 'option';\n  a.onclick = function () {\n    if (l('upgrades').style.display === 'flex') {\n      l('upgrades').style.display = 'none';\n      l('toggleUpgrades').style.display = 'none';\n      l('techUpgrades').style.display = 'none';\n      l('vaultUpgrades').style.display = 'none';\n    } else {\n      l('upgrades').style.display = 'flex';\n      if (l('toggleUpgrades').children.length !== 0) l('toggleUpgrades').style.display = 'block';\n      if (l('techUpgrades').children.length !== 0) l('techUpgrades').style.display = 'block';\n      if (l('vaultUpgrades').children.length !== 0) l('vaultUpgrades').style.display = 'block';\n    }\n  };\n  a.textContent = 'Hide/Show Upgrades';\n  div.appendChild(a);\n  const b = document.createElement('a');\n  b.className = 'option';\n  b.onclick = function () {\n    if (l('products').style.display === 'grid') l('products').style.display = 'none';\n    else l('products').style.display = 'grid';\n  };\n  b.textContent = 'Hide/Show Buildings';\n  div.appendChild(b);\n  l('store').insertBefore(div, l('store').childNodes[2]);\n}\n","import { CacheWrinklersFattest } from '../../Cache/VariablesAndData';\nimport PopAllNormalWrinklers from '../HelperFunctions/PopWrinklers';\nimport { CreateTooltip } from '../Tooltips/Tooltip';\n\n/**\n * This function creates two objects at the bottom of the left column that allowing popping of wrinklers\n */\nexport default function CreateWrinklerButtons() {\n  const popAllA = document.createElement('a');\n  popAllA.id = 'PopAllNormalWrinklerButton';\n  popAllA.textContent = 'Pop All Normal';\n  popAllA.className = 'option';\n  popAllA.onclick = function () {\n    PopAllNormalWrinklers();\n  };\n  popAllA.onmouseout = function () {\n    Game.tooltip.shouldHide = 1;\n  };\n  popAllA.onmouseover = function () {\n    Game.tooltip.dynamic = 1;\n    Game.tooltip.draw(this, () => CreateTooltip('wb', 'PopAllNormal'), 'this');\n    Game.tooltip.wobble();\n  };\n  l('sectionLeftExtra').children[0].append(popAllA);\n  const popFattestA = document.createElement('a');\n  popFattestA.id = 'PopFattestWrinklerButton';\n  popFattestA.textContent = 'Pop Single Fattest';\n  popFattestA.className = 'option';\n  popFattestA.onclick = function () {\n    if (CacheWrinklersFattest[1] !== null) Game.wrinklers[CacheWrinklersFattest[1]].hp = 0;\n  };\n  popFattestA.onmouseout = function () {\n    Game.tooltip.shouldHide = 1;\n  };\n  popFattestA.onmouseover = function () {\n    Game.tooltip.dynamic = 1;\n    Game.tooltip.draw(this, () => CreateTooltip('wb', 'PopFattest'), 'this');\n    Game.tooltip.wobble();\n  };\n  l('sectionLeftExtra').children[0].append(popFattestA);\n}\n","/**\n * This function updates the style of the building and upgrade sections to make these sortable\n */\nexport default function UpdateBuildingUpgradeStyle() {\n  l('products').style.display = 'grid';\n  l('storeBulk').style.gridRow = '1/1';\n\n  l('upgrades').style.display = 'flex';\n  l('upgrades').style['flex-wrap'] = 'wrap';\n}\n","import ToggleBuildingLock from './ToggleBuildingLock';\n\n/**\n * This function adds a lock button to the \"building view\" in the middle section\n */\nexport default function CreateBuildingLockButtons() {\n  Object.keys(l('rows').children).forEach((index) => {\n    const productButtons = l('rows').children[index].children[1];\n    const button = document.createElement('div');\n    button.id = `productLock${Number(index) + 1}`;\n    button.className = 'productButton';\n    button.innerHTML = 'Unlocked';\n    button.onclick = function () {\n      ToggleBuildingLock(Number(index) + 1);\n    };\n    productButtons.appendChild(button);\n  });\n}\n","/**\n * This function toggle the locked state of a building\n * @param\t{number}\tindex\tIndex of the row to change\n */\nexport default function ToggleBuildingLock(index) {\n  if (l(`productLock${index}`).innerHTML === 'Unlocked') {\n    l(`productLock${index}`).innerHTML = 'Locked';\n    l(`row${index}`).children[3].style.pointerEvents = 'none';\n  } else {\n    l(`productLock${index}`).innerHTML = 'Unlocked';\n    l(`row${index}`).children[3].style.pointerEvents = 'auto';\n  }\n}\n","/** Functions related to replacing tooltips */\n\nimport { CreateTooltip } from '../../Disp/Tooltips/Tooltip';\nimport { LoadMinigames, TooltipBuildBackup, TooltipLumpBackup } from '../VariablesAndData'; // eslint-disable-line no-unused-vars\nimport ReplaceNativeGrimoire from './NativeGrimoire';\nimport ReplaceTooltipGrimoire from './TooltipGrimoire';\n\n/**\n * This function replaces the original .onmouseover functions of buildings\n */\nfunction ReplaceTooltipBuild() {\n  Object.keys(Game.Objects).forEach((i) => {\n    const me = Game.Objects[i];\n    if (l(`product${me.id}`).onmouseover !== null) {\n      TooltipBuildBackup[i] = l(`product${me.id}`).onmouseover;\n      l(`product${me.id}`).onmouseover = function () {\n        Game.tooltip.dynamic = 1;\n        Game.tooltip.draw(this, () => CreateTooltip('b', `${i}`), 'store');\n        Game.tooltip.wobble();\n      };\n    }\n  });\n}\n\n/**\n * This function replaces the original .onmouseover functions of sugar lumps\n */\nfunction ReplaceTooltipLump() {\n  if (Game.canLumps()) {\n    TooltipLumpBackup = l('lumps').onmouseover;\n    l('lumps').onmouseover = function () {\n      Game.tooltip.dynamic = 1;\n      Game.tooltip.draw(this, () => CreateTooltip('s', 'Lump'), 'this');\n      Game.tooltip.wobble();\n    };\n  }\n}\n\n/**\n * This function replaces the original .onmouseover functions of all garden plants\n */\nfunction ReplaceTooltipGarden() {\n  if (Game.Objects.Farm.minigameLoaded) {\n    l('gardenTool-1').onmouseover = function () {\n      Game.tooltip.dynamic = 1;\n      Game.tooltip.draw(this, () => CreateTooltip('ha', 'HarvestAllButton'), 'this');\n      Game.tooltip.wobble();\n    };\n    Array.from(l('gardenPlot').children).forEach((child) => {\n      const coords = child.id.slice(-3);\n      // eslint-disable-next-line no-param-reassign\n      child.onmouseover = function () {\n        Game.tooltip.dynamic = 1;\n        Game.tooltip.draw(this, () => CreateTooltip('p', [`${coords[0]}`, `${coords[2]}`]), 'this');\n        Game.tooltip.wobble();\n      };\n    });\n  }\n}\n\nfunction ReplaceTooltipPantheon() {\n  if (Game.Objects.Temple.minigameLoaded) {\n    for (let i = 0; i < 11; i += 1) {\n      l(`templeGod${i}`).onmouseover = function () {\n        Game.tooltip.dynamic = 1;\n        Game.tooltip.draw(this, () => CreateTooltip('pag', i), 'this');\n        Game.tooltip.wobble();\n      };\n    }\n    for (let i = 0; i < 3; i += 1) {\n      l(`templeSlot${i}`).onmouseover = function () {\n        Game.tooltip.dynamic = 1;\n        Game.tooltip.draw(\n          this,\n          () => CreateTooltip('pas', [i, Game.Objects.Temple.minigame.slot[i]]),\n          'this',\n        );\n        Game.tooltip.wobble();\n      };\n    }\n  }\n}\n\n/**\n * This function call all functions that replace Game-tooltips with Cookie Monster enhanced tooltips\n */\nexport default function ReplaceTooltips() {\n  ReplaceTooltipBuild();\n  ReplaceTooltipLump();\n\n  // Replace Tooltips of Minigames. Nesting it in LoadMinigames makes sure to replace them even if\n  // they were not loaded initially\n  // eslint-disable-next-line prefer-destructuring\n  LoadMinigames = Game.LoadMinigames;\n  Game.LoadMinigames = function () {\n    LoadMinigames();\n    ReplaceTooltipGarden();\n    ReplaceTooltipGrimoire();\n    ReplaceTooltipPantheon();\n    ReplaceNativeGrimoire();\n  };\n  Game.LoadMinigames();\n}\n","import { TooltipWrinklerArea, TooltipWrinklerBeingShown } from '../../Disp/VariablesAndData'; // eslint-disable-line no-unused-vars\n\n/**\n * This function creates .onmouseover/out events that determine if the mouse is hovering-over a Wrinkler\n * As wrinklers are not appended to the DOM we us a different system than for other tooltips\n */\nexport default function AddWrinklerAreaDetect() {\n  l('backgroundLeftCanvas').onmouseover = function () {\n    TooltipWrinklerArea = 1;\n  };\n  l('backgroundLeftCanvas').onmouseout = function () {\n    TooltipWrinklerArea = 0;\n    Game.tooltip.hide();\n    Object.keys(Game.wrinklers).forEach((i) => {\n      TooltipWrinklerBeingShown[i] = 0;\n    });\n  };\n}\n","import init from './InitSaveLoad/init';\nimport load from './InitSaveLoad/load';\nimport save from './InitSaveLoad/save';\n\nconst CM = {\n  init,\n  load,\n  save,\n};\n\nGame.registerMod('CookieMonster', CM);\n","import { VersionMajor, VersionMinor } from '../Data/Moddata.ts';\nimport CMDrawHook from '../Disp/DrawHook';\nimport CMClickHook from '../Main/ClickHook';\nimport InitializeCookieMonster from '../Main/Initialization';\nimport CMLoopHook from '../Main/LoopHook';\nimport { isInitializing } from './Variables'; // eslint-disable-line no-unused-vars\n\n/**\n * This creates a init function for the CM object. Per Game code/comments:\n * \"this function is called as soon as the mod is registered\n * declare hooks here\"\n * It starts the further initialization of CookieMonster and registers hooks\n */\nexport default function init() {\n  isInitializing = true;\n  let proceed = true;\n  if (Game.version !== Number(VersionMajor)) {\n    // eslint-disable-next-line no-restricted-globals, no-alert\n    proceed = confirm(\n      `Cookie Monster version ${VersionMajor}.${VersionMinor} is meant for Game version ${VersionMajor}. Loading a different version may cause errors. Do you still want to load Cookie Monster?`,\n    );\n  }\n  if (proceed) {\n    InitializeCookieMonster();\n    Game.registerHook('click', CMClickHook);\n    Game.registerHook('draw', CMDrawHook);\n    Game.registerHook('logic', CMLoopHook);\n\n    isInitializing = false;\n  }\n}\n","import { LoadConfig } from '../Config/SaveLoadReload/SaveLoadReloadSettings';\nimport { VersionMajor, VersionMinor } from '../Data/Moddata.ts';\nimport { FavouriteSettings } from '../Disp/VariablesAndData'; // eslint-disable-line no-unused-vars\nimport InitData from '../Sim/InitializeData/InitData';\n\n/**\n * This creates a load function to the CM object. Per Game code/comments:\n * \"do stuff with the string data you saved previously\"\n */\nexport default function load(str) {\n  const save = JSON.parse(str);\n  InitData();\n  // The if-statement is a failsafe for old saves\n  if (typeof save.favouriteSettings !== 'undefined') FavouriteSettings = save.favouriteSettings;\n  LoadConfig(save.settings);\n  if (save.version !== `${VersionMajor}.${VersionMinor}`) {\n    if (Game.prefs.popups)\n      Game.Popup(\n        'A new version of Cookie Monster has been loaded, check out the release notes in the info tab!',\n      );\n    else\n      Game.Notify(\n        'A new version of Cookie Monster has been loaded, check out the release notes in the info tab!',\n        '',\n        '',\n        0,\n        1,\n      );\n  }\n}\n"],"sourceRoot":""}